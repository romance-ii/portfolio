;;; WARNING: This is a generated file, editing it is not advised!
(in-package :cl-user)
(asdf:operate 'asdf:load-op :verrazano-runtime)
(DEFPACKAGE :OPENGL-CFFI-BINDINGS (:USE :CFFI) (:NICKNAMES)
            (:EXPORT "+GLU-TESS-MAX-COORD+" "+GLU-TESS-WINDING-ABS-GEQ-TWO+"
             "+GLU-TESS-WINDING-NEGATIVE+" "+GLU-TESS-WINDING-POSITIVE+"
             "+GLU-TESS-WINDING-NONZERO+" "+GLU-TESS-WINDING-ODD+"
             "+GLU-TESS-NEED-COMBINE-CALLBACK+" "+GLU-TESS-COORD-TOO-LARGE+"
             "+GLU-TESS-MISSING-END-CONTOUR+" "+GLU-TESS-MISSING-END-POLYGON+"
             "+GLU-TESS-MISSING-BEGIN-CONTOUR+" "+GLU-TESS-MISSING-BEGIN-POLYGON+"
             "+GLU-TESS-ERROR-8+" "+GLU-TESS-ERROR-7+" "+GLU-TESS-ERROR-6+" "+GLU-TESS-ERROR-5+"
             "+GLU-TESS-ERROR-4+" "+GLU-TESS-ERROR-3+" "+GLU-TESS-ERROR-2+" "+GLU-TESS-ERROR-1+"
             "+GLU-TESS-TOLERANCE+" "+GLU-TESS-BOUNDARY-ONLY+" "+GLU-TESS-WINDING-RULE+"
             "+GLU-UNKNOWN+" "+GLU-EXTERIOR+" "+GLU-INTERIOR+" "+GLU-CCW+" "+GLU-CW+"
             "+GLU-TESS-COMBINE-DATA+" "+GLU-TESS-EDGE-FLAG-DATA+" "+GLU-TESS-ERROR-DATA+"
             "+GLU-TESS-END-DATA+" "+GLU-TESS-VERTEX-DATA+" "+GLU-TESS-BEGIN-DATA+"
             "+GLU-TESS-COMBINE+" "+GLU-EDGE-FLAG+" "+GLU-TESS-EDGE-FLAG+" "+GLU-TESS-ERROR+"
             "+GLU-END+" "+GLU-TESS-END+" "+GLU-VERTEX+" "+GLU-TESS-VERTEX+" "+GLU-BEGIN+"
             "+GLU-TESS-BEGIN+" "+GLU-INSIDE+" "+GLU-OUTSIDE+" "+GLU-NONE+" "+GLU-FLAT+"
             "+GLU-SMOOTH+" "+GLU-SILHOUETTE+" "+GLU-FILL+" "+GLU-LINE+" "+GLU-POINT+"
             "+GLU-MAP-1-TRIM-3+" "+GLU-MAP-1-TRIM-2+" "+GLU-DOMAIN-DISTANCE+"
             "+GLU-PARAMETRIC-ERROR+" "+GLU-PATH-LENGTH+" "+GLU-OBJECT-PATH-LENGTH-EXT+"
             "+GLU-OBJECT-PATH-LENGTH+" "+GLU-OBJECT-PARAMETRIC-ERROR-EXT+"
             "+GLU-OBJECT-PARAMETRIC-ERROR+" "+GLU-NURBS-RENDERER-EXT+" "+GLU-NURBS-RENDERER+"
             "+GLU-NURBS-TESSELLATOR-EXT+" "+GLU-NURBS-TESSELLATOR+" "+GLU-NURBS-MODE-EXT+"
             "+GLU-NURBS-MODE+" "+GLU-V-STEP+" "+GLU-U-STEP+" "+GLU-SAMPLING-METHOD+"
             "+GLU-PARAMETRIC-TOLERANCE+" "+GLU-DISPLAY-MODE+" "+GLU-SAMPLING-TOLERANCE+"
             "+GLU-CULLING+" "+GLU-AUTO-LOAD-MATRIX+" "+GLU-NURBS-ERROR-37+" "+GLU-NURBS-ERROR-36+"
             "+GLU-NURBS-ERROR-35+" "+GLU-NURBS-ERROR-34+" "+GLU-NURBS-ERROR-33+"
             "+GLU-NURBS-ERROR-32+" "+GLU-NURBS-ERROR-31+" "+GLU-NURBS-ERROR-30+"
             "+GLU-NURBS-ERROR-29+" "+GLU-NURBS-ERROR-28+" "+GLU-NURBS-ERROR-27+"
             "+GLU-NURBS-ERROR-26+" "+GLU-NURBS-ERROR-25+" "+GLU-NURBS-ERROR-24+"
             "+GLU-NURBS-ERROR-23+" "+GLU-NURBS-ERROR-22+" "+GLU-NURBS-ERROR-21+"
             "+GLU-NURBS-ERROR-20+" "+GLU-NURBS-ERROR-19+" "+GLU-NURBS-ERROR-18+"
             "+GLU-NURBS-ERROR-17+" "+GLU-NURBS-ERROR-16+" "+GLU-NURBS-ERROR-15+"
             "+GLU-NURBS-ERROR-14+" "+GLU-NURBS-ERROR-13+" "+GLU-NURBS-ERROR-12+"
             "+GLU-NURBS-ERROR-11+" "+GLU-NURBS-ERROR-10+" "+GLU-NURBS-ERROR-9+"
             "+GLU-NURBS-ERROR-8+" "+GLU-NURBS-ERROR-7+" "+GLU-NURBS-ERROR-6+"
             "+GLU-NURBS-ERROR-5+" "+GLU-NURBS-ERROR-4+" "+GLU-NURBS-ERROR-3+"
             "+GLU-NURBS-ERROR-2+" "+GLU-NURBS-ERROR-1+" "+GLU-NURBS-END-DATA-EXT+"
             "+GLU-NURBS-END-DATA+" "+GLU-NURBS-TEX-COORD-DATA-EXT+"
             "+GLU-NURBS-TEXTURE-COORD-DATA+" "+GLU-NURBS-COLOR-DATA-EXT+" "+GLU-NURBS-COLOR-DATA+"
             "+GLU-NURBS-NORMAL-DATA-EXT+" "+GLU-NURBS-NORMAL-DATA+" "+GLU-NURBS-VERTEX-DATA-EXT+"
             "+GLU-NURBS-VERTEX-DATA+" "+GLU-NURBS-BEGIN-DATA-EXT+" "+GLU-NURBS-BEGIN-DATA+"
             "+GLU-NURBS-END-EXT+" "+GLU-NURBS-END+" "+GLU-NURBS-TEX-COORD-EXT+"
             "+GLU-NURBS-TEXTURE-COORD+" "+GLU-NURBS-COLOR-EXT+" "+GLU-NURBS-COLOR+"
             "+GLU-NURBS-NORMAL-EXT+" "+GLU-NURBS-NORMAL+" "+GLU-NURBS-VERTEX-EXT+"
             "+GLU-NURBS-VERTEX+" "+GLU-NURBS-BEGIN-EXT+" "+GLU-NURBS-BEGIN+" "+GLU-ERROR+"
             "+GLU-NURBS-ERROR+" "+GLU-OUTLINE-PATCH+" "+GLU-OUTLINE-POLYGON+"
             "+GLU-INVALID-OPERATION+" "+GLU-INCOMPATIBLE-GL-VERSION+" "+GLU-OUT-OF-MEMORY+"
             "+GLU-INVALID-VALUE+" "+GLU-INVALID-ENUM+" "+GLU-EXTENSIONS+" "+GLU-VERSION+"
             "+GLU-VERSION-1-3+" "+GLU-VERSION-1-2+" "+GLU-VERSION-1-1+" "+GLU-TRUE+" "+GLU-FALSE+"
             "+GLU-EXT-NURBS-TESSELLATOR+" "+GLU-EXT-OBJECT-SPACE-TESS+"
             "+GL-ALPHA-BLEND-EQUATION-ATI+" "+GL-ATI-BLEND-EQUATION-SEPARATE+"
             "+GL-VERTEX-PROGRAM-CALLBACK-DATA-MESA+" "+GL-VERTEX-PROGRAM-CALLBACK-FUNC-MESA+"
             "+GL-VERTEX-PROGRAM-CALLBACK-MESA+" "+GL-VERTEX-PROGRAM-POSITION-MESA+"
             "+GL-FRAGMENT-PROGRAM-CALLBACK-DATA-MESA+" "+GL-FRAGMENT-PROGRAM-CALLBACK-FUNC-MESA+"
             "+GL-FRAGMENT-PROGRAM-CALLBACK-MESA+" "+GL-FRAGMENT-PROGRAM-POSITION-MESA+"
             "+GL-MESA-PROGRAM-DEBUG+" "+GL-UNSIGNED-SHORT-1-15-REV-MESA+"
             "+GL-UNSIGNED-SHORT-15-1-MESA+" "+GL-UNSIGNED-INT-8-24-REV-MESA+"
             "+GL-UNSIGNED-INT-24-8-MESA+" "+GL-DEPTH-STENCIL-MESA+"
             "+GL-MESA-PACKED-DEPTH-STENCIL+" "+GL-DEBUG-ASSERT-MESA+" "+GL-DEBUG-PRINT-MESA+"
             "+GL-DEBUG-OBJECT-MESA+" "+GL-MESA-SHADER-DEBUG+" "+GL-MAX-TEXTURE-UNITS-ARB+"
             "+GL-CLIENT-ACTIVE-TEXTURE-ARB+" "+GL-ACTIVE-TEXTURE-ARB+" "+GL-TEXTURE-31-ARB+"
             "+GL-TEXTURE-30-ARB+" "+GL-TEXTURE-29-ARB+" "+GL-TEXTURE-28-ARB+"
             "+GL-TEXTURE-27-ARB+" "+GL-TEXTURE-26-ARB+" "+GL-TEXTURE-25-ARB+"
             "+GL-TEXTURE-24-ARB+" "+GL-TEXTURE-23-ARB+" "+GL-TEXTURE-22-ARB+"
             "+GL-TEXTURE-21-ARB+" "+GL-TEXTURE-20-ARB+" "+GL-TEXTURE-19-ARB+"
             "+GL-TEXTURE-18-ARB+" "+GL-TEXTURE-17-ARB+" "+GL-TEXTURE-16-ARB+"
             "+GL-TEXTURE-15-ARB+" "+GL-TEXTURE-14-ARB+" "+GL-TEXTURE-13-ARB+"
             "+GL-TEXTURE-12-ARB+" "+GL-TEXTURE-11-ARB+" "+GL-TEXTURE-10-ARB+" "+GL-TEXTURE-9-ARB+"
             "+GL-TEXTURE-8-ARB+" "+GL-TEXTURE-7-ARB+" "+GL-TEXTURE-6-ARB+" "+GL-TEXTURE-5-ARB+"
             "+GL-TEXTURE-4-ARB+" "+GL-TEXTURE-3-ARB+" "+GL-TEXTURE-2-ARB+" "+GL-TEXTURE-1-ARB+"
             "+GL-TEXTURE-0-ARB+" "+GL-ARB-MULTITEXTURE+" "+GL-CLAMP-TO-BORDER+" "+GL-DOT-3-RGBA+"
             "+GL-DOT-3-RGB+" "+GL-PREVIOUS+" "+GL-PRIMARY-COLOR+" "+GL-CONSTANT+" "+GL-SUBTRACT+"
             "+GL-INTERPOLATE+" "+GL-ADD-SIGNED+" "+GL-RGB-SCALE+" "+GL-OPERAND-2-ALPHA+"
             "+GL-OPERAND-1-ALPHA+" "+GL-OPERAND-0-ALPHA+" "+GL-OPERAND-2-RGB+"
             "+GL-OPERAND-1-RGB+" "+GL-OPERAND-0-RGB+" "+GL-SOURCE-2-ALPHA+" "+GL-SOURCE-1-ALPHA+"
             "+GL-SOURCE-0-ALPHA+" "+GL-SOURCE-2-RGB+" "+GL-SOURCE-1-RGB+" "+GL-SOURCE-0-RGB+"
             "+GL-COMBINE-ALPHA+" "+GL-COMBINE-RGB+" "+GL-COMBINE+" "+GL-TRANSPOSE-COLOR-MATRIX+"
             "+GL-TRANSPOSE-TEXTURE-MATRIX+" "+GL-TRANSPOSE-PROJECTION-MATRIX+"
             "+GL-TRANSPOSE-MODELVIEW-MATRIX+" "+GL-MULTISAMPLE-BIT+" "+GL-SAMPLE-COVERAGE-INVERT+"
             "+GL-SAMPLE-COVERAGE-VALUE+" "+GL-SAMPLES+" "+GL-SAMPLE-BUFFERS+"
             "+GL-SAMPLE-COVERAGE+" "+GL-SAMPLE-ALPHA-TO-ONE+" "+GL-SAMPLE-ALPHA-TO-COVERAGE+"
             "+GL-MULTISAMPLE+" "+GL-COMPRESSED-TEXTURE-FORMATS+"
             "+GL-NUM-COMPRESSED-TEXTURE-FORMATS+" "+GL-TEXTURE-COMPRESSED+"
             "+GL-TEXTURE-COMPRESSED-IMAGE-SIZE+" "+GL-TEXTURE-COMPRESSION-HINT+"
             "+GL-COMPRESSED-RGBA+" "+GL-COMPRESSED-RGB+" "+GL-COMPRESSED-INTENSITY+"
             "+GL-COMPRESSED-LUMINANCE-ALPHA+" "+GL-COMPRESSED-LUMINANCE+" "+GL-COMPRESSED-ALPHA+"
             "+GL-MAX-CUBE-MAP-TEXTURE-SIZE+" "+GL-PROXY-TEXTURE-CUBE-MAP+"
             "+GL-TEXTURE-CUBE-MAP-NEGATIVE-Z+" "+GL-TEXTURE-CUBE-MAP-POSITIVE-Z+"
             "+GL-TEXTURE-CUBE-MAP-NEGATIVE-Y+" "+GL-TEXTURE-CUBE-MAP-POSITIVE-Y+"
             "+GL-TEXTURE-CUBE-MAP-NEGATIVE-X+" "+GL-TEXTURE-CUBE-MAP-POSITIVE-X+"
             "+GL-TEXTURE-BINDING-CUBE-MAP+" "+GL-TEXTURE-CUBE-MAP+" "+GL-REFLECTION-MAP+"
             "+GL-NORMAL-MAP+" "+GL-MAX-TEXTURE-UNITS+" "+GL-CLIENT-ACTIVE-TEXTURE+"
             "+GL-ACTIVE-TEXTURE+" "+GL-TEXTURE-31+" "+GL-TEXTURE-30+" "+GL-TEXTURE-29+"
             "+GL-TEXTURE-28+" "+GL-TEXTURE-27+" "+GL-TEXTURE-26+" "+GL-TEXTURE-25+"
             "+GL-TEXTURE-24+" "+GL-TEXTURE-23+" "+GL-TEXTURE-22+" "+GL-TEXTURE-21+"
             "+GL-TEXTURE-20+" "+GL-TEXTURE-19+" "+GL-TEXTURE-18+" "+GL-TEXTURE-17+"
             "+GL-TEXTURE-16+" "+GL-TEXTURE-15+" "+GL-TEXTURE-14+" "+GL-TEXTURE-13+"
             "+GL-TEXTURE-12+" "+GL-TEXTURE-11+" "+GL-TEXTURE-10+" "+GL-TEXTURE-9+"
             "+GL-TEXTURE-8+" "+GL-TEXTURE-7+" "+GL-TEXTURE-6+" "+GL-TEXTURE-5+" "+GL-TEXTURE-4+"
             "+GL-TEXTURE-3+" "+GL-TEXTURE-2+" "+GL-TEXTURE-1+" "+GL-TEXTURE-0+" "+GL-BLEND-COLOR+"
             "+GL-FUNC-REVERSE-SUBTRACT+" "+GL-FUNC-SUBTRACT+" "+GL-FUNC-ADD+" "+GL-MAX+"
             "+GL-MIN+" "+GL-BLEND-EQUATION+" "+GL-TABLE-TOO-LARGE+" "+GL-MINMAX-SINK+"
             "+GL-MINMAX-FORMAT+" "+GL-MINMAX+" "+GL-HISTOGRAM-SINK+"
             "+GL-HISTOGRAM-LUMINANCE-SIZE+" "+GL-HISTOGRAM-ALPHA-SIZE+" "+GL-HISTOGRAM-BLUE-SIZE+"
             "+GL-HISTOGRAM-GREEN-SIZE+" "+GL-HISTOGRAM-RED-SIZE+" "+GL-HISTOGRAM-FORMAT+"
             "+GL-HISTOGRAM-WIDTH+" "+GL-PROXY-HISTOGRAM+" "+GL-HISTOGRAM+"
             "+GL-POST-COLOR-MATRIX-ALPHA-BIAS+" "+GL-POST-COLOR-MATRIX-BLUE-BIAS+"
             "+GL-POST-COLOR-MATRIX-GREEN-BIAS+" "+GL-POST-COLOR-MATRIX-RED-BIAS+"
             "+GL-POST-COLOR-MATRIX-ALPHA-SCALE+" "+GL-POST-COLOR-MATRIX-BLUE-SCALE+"
             "+GL-POST-COLOR-MATRIX-GREEN-SCALE+" "+GL-POST-COLOR-MATRIX-RED-SCALE+"
             "+GL-MAX-COLOR-MATRIX-STACK-DEPTH+" "+GL-COLOR-MATRIX-STACK-DEPTH+"
             "+GL-COLOR-MATRIX+" "+GL-CONVOLUTION-BORDER-COLOR+" "+GL-REPLICATE-BORDER+"
             "+GL-CONSTANT-BORDER+" "+GL-POST-CONVOLUTION-ALPHA-BIAS+"
             "+GL-POST-CONVOLUTION-BLUE-BIAS+" "+GL-POST-CONVOLUTION-GREEN-BIAS+"
             "+GL-POST-CONVOLUTION-RED-BIAS+" "+GL-POST-CONVOLUTION-ALPHA-SCALE+"
             "+GL-POST-CONVOLUTION-BLUE-SCALE+" "+GL-POST-CONVOLUTION-GREEN-SCALE+"
             "+GL-POST-CONVOLUTION-RED-SCALE+" "+GL-MAX-CONVOLUTION-HEIGHT+"
             "+GL-MAX-CONVOLUTION-WIDTH+" "+GL-CONVOLUTION-HEIGHT+" "+GL-CONVOLUTION-WIDTH+"
             "+GL-CONVOLUTION-FORMAT+" "+GL-REDUCE+" "+GL-CONVOLUTION-FILTER-BIAS+"
             "+GL-CONVOLUTION-FILTER-SCALE+" "+GL-CONVOLUTION-BORDER-MODE+" "+GL-SEPARABLE-2-D+"
             "+GL-CONVOLUTION-2-D+" "+GL-CONVOLUTION-1-D+" "+GL-COLOR-TABLE-INTENSITY-SIZE+"
             "+GL-COLOR-TABLE-LUMINANCE-SIZE+" "+GL-COLOR-TABLE-ALPHA-SIZE+"
             "+GL-COLOR-TABLE-BLUE-SIZE+" "+GL-COLOR-TABLE-GREEN-SIZE+" "+GL-COLOR-TABLE-RED-SIZE+"
             "+GL-COLOR-TABLE-WIDTH+" "+GL-COLOR-TABLE-FORMAT+" "+GL-COLOR-TABLE-BIAS+"
             "+GL-COLOR-TABLE-SCALE+" "+GL-PROXY-POST-COLOR-MATRIX-COLOR-TABLE+"
             "+GL-PROXY-POST-CONVOLUTION-COLOR-TABLE+" "+GL-PROXY-COLOR-TABLE+"
             "+GL-POST-COLOR-MATRIX-COLOR-TABLE+" "+GL-POST-CONVOLUTION-COLOR-TABLE+"
             "+GL-COLOR-TABLE+" "+GL-ONE-MINUS-CONSTANT-ALPHA+" "+GL-CONSTANT-ALPHA+"
             "+GL-ONE-MINUS-CONSTANT-COLOR+" "+GL-CONSTANT-COLOR+" "+GL-TEXTURE-BINDING-3-D+"
             "+GL-MAX-3-D-TEXTURE-SIZE+" "+GL-TEXTURE-WRAP-R+" "+GL-TEXTURE-DEPTH+"
             "+GL-PROXY-TEXTURE-3-D+" "+GL-TEXTURE-3-D+" "+GL-UNPACK-IMAGE-HEIGHT+"
             "+GL-UNPACK-SKIP-IMAGES+" "+GL-PACK-IMAGE-HEIGHT+" "+GL-PACK-SKIP-IMAGES+"
             "+GL-ALIASED-LINE-WIDTH-RANGE+" "+GL-ALIASED-POINT-SIZE-RANGE+"
             "+GL-SMOOTH-LINE-WIDTH-GRANULARITY+" "+GL-SMOOTH-LINE-WIDTH-RANGE+"
             "+GL-SMOOTH-POINT-SIZE-GRANULARITY+" "+GL-SMOOTH-POINT-SIZE-RANGE+"
             "+GL-TEXTURE-MAX-LEVEL+" "+GL-TEXTURE-BASE-LEVEL+" "+GL-TEXTURE-MAX-LOD+"
             "+GL-TEXTURE-MIN-LOD+" "+GL-SEPARATE-SPECULAR-COLOR+" "+GL-SINGLE-COLOR+"
             "+GL-LIGHT-MODEL-COLOR-CONTROL+" "+GL-UNSIGNED-INT-2-10-10-10-REV+"
             "+GL-UNSIGNED-INT-10-10-10-2+" "+GL-UNSIGNED-INT-8-8-8-8-REV+"
             "+GL-UNSIGNED-INT-8-8-8-8+" "+GL-UNSIGNED-SHORT-1-5-5-5-REV+"
             "+GL-UNSIGNED-SHORT-5-5-5-1+" "+GL-UNSIGNED-SHORT-4-4-4-4-REV+"
             "+GL-UNSIGNED-SHORT-4-4-4-4+" "+GL-UNSIGNED-SHORT-5-6-5-REV+"
             "+GL-UNSIGNED-SHORT-5-6-5+" "+GL-UNSIGNED-BYTE-2-3-3-REV+" "+GL-UNSIGNED-BYTE-3-3-2+"
             "+GL-BGRA+" "+GL-BGR+" "+GL-MAX-ELEMENTS-INDICES+" "+GL-MAX-ELEMENTS-VERTICES+"
             "+GL-CLAMP-TO-EDGE+" "+GL-RESCALE-NORMAL+" "+GL-CLIENT-ALL-ATTRIB-BITS+"
             "+GL-ALL-CLIENT-ATTRIB-BITS+" "+GL-CLIENT-VERTEX-ARRAY-BIT+"
             "+GL-CLIENT-PIXEL-STORE-BIT+" "+GL-RGBA-16+" "+GL-RGBA-12+" "+GL-RGB-10-A-2+"
             "+GL-RGBA-8+" "+GL-RGB-5-A-1+" "+GL-RGBA-4+" "+GL-RGBA-2+" "+GL-RGB-16+" "+GL-RGB-12+"
             "+GL-RGB-10+" "+GL-RGB-8+" "+GL-RGB-5+" "+GL-RGB-4+" "+GL-R-3-G-3-B-2+"
             "+GL-INTENSITY-16+" "+GL-INTENSITY-12+" "+GL-INTENSITY-8+" "+GL-INTENSITY-4+"
             "+GL-INTENSITY+" "+GL-LUMINANCE-16-ALPHA-16+" "+GL-LUMINANCE-12-ALPHA-12+"
             "+GL-LUMINANCE-12-ALPHA-4+" "+GL-LUMINANCE-8-ALPHA-8+" "+GL-LUMINANCE-6-ALPHA-2+"
             "+GL-LUMINANCE-4-ALPHA-4+" "+GL-LUMINANCE-16+" "+GL-LUMINANCE-12+" "+GL-LUMINANCE-8+"
             "+GL-LUMINANCE-4+" "+GL-ALPHA-16+" "+GL-ALPHA-12+" "+GL-ALPHA-8+" "+GL-ALPHA-4+"
             "+GL-TEXTURE-INTERNAL-FORMAT+" "+GL-TEXTURE-BINDING-2-D+" "+GL-TEXTURE-BINDING-1-D+"
             "+GL-TEXTURE-RESIDENT+" "+GL-TEXTURE-PRIORITY+" "+GL-PROXY-TEXTURE-2-D+"
             "+GL-PROXY-TEXTURE-1-D+" "+GL-ALL-ATTRIB-BITS+" "+GL-SCISSOR-BIT+" "+GL-TEXTURE-BIT+"
             "+GL-LIST-BIT+" "+GL-EVAL-BIT+" "+GL-HINT-BIT+" "+GL-COLOR-BUFFER-BIT+"
             "+GL-ENABLE-BIT+" "+GL-TRANSFORM-BIT+" "+GL-VIEWPORT-BIT+" "+GL-STENCIL-BUFFER-BIT+"
             "+GL-ACCUM-BUFFER-BIT+" "+GL-DEPTH-BUFFER-BIT+" "+GL-FOG-BIT+" "+GL-LIGHTING-BIT+"
             "+GL-PIXEL-MODE-BIT+" "+GL-POLYGON-STIPPLE-BIT+" "+GL-POLYGON-BIT+" "+GL-LINE-BIT+"
             "+GL-POINT-BIT+" "+GL-CURRENT-BIT+" "+GL-OUT-OF-MEMORY+" "+GL-STACK-UNDERFLOW+"
             "+GL-STACK-OVERFLOW+" "+GL-INVALID-OPERATION+" "+GL-INVALID-VALUE+"
             "+GL-INVALID-ENUM+" "+GL-NO-ERROR+" "+GL-EXTENSIONS+" "+GL-VERSION+" "+GL-RENDERER+"
             "+GL-VENDOR+" "+GL-TEXTURE-GEN-Q+" "+GL-TEXTURE-GEN-R+" "+GL-Q+" "+GL-R+" "+GL-T+"
             "+GL-S+" "+GL-CLAMP+" "+GL-REPEAT+" "+GL-NEAREST+" "+GL-MODULATE+" "+GL-DECAL+"
             "+GL-SPHERE-MAP+" "+GL-EYE-PLANE+" "+GL-EYE-LINEAR+" "+GL-OBJECT-PLANE+"
             "+GL-OBJECT-LINEAR+" "+GL-LINEAR-MIPMAP-LINEAR+" "+GL-LINEAR-MIPMAP-NEAREST+"
             "+GL-NEAREST-MIPMAP-LINEAR+" "+GL-NEAREST-MIPMAP-NEAREST+"
             "+GL-TEXTURE-INTENSITY-SIZE+" "+GL-TEXTURE-LUMINANCE-SIZE+" "+GL-TEXTURE-ALPHA-SIZE+"
             "+GL-TEXTURE-BLUE-SIZE+" "+GL-TEXTURE-GREEN-SIZE+" "+GL-TEXTURE-RED-SIZE+"
             "+GL-TEXTURE-COMPONENTS+" "+GL-TEXTURE-BORDER+" "+GL-TEXTURE-HEIGHT+"
             "+GL-TEXTURE-WIDTH+" "+GL-TEXTURE-BORDER-COLOR+" "+GL-TEXTURE-GEN-MODE+"
             "+GL-TEXTURE-GEN-T+" "+GL-TEXTURE-GEN-S+" "+GL-TEXTURE-ENV-COLOR+"
             "+GL-TEXTURE-MIN-FILTER+" "+GL-TEXTURE-MAG-FILTER+" "+GL-TEXTURE-WRAP-T+"
             "+GL-TEXTURE-WRAP-S+" "+GL-TEXTURE-2-D+" "+GL-TEXTURE-1-D+" "+GL-TEXTURE-ENV-MODE+"
             "+GL-TEXTURE-ENV+" "+GL-ZOOM-Y+" "+GL-ZOOM-X+" "+GL-UNPACK-SWAP-BYTES+"
             "+GL-UNPACK-SKIP-ROWS+" "+GL-UNPACK-SKIP-PIXELS+" "+GL-UNPACK-ROW-LENGTH+"
             "+GL-UNPACK-LSB-FIRST+" "+GL-UNPACK-ALIGNMENT+" "+GL-PACK-SWAP-BYTES+"
             "+GL-PACK-SKIP-ROWS+" "+GL-PACK-SKIP-PIXELS+" "+GL-PACK-ROW-LENGTH+"
             "+GL-PACK-LSB-FIRST+" "+GL-PACK-ALIGNMENT+" "+GL-PIXEL-MAP-A-TO-A+"
             "+GL-PIXEL-MAP-B-TO-B+" "+GL-PIXEL-MAP-G-TO-G+" "+GL-PIXEL-MAP-R-TO-R+"
             "+GL-PIXEL-MAP-I-TO-A+" "+GL-PIXEL-MAP-I-TO-B+" "+GL-PIXEL-MAP-I-TO-G+"
             "+GL-PIXEL-MAP-I-TO-R+" "+GL-PIXEL-MAP-I-TO-I+" "+GL-PIXEL-MAP-S-TO-S+"
             "+GL-PIXEL-MAP-A-TO-A-SIZE+" "+GL-PIXEL-MAP-B-TO-B-SIZE+" "+GL-PIXEL-MAP-G-TO-G-SIZE+"
             "+GL-PIXEL-MAP-R-TO-R-SIZE+" "+GL-PIXEL-MAP-I-TO-A-SIZE+" "+GL-PIXEL-MAP-I-TO-B-SIZE+"
             "+GL-PIXEL-MAP-I-TO-G-SIZE+" "+GL-PIXEL-MAP-I-TO-R-SIZE+" "+GL-PIXEL-MAP-I-TO-I-SIZE+"
             "+GL-PIXEL-MAP-S-TO-S-SIZE+" "+GL-DEPTH-BIAS+" "+GL-DEPTH-SCALE+" "+GL-ALPHA-BIAS+"
             "+GL-ALPHA-SCALE+" "+GL-BLUE-BIAS+" "+GL-BLUE-SCALE+" "+GL-GREEN-BIAS+"
             "+GL-GREEN-SCALE+" "+GL-RED-BIAS+" "+GL-RED-SCALE+" "+GL-INDEX-OFFSET+"
             "+GL-INDEX-SHIFT+" "+GL-MAP-STENCIL+" "+GL-MAP-COLOR+" "+GL-SCISSOR-TEST+"
             "+GL-SCISSOR-BOX+" "+GL-NICEST+" "+GL-FASTEST+" "+GL-DONT-CARE+" "+GL-FOG-HINT+"
             "+GL-POLYGON-SMOOTH-HINT+" "+GL-LINE-SMOOTH-HINT+" "+GL-POINT-SMOOTH-HINT+"
             "+GL-PERSPECTIVE-CORRECTION-HINT+" "+GL-DOMAIN+" "+GL-ORDER+" "+GL-COEFF+"
             "+GL-MAP-2-GRID-SEGMENTS+" "+GL-MAP-2-GRID-DOMAIN+" "+GL-MAP-1-GRID-SEGMENTS+"
             "+GL-MAP-1-GRID-DOMAIN+" "+GL-MAP-2-VERTEX-4+" "+GL-MAP-2-VERTEX-3+"
             "+GL-MAP-2-TEXTURE-COORD-4+" "+GL-MAP-2-TEXTURE-COORD-3+" "+GL-MAP-2-TEXTURE-COORD-2+"
             "+GL-MAP-2-TEXTURE-COORD-1+" "+GL-MAP-2-NORMAL+" "+GL-MAP-2-INDEX+"
             "+GL-MAP-2-COLOR-4+" "+GL-MAP-1-VERTEX-4+" "+GL-MAP-1-VERTEX-3+"
             "+GL-MAP-1-TEXTURE-COORD-4+" "+GL-MAP-1-TEXTURE-COORD-3+" "+GL-MAP-1-TEXTURE-COORD-2+"
             "+GL-MAP-1-TEXTURE-COORD-1+" "+GL-MAP-1-NORMAL+" "+GL-MAP-1-INDEX+"
             "+GL-MAP-1-COLOR-4+" "+GL-AUTO-NORMAL+" "+GL-VIEWPORT+" "+GL-TEXTURE-STACK-DEPTH+"
             "+GL-TEXTURE-MATRIX+" "+GL-RGBA-MODE+" "+GL-RENDER-MODE+"
             "+GL-PROJECTION-STACK-DEPTH+" "+GL-PROJECTION-MATRIX+" "+GL-NAME-STACK-DEPTH+"
             "+GL-MODELVIEW-STACK-DEPTH+" "+GL-MODELVIEW-MATRIX+" "+GL-INDEX-WRITEMASK+"
             "+GL-INDEX-MODE+" "+GL-INDEX-CLEAR-VALUE+" "+GL-CURRENT-TEXTURE-COORDS+"
             "+GL-CURRENT-RASTER-POSITION-VALID+" "+GL-CURRENT-RASTER-TEXTURE-COORDS+"
             "+GL-CURRENT-RASTER-POSITION+" "+GL-CURRENT-RASTER-INDEX+"
             "+GL-CURRENT-RASTER-DISTANCE+" "+GL-CURRENT-RASTER-COLOR+" "+GL-CURRENT-NORMAL+"
             "+GL-CURRENT-COLOR+" "+GL-CURRENT-INDEX+" "+GL-COLOR-WRITEMASK+"
             "+GL-COLOR-CLEAR-VALUE+" "+GL-CLIENT-ATTRIB-STACK-DEPTH+" "+GL-ATTRIB-STACK-DEPTH+"
             "+GL-MAX-CLIENT-ATTRIB-STACK-DEPTH+" "+GL-MAX-VIEWPORT-DIMS+"
             "+GL-MAX-TEXTURE-STACK-DEPTH+" "+GL-MAX-PROJECTION-STACK-DEPTH+"
             "+GL-MAX-NAME-STACK-DEPTH+" "+GL-MAX-MODELVIEW-STACK-DEPTH+"
             "+GL-MAX-ATTRIB-STACK-DEPTH+" "+GL-MAX-PIXEL-MAP-TABLE+" "+GL-MAX-TEXTURE-SIZE+"
             "+GL-MAX-CLIP-PLANES+" "+GL-MAX-LIGHTS+" "+GL-MAX-EVAL-ORDER+" "+GL-MAX-LIST-NESTING+"
             "+GL-RGBA+" "+GL-RGB+" "+GL-DITHER+" "+GL-STENCIL+" "+GL-DEPTH+" "+GL-COLOR+"
             "+GL-BITMAP+" "+GL-STEREO+" "+GL-DOUBLEBUFFER+" "+GL-DRAW-BUFFER+" "+GL-READ-BUFFER+"
             "+GL-AUX-BUFFERS+" "+GL-SUBPIXEL-BITS+" "+GL-INDEX-BITS+" "+GL-BLUE-BITS+"
             "+GL-GREEN-BITS+" "+GL-RED-BITS+" "+GL-ALPHA-BITS+" "+GL-LUMINANCE-ALPHA+"
             "+GL-LUMINANCE+" "+GL-ALPHA+" "+GL-BLUE+" "+GL-GREEN+" "+GL-RED+" "+GL-COLOR-INDEX+"
             "+GL-AUX-3+" "+GL-AUX-2+" "+GL-AUX-1+" "+GL-AUX-0+" "+GL-BACK-RIGHT+" "+GL-BACK-LEFT+"
             "+GL-FRONT-RIGHT+" "+GL-FRONT-LEFT+" "+GL-RIGHT+" "+GL-LEFT+" "+GL-NONE+" "+GL-DECR+"
             "+GL-INCR+" "+GL-REPLACE+" "+GL-KEEP+" "+GL-STENCIL-INDEX+" "+GL-STENCIL-WRITEMASK+"
             "+GL-STENCIL-REF+" "+GL-STENCIL-PASS-DEPTH-PASS+" "+GL-STENCIL-PASS-DEPTH-FAIL+"
             "+GL-STENCIL-FAIL+" "+GL-STENCIL-VALUE-MASK+" "+GL-STENCIL-FUNC+"
             "+GL-STENCIL-CLEAR-VALUE+" "+GL-STENCIL-TEST+" "+GL-STENCIL-BITS+" "+GL-OR-INVERTED+"
             "+GL-OR-REVERSE+" "+GL-AND-INVERTED+" "+GL-AND-REVERSE+" "+GL-EQUIV+" "+GL-XOR+"
             "+GL-NOR+" "+GL-OR+" "+GL-NAND+" "+GL-AND+" "+GL-INVERT+" "+GL-NOOP+"
             "+GL-COPY-INVERTED+" "+GL-COPY+" "+GL-SET+" "+GL-CLEAR+" "+GL-LOGIC-OP-MODE+"
             "+GL-COLOR-LOGIC-OP+" "+GL-INDEX-LOGIC-OP+" "+GL-LOGIC-OP+" "+GL-EXP-2+" "+GL-EXP+"
             "+GL-LINEAR+" "+GL-FOG-END+" "+GL-FOG-START+" "+GL-FOG-INDEX+" "+GL-FOG-COLOR+"
             "+GL-FOG-DENSITY+" "+GL-FOG-MODE+" "+GL-FOG+" "+GL-SELECTION-BUFFER-SIZE+"
             "+GL-SELECTION-BUFFER-POINTER+" "+GL-FEEDBACK-BUFFER-TYPE+"
             "+GL-FEEDBACK-BUFFER-SIZE+" "+GL-FEEDBACK-BUFFER-POINTER+" "+GL-PASS-THROUGH-TOKEN+"
             "+GL-COPY-PIXEL-TOKEN+" "+GL-DRAW-PIXEL-TOKEN+" "+GL-BITMAP-TOKEN+"
             "+GL-POLYGON-TOKEN+" "+GL-LINE-RESET-TOKEN+" "+GL-LINE-TOKEN+" "+GL-POINT-TOKEN+"
             "+GL-4-D-COLOR-TEXTURE+" "+GL-3-D-COLOR-TEXTURE+" "+GL-3-D-COLOR+" "+GL-3-D+"
             "+GL-2-D+" "+GL-SELECT+" "+GL-RENDER+" "+GL-FEEDBACK+" "+GL-SRC-ALPHA-SATURATE+"
             "+GL-ONE-MINUS-DST-COLOR+" "+GL-DST-COLOR+" "+GL-ONE-MINUS-DST-ALPHA+"
             "+GL-DST-ALPHA+" "+GL-ONE-MINUS-SRC-ALPHA+" "+GL-SRC-ALPHA+"
             "+GL-ONE-MINUS-SRC-COLOR+" "+GL-SRC-COLOR+" "+GL-ONE+" "+GL-ZERO+" "+GL-BLEND-DST+"
             "+GL-BLEND-SRC+" "+GL-BLEND+" "+GL-ALPHA-TEST-FUNC+" "+GL-ALPHA-TEST-REF+"
             "+GL-ALPHA-TEST+" "+GL-RETURN+" "+GL-MULT+" "+GL-LOAD+" "+GL-ADD+" "+GL-ACCUM+"
             "+GL-ACCUM-CLEAR-VALUE+" "+GL-ACCUM-ALPHA-BITS+" "+GL-ACCUM-BLUE-BITS+"
             "+GL-ACCUM-GREEN-BITS+" "+GL-ACCUM-RED-BITS+" "+GL-CLIP-PLANE-5+" "+GL-CLIP-PLANE-4+"
             "+GL-CLIP-PLANE-3+" "+GL-CLIP-PLANE-2+" "+GL-CLIP-PLANE-1+" "+GL-CLIP-PLANE-0+"
             "+GL-NORMALIZE+" "+GL-COLOR-MATERIAL-PARAMETER+" "+GL-COLOR-MATERIAL-FACE+"
             "+GL-COLOR-MATERIAL+" "+GL-SMOOTH+" "+GL-FLAT+" "+GL-SHADE-MODEL+"
             "+GL-FRONT-AND-BACK+" "+GL-LIGHT-MODEL-AMBIENT+" "+GL-LIGHT-MODEL-LOCAL-VIEWER+"
             "+GL-LIGHT-MODEL-TWO-SIDE+" "+GL-COLOR-INDEXES+" "+GL-AMBIENT-AND-DIFFUSE+"
             "+GL-SPOT-DIRECTION+" "+GL-POSITION+" "+GL-EMISSION+" "+GL-SHININESS+" "+GL-SPECULAR+"
             "+GL-DIFFUSE+" "+GL-AMBIENT+" "+GL-QUADRATIC-ATTENUATION+" "+GL-LINEAR-ATTENUATION+"
             "+GL-CONSTANT-ATTENUATION+" "+GL-SPOT-CUTOFF+" "+GL-SPOT-EXPONENT+" "+GL-LIGHT-7+"
             "+GL-LIGHT-6+" "+GL-LIGHT-5+" "+GL-LIGHT-4+" "+GL-LIGHT-3+" "+GL-LIGHT-2+"
             "+GL-LIGHT-1+" "+GL-LIGHT-0+" "+GL-LIGHTING+" "+GL-DEPTH-COMPONENT+"
             "+GL-DEPTH-WRITEMASK+" "+GL-DEPTH-RANGE+" "+GL-DEPTH-FUNC+" "+GL-DEPTH-CLEAR-VALUE+"
             "+GL-DEPTH-BITS+" "+GL-DEPTH-TEST+" "+GL-ALWAYS+" "+GL-GEQUAL+" "+GL-NOTEQUAL+"
             "+GL-GREATER+" "+GL-LEQUAL+" "+GL-EQUAL+" "+GL-LESS+" "+GL-NEVER+" "+GL-LIST-MODE+"
             "+GL-LIST-INDEX+" "+GL-LIST-BASE+" "+GL-COMPILE-AND-EXECUTE+" "+GL-COMPILE+"
             "+GL-POLYGON-OFFSET-FILL+" "+GL-POLYGON-OFFSET-LINE+" "+GL-POLYGON-OFFSET-POINT+"
             "+GL-POLYGON-OFFSET-UNITS+" "+GL-POLYGON-OFFSET-FACTOR+" "+GL-FRONT-FACE+"
             "+GL-CULL-FACE-MODE+" "+GL-CULL-FACE+" "+GL-EDGE-FLAG+" "+GL-POLYGON-STIPPLE+"
             "+GL-POLYGON-SMOOTH+" "+GL-POLYGON-MODE+" "+GL-BACK+" "+GL-FRONT+" "+GL-CCW+"
             "+GL-CW+" "+GL-FILL+" "+GL-LINE+" "+GL-POINT+" "+GL-LINE-WIDTH-RANGE+"
             "+GL-LINE-WIDTH-GRANULARITY+" "+GL-LINE-WIDTH+" "+GL-LINE-STIPPLE-REPEAT+"
             "+GL-LINE-STIPPLE-PATTERN+" "+GL-LINE-STIPPLE+" "+GL-LINE-SMOOTH+"
             "+GL-POINT-SIZE-RANGE+" "+GL-POINT-SIZE-GRANULARITY+" "+GL-POINT-SIZE+"
             "+GL-POINT-SMOOTH+" "+GL-TEXTURE+" "+GL-PROJECTION+" "+GL-MODELVIEW+"
             "+GL-MATRIX-MODE+" "+GL-T-4F-C-4F-N-3F-V-4F+" "+GL-T-2F-C-4F-N-3F-V-3F+"
             "+GL-T-2F-N-3F-V-3F+" "+GL-T-2F-C-3F-V-3F+" "+GL-T-2F-C-4UB-V-3F+" "+GL-T-4F-V-4F+"
             "+GL-T-2F-V-3F+" "+GL-C-4F-N-3F-V-3F+" "+GL-N-3F-V-3F+" "+GL-C-3F-V-3F+"
             "+GL-C-4UB-V-3F+" "+GL-C-4UB-V-2F+" "+GL-V-3F+" "+GL-V-2F+"
             "+GL-EDGE-FLAG-ARRAY-POINTER+" "+GL-TEXTURE-COORD-ARRAY-POINTER+"
             "+GL-INDEX-ARRAY-POINTER+" "+GL-COLOR-ARRAY-POINTER+" "+GL-NORMAL-ARRAY-POINTER+"
             "+GL-VERTEX-ARRAY-POINTER+" "+GL-EDGE-FLAG-ARRAY-STRIDE+"
             "+GL-TEXTURE-COORD-ARRAY-STRIDE+" "+GL-TEXTURE-COORD-ARRAY-TYPE+"
             "+GL-TEXTURE-COORD-ARRAY-SIZE+" "+GL-INDEX-ARRAY-STRIDE+" "+GL-INDEX-ARRAY-TYPE+"
             "+GL-COLOR-ARRAY-STRIDE+" "+GL-COLOR-ARRAY-TYPE+" "+GL-COLOR-ARRAY-SIZE+"
             "+GL-NORMAL-ARRAY-STRIDE+" "+GL-NORMAL-ARRAY-TYPE+" "+GL-VERTEX-ARRAY-STRIDE+"
             "+GL-VERTEX-ARRAY-TYPE+" "+GL-VERTEX-ARRAY-SIZE+" "+GL-EDGE-FLAG-ARRAY+"
             "+GL-TEXTURE-COORD-ARRAY+" "+GL-INDEX-ARRAY+" "+GL-COLOR-ARRAY+" "+GL-NORMAL-ARRAY+"
             "+GL-VERTEX-ARRAY+" "+GL-POLYGON+" "+GL-QUAD-STRIP+" "+GL-QUADS+" "+GL-TRIANGLE-FAN+"
             "+GL-TRIANGLE-STRIP+" "+GL-TRIANGLES+" "+GL-LINE-STRIP+" "+GL-LINE-LOOP+" "+GL-LINES+"
             "+GL-POINTS+" "+GL-DOUBLE+" "+GL-4-BYTES+" "+GL-3-BYTES+" "+GL-2-BYTES+" "+GL-FLOAT+"
             "+GL-UNSIGNED-INT+" "+GL-INT+" "+GL-UNSIGNED-SHORT+" "+GL-SHORT+" "+GL-UNSIGNED-BYTE+"
             "+GL-BYTE+" "+GL-TRUE+" "+GL-FALSE+" "+GL-ARB-IMAGING+" "+GL-VERSION-1-3+"
             "+GL-VERSION-1-2+" "+GL-VERSION-1-1+" "GL-CLEAR-INDEX" "GL-CLEAR-COLOR" "GL-CLEAR"
             "GL-INDEX-MASK" "GL-COLOR-MASK" "GL-ALPHA-FUNC" "GL-BLEND-FUNC" "GL-LOGIC-OP"
             "GL-CULL-FACE" "GL-FRONT-FACE" "GL-POINT-SIZE" "GL-LINE-WIDTH" "GL-LINE-STIPPLE"
             "GL-POLYGON-MODE" "GL-POLYGON-OFFSET" "GL-POLYGON-STIPPLE" "GL-GET-POLYGON-STIPPLE"
             "GL-EDGE-FLAG" "GL-EDGE-FLAGV" "GL-SCISSOR" "GL-CLIP-PLANE" "GL-GET-CLIP-PLANE"
             "GL-DRAW-BUFFER" "GL-READ-BUFFER" "GL-ENABLE" "GL-DISABLE" "GL-IS-ENABLED"
             "GL-ENABLE-CLIENT-STATE" "GL-DISABLE-CLIENT-STATE" "GL-GET-BOOLEANV" "GL-GET-DOUBLEV"
             "GL-GET-FLOATV" "GL-GET-INTEGERV" "GL-PUSH-ATTRIB" "GL-POP-ATTRIB"
             "GL-PUSH-CLIENT-ATTRIB" "GL-POP-CLIENT-ATTRIB" "GL-RENDER-MODE" "GL-GET-ERROR"
             "GL-GET-STRING" "GL-FINISH" "GL-FLUSH" "GL-HINT" "GL-CLEAR-DEPTH" "GL-DEPTH-FUNC"
             "GL-DEPTH-MASK" "GL-DEPTH-RANGE" "GL-CLEAR-ACCUM" "GL-ACCUM" "GL-MATRIX-MODE"
             "GL-ORTHO" "GL-FRUSTUM" "GL-VIEWPORT" "GL-PUSH-MATRIX" "GL-POP-MATRIX"
             "GL-LOAD-IDENTITY" "GL-LOAD-MATRIXD" "GL-LOAD-MATRIXF" "GL-MULT-MATRIXD"
             "GL-MULT-MATRIXF" "GL-ROTATED" "GL-ROTATEF" "GL-SCALED" "GL-SCALEF" "GL-TRANSLATED"
             "GL-TRANSLATEF" "GL-IS-LIST" "GL-DELETE-LISTS" "GL-GEN-LISTS" "GL-NEW-LIST"
             "GL-END-LIST" "GL-CALL-LIST" "GL-CALL-LISTS" "GL-LIST-BASE" "GL-BEGIN" "GL-END"
             "GL-VERTEX-2D" "GL-VERTEX-2F" "GL-VERTEX-2I" "GL-VERTEX-2S" "GL-VERTEX-3D"
             "GL-VERTEX-3F" "GL-VERTEX-3I" "GL-VERTEX-3S" "GL-VERTEX-4D" "GL-VERTEX-4F"
             "GL-VERTEX-4I" "GL-VERTEX-4S" "GL-VERTEX-2DV" "GL-VERTEX-2FV" "GL-VERTEX-2IV"
             "GL-VERTEX-2SV" "GL-VERTEX-3DV" "GL-VERTEX-3FV" "GL-VERTEX-3IV" "GL-VERTEX-3SV"
             "GL-VERTEX-4DV" "GL-VERTEX-4FV" "GL-VERTEX-4IV" "GL-VERTEX-4SV" "GL-NORMAL-3B"
             "GL-NORMAL-3D" "GL-NORMAL-3F" "GL-NORMAL-3I" "GL-NORMAL-3S" "GL-NORMAL-3BV"
             "GL-NORMAL-3DV" "GL-NORMAL-3FV" "GL-NORMAL-3IV" "GL-NORMAL-3SV" "GL-INDEXD"
             "GL-INDEXF" "GL-INDEXI" "GL-INDEXS" "GL-INDEXUB" "GL-INDEXDV" "GL-INDEXFV"
             "GL-INDEXIV" "GL-INDEXSV" "GL-INDEXUBV" "GL-COLOR-3B" "GL-COLOR-3D" "GL-COLOR-3F"
             "GL-COLOR-3I" "GL-COLOR-3S" "GL-COLOR-3UB" "GL-COLOR-3UI" "GL-COLOR-3US" "GL-COLOR-4B"
             "GL-COLOR-4D" "GL-COLOR-4F" "GL-COLOR-4I" "GL-COLOR-4S" "GL-COLOR-4UB" "GL-COLOR-4UI"
             "GL-COLOR-4US" "GL-COLOR-3BV" "GL-COLOR-3DV" "GL-COLOR-3FV" "GL-COLOR-3IV"
             "GL-COLOR-3SV" "GL-COLOR-3UBV" "GL-COLOR-3UIV" "GL-COLOR-3USV" "GL-COLOR-4BV"
             "GL-COLOR-4DV" "GL-COLOR-4FV" "GL-COLOR-4IV" "GL-COLOR-4SV" "GL-COLOR-4UBV"
             "GL-COLOR-4UIV" "GL-COLOR-4USV" "GL-TEX-COORD-1D" "GL-TEX-COORD-1F" "GL-TEX-COORD-1I"
             "GL-TEX-COORD-1S" "GL-TEX-COORD-2D" "GL-TEX-COORD-2F" "GL-TEX-COORD-2I"
             "GL-TEX-COORD-2S" "GL-TEX-COORD-3D" "GL-TEX-COORD-3F" "GL-TEX-COORD-3I"
             "GL-TEX-COORD-3S" "GL-TEX-COORD-4D" "GL-TEX-COORD-4F" "GL-TEX-COORD-4I"
             "GL-TEX-COORD-4S" "GL-TEX-COORD-1DV" "GL-TEX-COORD-1FV" "GL-TEX-COORD-1IV"
             "GL-TEX-COORD-1SV" "GL-TEX-COORD-2DV" "GL-TEX-COORD-2FV" "GL-TEX-COORD-2IV"
             "GL-TEX-COORD-2SV" "GL-TEX-COORD-3DV" "GL-TEX-COORD-3FV" "GL-TEX-COORD-3IV"
             "GL-TEX-COORD-3SV" "GL-TEX-COORD-4DV" "GL-TEX-COORD-4FV" "GL-TEX-COORD-4IV"
             "GL-TEX-COORD-4SV" "GL-RASTER-POS-2D" "GL-RASTER-POS-2F" "GL-RASTER-POS-2I"
             "GL-RASTER-POS-2S" "GL-RASTER-POS-3D" "GL-RASTER-POS-3F" "GL-RASTER-POS-3I"
             "GL-RASTER-POS-3S" "GL-RASTER-POS-4D" "GL-RASTER-POS-4F" "GL-RASTER-POS-4I"
             "GL-RASTER-POS-4S" "GL-RASTER-POS-2DV" "GL-RASTER-POS-2FV" "GL-RASTER-POS-2IV"
             "GL-RASTER-POS-2SV" "GL-RASTER-POS-3DV" "GL-RASTER-POS-3FV" "GL-RASTER-POS-3IV"
             "GL-RASTER-POS-3SV" "GL-RASTER-POS-4DV" "GL-RASTER-POS-4FV" "GL-RASTER-POS-4IV"
             "GL-RASTER-POS-4SV" "GL-RECTD" "GL-RECTF" "GL-RECTI" "GL-RECTS" "GL-RECTDV"
             "GL-RECTFV" "GL-RECTIV" "GL-RECTSV" "GL-VERTEX-POINTER" "GL-NORMAL-POINTER"
             "GL-COLOR-POINTER" "GL-INDEX-POINTER" "GL-TEX-COORD-POINTER" "GL-EDGE-FLAG-POINTER"
             "GL-GET-POINTERV" "GL-ARRAY-ELEMENT" "GL-DRAW-ARRAYS" "GL-DRAW-ELEMENTS"
             "GL-INTERLEAVED-ARRAYS" "GL-SHADE-MODEL" "GL-LIGHTF" "GL-LIGHTI" "GL-LIGHTFV"
             "GL-LIGHTIV" "GL-GET-LIGHTFV" "GL-GET-LIGHTIV" "GL-LIGHT-MODELF" "GL-LIGHT-MODELI"
             "GL-LIGHT-MODELFV" "GL-LIGHT-MODELIV" "GL-MATERIALF" "GL-MATERIALI" "GL-MATERIALFV"
             "GL-MATERIALIV" "GL-GET-MATERIALFV" "GL-GET-MATERIALIV" "GL-COLOR-MATERIAL"
             "GL-PIXEL-ZOOM" "GL-PIXEL-STOREF" "GL-PIXEL-STOREI" "GL-PIXEL-TRANSFERF"
             "GL-PIXEL-TRANSFERI" "GL-PIXEL-MAPFV" "GL-PIXEL-MAPUIV" "GL-PIXEL-MAPUSV"
             "GL-GET-PIXEL-MAPFV" "GL-GET-PIXEL-MAPUIV" "GL-GET-PIXEL-MAPUSV" "GL-BITMAP"
             "GL-READ-PIXELS" "GL-DRAW-PIXELS" "GL-COPY-PIXELS" "GL-STENCIL-FUNC" "GL-STENCIL-MASK"
             "GL-STENCIL-OP" "GL-CLEAR-STENCIL" "GL-TEX-GEND" "GL-TEX-GENF" "GL-TEX-GENI"
             "GL-TEX-GENDV" "GL-TEX-GENFV" "GL-TEX-GENIV" "GL-GET-TEX-GENDV" "GL-GET-TEX-GENFV"
             "GL-GET-TEX-GENIV" "GL-TEX-ENVF" "GL-TEX-ENVI" "GL-TEX-ENVFV" "GL-TEX-ENVIV"
             "GL-GET-TEX-ENVFV" "GL-GET-TEX-ENVIV" "GL-TEX-PARAMETERF" "GL-TEX-PARAMETERI"
             "GL-TEX-PARAMETERFV" "GL-TEX-PARAMETERIV" "GL-GET-TEX-PARAMETERFV"
             "GL-GET-TEX-PARAMETERIV" "GL-GET-TEX-LEVEL-PARAMETERFV" "GL-GET-TEX-LEVEL-PARAMETERIV"
             "GL-TEX-IMAGE-1D" "GL-TEX-IMAGE-2D" "GL-GET-TEX-IMAGE" "GL-GEN-TEXTURES"
             "GL-DELETE-TEXTURES" "GL-BIND-TEXTURE" "GL-PRIORITIZE-TEXTURES"
             "GL-ARE-TEXTURES-RESIDENT" "GL-IS-TEXTURE" "GL-TEX-SUB-IMAGE-1D" "GL-TEX-SUB-IMAGE-2D"
             "GL-COPY-TEX-IMAGE-1D" "GL-COPY-TEX-IMAGE-2D" "GL-COPY-TEX-SUB-IMAGE-1D"
             "GL-COPY-TEX-SUB-IMAGE-2D" "GL-MAP-1D" "GL-MAP-1F" "GL-MAP-2D" "GL-MAP-2F"
             "GL-GET-MAPDV" "GL-GET-MAPFV" "GL-GET-MAPIV" "GL-EVAL-COORD-1D" "GL-EVAL-COORD-1F"
             "GL-EVAL-COORD-1DV" "GL-EVAL-COORD-1FV" "GL-EVAL-COORD-2D" "GL-EVAL-COORD-2F"
             "GL-EVAL-COORD-2DV" "GL-EVAL-COORD-2FV" "GL-MAP-GRID-1D" "GL-MAP-GRID-1F"
             "GL-MAP-GRID-2D" "GL-MAP-GRID-2F" "GL-EVAL-POINT-1" "GL-EVAL-POINT-2" "GL-EVAL-MESH-1"
             "GL-EVAL-MESH-2" "GL-FOGF" "GL-FOGI" "GL-FOGFV" "GL-FOGIV" "GL-FEEDBACK-BUFFER"
             "GL-PASS-THROUGH" "GL-SELECT-BUFFER" "GL-INIT-NAMES" "GL-LOAD-NAME" "GL-PUSH-NAME"
             "GL-POP-NAME" "GL-DRAW-RANGE-ELEMENTS" "GL-TEX-IMAGE-3D" "GL-TEX-SUB-IMAGE-3D"
             "GL-COPY-TEX-SUB-IMAGE-3D" "GL-COLOR-TABLE" "GL-COLOR-SUB-TABLE"
             "GL-COLOR-TABLE-PARAMETERIV" "GL-COLOR-TABLE-PARAMETERFV" "GL-COPY-COLOR-SUB-TABLE"
             "GL-COPY-COLOR-TABLE" "GL-GET-COLOR-TABLE" "GL-GET-COLOR-TABLE-PARAMETERFV"
             "GL-GET-COLOR-TABLE-PARAMETERIV" "GL-BLEND-EQUATION" "GL-BLEND-COLOR" "GL-HISTOGRAM"
             "GL-RESET-HISTOGRAM" "GL-GET-HISTOGRAM" "GL-GET-HISTOGRAM-PARAMETERFV"
             "GL-GET-HISTOGRAM-PARAMETERIV" "GL-MINMAX" "GL-RESET-MINMAX" "GL-GET-MINMAX"
             "GL-GET-MINMAX-PARAMETERFV" "GL-GET-MINMAX-PARAMETERIV" "GL-CONVOLUTION-FILTER-1D"
             "GL-CONVOLUTION-FILTER-2D" "GL-CONVOLUTION-PARAMETERF" "GL-CONVOLUTION-PARAMETERFV"
             "GL-CONVOLUTION-PARAMETERI" "GL-CONVOLUTION-PARAMETERIV"
             "GL-COPY-CONVOLUTION-FILTER-1D" "GL-COPY-CONVOLUTION-FILTER-2D"
             "GL-GET-CONVOLUTION-FILTER" "GL-GET-CONVOLUTION-PARAMETERFV"
             "GL-GET-CONVOLUTION-PARAMETERIV" "GL-SEPARABLE-FILTER-2D" "GL-GET-SEPARABLE-FILTER"
             "GL-ACTIVE-TEXTURE" "GL-CLIENT-ACTIVE-TEXTURE" "GL-COMPRESSED-TEX-IMAGE-1D"
             "GL-COMPRESSED-TEX-IMAGE-2D" "GL-COMPRESSED-TEX-IMAGE-3D"
             "GL-COMPRESSED-TEX-SUB-IMAGE-1D" "GL-COMPRESSED-TEX-SUB-IMAGE-2D"
             "GL-COMPRESSED-TEX-SUB-IMAGE-3D" "GL-GET-COMPRESSED-TEX-IMAGE" "GL-MULTI-TEX-COORD-1D"
             "GL-MULTI-TEX-COORD-1DV" "GL-MULTI-TEX-COORD-1F" "GL-MULTI-TEX-COORD-1FV"
             "GL-MULTI-TEX-COORD-1I" "GL-MULTI-TEX-COORD-1IV" "GL-MULTI-TEX-COORD-1S"
             "GL-MULTI-TEX-COORD-1SV" "GL-MULTI-TEX-COORD-2D" "GL-MULTI-TEX-COORD-2DV"
             "GL-MULTI-TEX-COORD-2F" "GL-MULTI-TEX-COORD-2FV" "GL-MULTI-TEX-COORD-2I"
             "GL-MULTI-TEX-COORD-2IV" "GL-MULTI-TEX-COORD-2S" "GL-MULTI-TEX-COORD-2SV"
             "GL-MULTI-TEX-COORD-3D" "GL-MULTI-TEX-COORD-3DV" "GL-MULTI-TEX-COORD-3F"
             "GL-MULTI-TEX-COORD-3FV" "GL-MULTI-TEX-COORD-3I" "GL-MULTI-TEX-COORD-3IV"
             "GL-MULTI-TEX-COORD-3S" "GL-MULTI-TEX-COORD-3SV" "GL-MULTI-TEX-COORD-4D"
             "GL-MULTI-TEX-COORD-4DV" "GL-MULTI-TEX-COORD-4F" "GL-MULTI-TEX-COORD-4FV"
             "GL-MULTI-TEX-COORD-4I" "GL-MULTI-TEX-COORD-4IV" "GL-MULTI-TEX-COORD-4S"
             "GL-MULTI-TEX-COORD-4SV" "GL-LOAD-TRANSPOSE-MATRIXD" "GL-LOAD-TRANSPOSE-MATRIXF"
             "GL-MULT-TRANSPOSE-MATRIXD" "GL-MULT-TRANSPOSE-MATRIXF" "GL-SAMPLE-COVERAGE"
             "GL-ACTIVE-TEXTURE-ARB" "GL-CLIENT-ACTIVE-TEXTURE-ARB" "GL-MULTI-TEX-COORD-1D-ARB"
             "GL-MULTI-TEX-COORD-1DV-ARB" "GL-MULTI-TEX-COORD-1F-ARB" "GL-MULTI-TEX-COORD-1FV-ARB"
             "GL-MULTI-TEX-COORD-1I-ARB" "GL-MULTI-TEX-COORD-1IV-ARB" "GL-MULTI-TEX-COORD-1S-ARB"
             "GL-MULTI-TEX-COORD-1SV-ARB" "GL-MULTI-TEX-COORD-2D-ARB" "GL-MULTI-TEX-COORD-2DV-ARB"
             "GL-MULTI-TEX-COORD-2F-ARB" "GL-MULTI-TEX-COORD-2FV-ARB" "GL-MULTI-TEX-COORD-2I-ARB"
             "GL-MULTI-TEX-COORD-2IV-ARB" "GL-MULTI-TEX-COORD-2S-ARB" "GL-MULTI-TEX-COORD-2SV-ARB"
             "GL-MULTI-TEX-COORD-3D-ARB" "GL-MULTI-TEX-COORD-3DV-ARB" "GL-MULTI-TEX-COORD-3F-ARB"
             "GL-MULTI-TEX-COORD-3FV-ARB" "GL-MULTI-TEX-COORD-3I-ARB" "GL-MULTI-TEX-COORD-3IV-ARB"
             "GL-MULTI-TEX-COORD-3S-ARB" "GL-MULTI-TEX-COORD-3SV-ARB" "GL-MULTI-TEX-COORD-4D-ARB"
             "GL-MULTI-TEX-COORD-4DV-ARB" "GL-MULTI-TEX-COORD-4F-ARB" "GL-MULTI-TEX-COORD-4FV-ARB"
             "GL-MULTI-TEX-COORD-4I-ARB" "GL-MULTI-TEX-COORD-4IV-ARB" "GL-MULTI-TEX-COORD-4S-ARB"
             "GL-MULTI-TEX-COORD-4SV-ARB" "GL-CREATE-DEBUG-OBJECT-MESA" "GL-CLEAR-DEBUG-LOG-MESA"
             "GL-GET-DEBUG-LOG-MESA" "GL-GET-DEBUG-LOG-LENGTH-MESA" "GL-PROGRAM-CALLBACK-MESA"
             "GL-GET-PROGRAM-REGISTERFV-MESA" "GL-BLEND-EQUATION-SEPARATE-ATI" "GLU-BEGIN-CURVE"
             "GLU-BEGIN-POLYGON" "GLU-BEGIN-SURFACE" "GLU-BEGIN-TRIM" "GLU-BUILD-1D-MIPMAP-LEVELS"
             "GLU-BUILD-1D-MIPMAPS" "GLU-BUILD-2D-MIPMAP-LEVELS" "GLU-BUILD-2D-MIPMAPS"
             "GLU-BUILD-3D-MIPMAP-LEVELS" "GLU-BUILD-3D-MIPMAPS" "GLU-CHECK-EXTENSION"
             "GLU-CYLINDER" "GLU-DELETE-NURBS-RENDERER" "GLU-DELETE-QUADRIC" "GLU-DELETE-TESS"
             "GLU-DISK" "GLU-END-CURVE" "GLU-END-POLYGON" "GLU-END-SURFACE" "GLU-END-TRIM"
             "GLU-ERROR-STRING" "GLU-GET-NURBS-PROPERTY" "GLU-GET-STRING" "GLU-GET-TESS-PROPERTY"
             "GLU-LOAD-SAMPLING-MATRICES" "GLU-LOOK-AT" "GLU-NEW-NURBS-RENDERER" "GLU-NEW-QUADRIC"
             "GLU-NEW-TESS" "GLU-NEXT-CONTOUR" "GLU-NURBS-CALLBACK" "GLU-NURBS-CALLBACK-DATA"
             "GLU-NURBS-CALLBACK-DATA-EXT" "GLU-NURBS-CURVE" "GLU-NURBS-PROPERTY"
             "GLU-NURBS-SURFACE" "GLU-ORTHO-2D" "GLU-PARTIAL-DISK" "GLU-PERSPECTIVE"
             "GLU-PICK-MATRIX" "GLU-PROJECT" "GLU-PWL-CURVE" "GLU-QUADRIC-CALLBACK"
             "GLU-QUADRIC-DRAW-STYLE" "GLU-QUADRIC-NORMALS" "GLU-QUADRIC-ORIENTATION"
             "GLU-QUADRIC-TEXTURE" "GLU-SCALE-IMAGE" "GLU-SPHERE" "GLU-TESS-BEGIN-CONTOUR"
             "GLU-TESS-BEGIN-POLYGON" "GLU-TESS-CALLBACK" "GLU-TESS-END-CONTOUR"
             "GLU-TESS-END-POLYGON" "GLU-TESS-NORMAL" "GLU-TESS-PROPERTY" "GLU-TESS-VERTEX"
             "GLU-UN-PROJECT" "GLU-UN-PROJECT-4" "GLU-NURBS" "GLU-QUADRIC" "GLU-TESSELATOR"
             "GL-BITFIELD" "GL-CLAMPD" "GL-BYTE" "GL-USHORT" "GL-UINT" "PFNGLDRAWRANGEELEMENTSPROC"
             "PFNGLTEXIMAGE-3-DPROC" "PFNGLTEXSUBIMAGE-3-DPROC" "PFNGLCOPYTEXSUBIMAGE-3-DPROC"
             "PFNGLBLENDCOLORPROC" "PFNGLBLENDEQUATIONPROC" "PFNGLCOLORTABLEPROC"
             "PFNGLCOLORTABLEPARAMETERFVPROC" "PFNGLCOLORTABLEPARAMETERIVPROC"
             "PFNGLCOPYCOLORTABLEPROC" "PFNGLGETCOLORTABLEPROC" "PFNGLGETCOLORTABLEPARAMETERFVPROC"
             "PFNGLGETCOLORTABLEPARAMETERIVPROC" "PFNGLCOLORSUBTABLEPROC"
             "PFNGLCOPYCOLORSUBTABLEPROC" "PFNGLCONVOLUTIONFILTER-1-DPROC"
             "PFNGLCONVOLUTIONFILTER-2-DPROC" "PFNGLCONVOLUTIONPARAMETERFPROC"
             "PFNGLCONVOLUTIONPARAMETERFVPROC" "PFNGLCONVOLUTIONPARAMETERIPROC"
             "PFNGLCONVOLUTIONPARAMETERIVPROC" "PFNGLCOPYCONVOLUTIONFILTER-1-DPROC"
             "PFNGLCOPYCONVOLUTIONFILTER-2-DPROC" "PFNGLGETCONVOLUTIONFILTERPROC"
             "PFNGLGETCONVOLUTIONPARAMETERFVPROC" "PFNGLGETCONVOLUTIONPARAMETERIVPROC"
             "PFNGLGETSEPARABLEFILTERPROC" "PFNGLSEPARABLEFILTER-2-DPROC" "PFNGLGETHISTOGRAMPROC"
             "PFNGLGETHISTOGRAMPARAMETERFVPROC" "PFNGLGETHISTOGRAMPARAMETERIVPROC"
             "PFNGLGETMINMAXPROC" "PFNGLGETMINMAXPARAMETERFVPROC" "PFNGLGETMINMAXPARAMETERIVPROC"
             "PFNGLHISTOGRAMPROC" "PFNGLMINMAXPROC" "PFNGLRESETHISTOGRAMPROC"
             "PFNGLRESETMINMAXPROC" "GL-CLAMPF" "PFNGLACTIVETEXTUREPROC"
             "PFNGLCLIENTACTIVETEXTUREPROC" "PFNGLMULTITEXCOORD-1-DPROC"
             "PFNGLMULTITEXCOORD-1-DVPROC" "PFNGLMULTITEXCOORD-1-FPROC"
             "PFNGLMULTITEXCOORD-1-FVPROC" "PFNGLMULTITEXCOORD-1-IPROC"
             "PFNGLMULTITEXCOORD-1-IVPROC" "PFNGLMULTITEXCOORD-1-SPROC"
             "PFNGLMULTITEXCOORD-1-SVPROC" "PFNGLMULTITEXCOORD-2-DPROC"
             "PFNGLMULTITEXCOORD-2-DVPROC" "PFNGLMULTITEXCOORD-2-FPROC"
             "PFNGLMULTITEXCOORD-2-FVPROC" "PFNGLMULTITEXCOORD-2-IPROC"
             "PFNGLMULTITEXCOORD-2-IVPROC" "PFNGLMULTITEXCOORD-2-SPROC"
             "PFNGLMULTITEXCOORD-2-SVPROC" "PFNGLMULTITEXCOORD-3-DPROC"
             "PFNGLMULTITEXCOORD-3-DVPROC" "PFNGLMULTITEXCOORD-3-FPROC"
             "PFNGLMULTITEXCOORD-3-FVPROC" "PFNGLMULTITEXCOORD-3-IPROC"
             "PFNGLMULTITEXCOORD-3-IVPROC" "PFNGLMULTITEXCOORD-3-SPROC"
             "PFNGLMULTITEXCOORD-3-SVPROC" "PFNGLMULTITEXCOORD-4-DPROC"
             "PFNGLMULTITEXCOORD-4-DVPROC" "PFNGLMULTITEXCOORD-4-FPROC"
             "PFNGLMULTITEXCOORD-4-FVPROC" "PFNGLMULTITEXCOORD-4-IPROC"
             "PFNGLMULTITEXCOORD-4-IVPROC" "PFNGLMULTITEXCOORD-4-SPROC"
             "PFNGLMULTITEXCOORD-4-SVPROC" "PFNGLLOADTRANSPOSEMATRIXFPROC"
             "PFNGLLOADTRANSPOSEMATRIXDPROC" "PFNGLMULTTRANSPOSEMATRIXFPROC"
             "PFNGLMULTTRANSPOSEMATRIXDPROC" "PFNGLSAMPLECOVERAGEPROC"
             "PFNGLCOMPRESSEDTEXIMAGE-3-DPROC" "PFNGLCOMPRESSEDTEXIMAGE-2-DPROC"
             "PFNGLCOMPRESSEDTEXIMAGE-1-DPROC" "PFNGLCOMPRESSEDTEXSUBIMAGE-3-DPROC"
             "PFNGLCOMPRESSEDTEXSUBIMAGE-2-DPROC" "PFNGLCOMPRESSEDTEXSUBIMAGE-1-DPROC"
             "PFNGLGETCOMPRESSEDTEXIMAGEPROC" "PFNGLACTIVETEXTUREARBPROC"
             "PFNGLCLIENTACTIVETEXTUREARBPROC" "PFNGLMULTITEXCOORD-1-DARBPROC"
             "PFNGLMULTITEXCOORD-1-DVARBPROC" "PFNGLMULTITEXCOORD-1-FARBPROC"
             "PFNGLMULTITEXCOORD-1-FVARBPROC" "PFNGLMULTITEXCOORD-1-IARBPROC"
             "PFNGLMULTITEXCOORD-1-IVARBPROC" "PFNGLMULTITEXCOORD-1-SARBPROC"
             "PFNGLMULTITEXCOORD-1-SVARBPROC" "PFNGLMULTITEXCOORD-2-DARBPROC"
             "PFNGLMULTITEXCOORD-2-DVARBPROC" "PFNGLMULTITEXCOORD-2-FARBPROC"
             "PFNGLMULTITEXCOORD-2-FVARBPROC" "PFNGLMULTITEXCOORD-2-IARBPROC"
             "PFNGLMULTITEXCOORD-2-IVARBPROC" "PFNGLMULTITEXCOORD-2-SARBPROC"
             "PFNGLMULTITEXCOORD-2-SVARBPROC" "PFNGLMULTITEXCOORD-3-DARBPROC"
             "PFNGLMULTITEXCOORD-3-DVARBPROC" "PFNGLMULTITEXCOORD-3-FARBPROC"
             "PFNGLMULTITEXCOORD-3-FVARBPROC" "PFNGLMULTITEXCOORD-3-IARBPROC"
             "PFNGLMULTITEXCOORD-3-IVARBPROC" "PFNGLMULTITEXCOORD-3-SARBPROC"
             "PFNGLMULTITEXCOORD-3-SVARBPROC" "PFNGLMULTITEXCOORD-4-DARBPROC"
             "PFNGLMULTITEXCOORD-4-DVARBPROC" "PFNGLMULTITEXCOORD-4-FARBPROC"
             "PFNGLMULTITEXCOORD-4-FVARBPROC" "PFNGLMULTITEXCOORD-4-IARBPROC"
             "PFNGLMULTITEXCOORD-4-IVARBPROC" "PFNGLMULTITEXCOORD-4-SARBPROC" "GL-SHORT"
             "PFNGLMULTITEXCOORD-4-SVARBPROC" "GL-CHAR-ARB" "GL-HANDLE-ARB"
             "GL-PROGRAMCALLBACK-MESA" "PFNGLBLENDEQUATIONSEPARATEATIPROC" "GLU-NURBS-OBJ"
             "GLU-QUADRIC-OBJ" "GLU-TESSELATOR-OBJ" "GLU-TRIANGULATOR-OBJ" "GL-UBYTE" "GL-FLOAT"
             "GL-BOOLEAN" "GL-SIZEI" "GL-ENUM" "GL-VOID" "GL-DOUBLE" "GL-INT"))

(in-package :OPENGL-CFFI-BINDINGS)
(cffi::defctype* gl-int :int)
(cffi::defctype* gl-double :double)
(cffi:defcstruct glu-tesselator)
(cffi::defctype* gl-void :void)
(cffi::defctype* gl-enum :unsigned-int)
(cffi::defctype* _glu-funcptr :pointer)
(cffi:defcstruct glu-quadric)
(cffi::defctype* gl-sizei :int)
(cffi::defctype* gl-boolean :unsigned-char)
(cffi:defcstruct glu-nurbs)
(cffi::defctype* gl-float :float)
(cffi::defctype* gl-ubyte :unsigned-char)
(cffi::defctype* glu-triangulator-obj glu-tesselator)
(cffi::defctype* glu-tesselator-obj glu-tesselator)
(cffi::defctype* glu-quadric-obj glu-quadric)
(cffi::defctype* glu-nurbs-obj glu-nurbs)
(cffi::defctype* pfnglblendequationseparateatiproc :pointer)
(cffi::defctype* gl-programcallback-mesa :pointer)
(cffi::defctype* gl-handle-arb :unsigned-int)
(cffi::defctype* gl-char-arb :char)
(cffi::defctype* pfnglmultitexcoord-4-svarbproc :pointer)
(cffi::defctype* gl-short :short)
(cffi::defctype* pfnglmultitexcoord-4-sarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-ivarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-iarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-fvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-farbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-dvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-darbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-svarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-sarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-ivarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-iarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-fvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-farbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-dvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-darbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-svarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-sarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-ivarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-iarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-fvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-farbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-dvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-darbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-svarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-sarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-ivarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-iarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-fvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-farbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-dvarbproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-darbproc :pointer)
(cffi::defctype* pfnglclientactivetexturearbproc :pointer)
(cffi::defctype* pfnglactivetexturearbproc :pointer)
(cffi::defctype* pfnglgetcompressedteximageproc :pointer)
(cffi::defctype* pfnglcompressedtexsubimage-1-dproc :pointer)
(cffi::defctype* pfnglcompressedtexsubimage-2-dproc :pointer)
(cffi::defctype* pfnglcompressedtexsubimage-3-dproc :pointer)
(cffi::defctype* pfnglcompressedteximage-1-dproc :pointer)
(cffi::defctype* pfnglcompressedteximage-2-dproc :pointer)
(cffi::defctype* pfnglcompressedteximage-3-dproc :pointer)
(cffi::defctype* pfnglsamplecoverageproc :pointer)
(cffi::defctype* pfnglmulttransposematrixdproc :pointer)
(cffi::defctype* pfnglmulttransposematrixfproc :pointer)
(cffi::defctype* pfnglloadtransposematrixdproc :pointer)
(cffi::defctype* pfnglloadtransposematrixfproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-svproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-sproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-ivproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-iproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-fvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-fproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-dvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-4-dproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-svproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-sproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-ivproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-iproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-fvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-fproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-dvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-3-dproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-svproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-sproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-ivproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-iproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-fvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-fproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-dvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-2-dproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-svproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-sproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-ivproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-iproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-fvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-fproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-dvproc :pointer)
(cffi::defctype* pfnglmultitexcoord-1-dproc :pointer)
(cffi::defctype* pfnglclientactivetextureproc :pointer)
(cffi::defctype* pfnglactivetextureproc :pointer)
(cffi::defctype* gl-clampf :float)
(cffi::defctype* pfnglresetminmaxproc :pointer)
(cffi::defctype* pfnglresethistogramproc :pointer)
(cffi::defctype* pfnglminmaxproc :pointer)
(cffi::defctype* pfnglhistogramproc :pointer)
(cffi::defctype* pfnglgetminmaxparameterivproc :pointer)
(cffi::defctype* pfnglgetminmaxparameterfvproc :pointer)
(cffi::defctype* pfnglgetminmaxproc :pointer)
(cffi::defctype* pfnglgethistogramparameterivproc :pointer)
(cffi::defctype* pfnglgethistogramparameterfvproc :pointer)
(cffi::defctype* pfnglgethistogramproc :pointer)
(cffi::defctype* pfnglseparablefilter-2-dproc :pointer)
(cffi::defctype* pfnglgetseparablefilterproc :pointer)
(cffi::defctype* pfnglgetconvolutionparameterivproc :pointer)
(cffi::defctype* pfnglgetconvolutionparameterfvproc :pointer)
(cffi::defctype* pfnglgetconvolutionfilterproc :pointer)
(cffi::defctype* pfnglcopyconvolutionfilter-2-dproc :pointer)
(cffi::defctype* pfnglcopyconvolutionfilter-1-dproc :pointer)
(cffi::defctype* pfnglconvolutionparameterivproc :pointer)
(cffi::defctype* pfnglconvolutionparameteriproc :pointer)
(cffi::defctype* pfnglconvolutionparameterfvproc :pointer)
(cffi::defctype* pfnglconvolutionparameterfproc :pointer)
(cffi::defctype* pfnglconvolutionfilter-2-dproc :pointer)
(cffi::defctype* pfnglconvolutionfilter-1-dproc :pointer)
(cffi::defctype* pfnglcopycolorsubtableproc :pointer)
(cffi::defctype* pfnglcolorsubtableproc :pointer)
(cffi::defctype* pfnglgetcolortableparameterivproc :pointer)
(cffi::defctype* pfnglgetcolortableparameterfvproc :pointer)
(cffi::defctype* pfnglgetcolortableproc :pointer)
(cffi::defctype* pfnglcopycolortableproc :pointer)
(cffi::defctype* pfnglcolortableparameterivproc :pointer)
(cffi::defctype* pfnglcolortableparameterfvproc :pointer)
(cffi::defctype* pfnglcolortableproc :pointer)
(cffi::defctype* pfnglblendequationproc :pointer)
(cffi::defctype* pfnglblendcolorproc :pointer)
(cffi::defctype* pfnglcopytexsubimage-3-dproc :pointer)
(cffi::defctype* pfngltexsubimage-3-dproc :pointer)
(cffi::defctype* pfnglteximage-3-dproc :pointer)
(cffi::defctype* pfngldrawrangeelementsproc :pointer)
(cffi::defctype* gl-uint :unsigned-int)
(cffi::defctype* gl-ushort :short)
(cffi::defctype* gl-byte :char)
(cffi::defctype* gl-clampd :double)
(cffi::defctype* gl-bitfield :unsigned-int)
(cl:progn
 (cffi:defcfun ("gluUnProject4" glu-un-project-4) gl-int (winX gl-double) (winY gl-double)
  (winZ gl-double) (clipW gl-double) (model :pointer) (proj :pointer) (view :pointer)
  (nearVal gl-double) (farVal gl-double) (objX :pointer) (objY :pointer) (objZ :pointer)
  (objW :pointer))
 (cffi:defcfun ("gluUnProject" glu-un-project) gl-int (winX gl-double) (winY gl-double)
  (winZ gl-double) (model :pointer) (proj :pointer) (view :pointer) (objX :pointer) (objY :pointer)
  (objZ :pointer))
 (cffi:defcfun ("gluTessVertex" glu-tess-vertex) :void (tess :pointer) (location :pointer)
  (data :pointer))
 (cffi:defcfun ("gluTessProperty" glu-tess-property) :void (tess :pointer) (which gl-enum)
  (data gl-double))
 (cffi:defcfun ("gluTessNormal" glu-tess-normal) :void (tess :pointer) (valueX gl-double)
  (valueY gl-double) (valueZ gl-double))
 (cffi:defcfun ("gluTessEndPolygon" glu-tess-end-polygon) :void (tess :pointer))
 (cffi:defcfun ("gluTessEndContour" glu-tess-end-contour) :void (tess :pointer))
 (cffi:defcfun ("gluTessCallback" glu-tess-callback) :void (tess :pointer) (which gl-enum)
  (CallBackFunc _glu-funcptr))
 (cffi:defcfun ("gluTessBeginPolygon" glu-tess-begin-polygon) :void (tess :pointer)
  (data :pointer))
 (cffi:defcfun ("gluTessBeginContour" glu-tess-begin-contour) :void (tess :pointer))
 (cffi:defcfun ("gluSphere" glu-sphere) :void (quad :pointer) (radius gl-double) (slices gl-int)
  (stacks gl-int))
 (cffi:defcfun ("gluScaleImage" glu-scale-image) gl-int (format gl-enum) (wIn gl-sizei)
  (hIn gl-sizei) (typeIn gl-enum) (dataIn :pointer) (wOut gl-sizei) (hOut gl-sizei)
  (typeOut gl-enum) (dataOut :pointer))
 (cffi:defcfun ("gluQuadricTexture" glu-quadric-texture) :void (quad :pointer)
  (texture gl-boolean))
 (cffi:defcfun ("gluQuadricOrientation" glu-quadric-orientation) :void (quad :pointer)
  (orientation gl-enum))
 (cffi:defcfun ("gluQuadricNormals" glu-quadric-normals) :void (quad :pointer) (normal gl-enum))
 (cffi:defcfun ("gluQuadricDrawStyle" glu-quadric-draw-style) :void (quad :pointer) (draw gl-enum))
 (cffi:defcfun ("gluQuadricCallback" glu-quadric-callback) :void (quad :pointer) (which gl-enum)
  (CallBackFunc _glu-funcptr))
 (cffi:defcfun ("gluPwlCurve" glu-pwl-curve) :void (nurb :pointer) (count gl-int) (data :pointer)
  (stride gl-int) (type gl-enum))
 (cffi:defcfun ("gluProject" glu-project) gl-int (objX gl-double) (objY gl-double) (objZ gl-double)
  (model :pointer) (proj :pointer) (view :pointer) (winX :pointer) (winY :pointer) (winZ :pointer))
 (cffi:defcfun ("gluPickMatrix" glu-pick-matrix) :void (x gl-double) (y gl-double) (delX gl-double)
  (delY gl-double) (viewport :pointer))
 (cffi:defcfun ("gluPerspective" glu-perspective) :void (fovy gl-double) (aspect gl-double)
  (zNear gl-double) (zFar gl-double))
 (cffi:defcfun ("gluPartialDisk" glu-partial-disk) :void (quad :pointer) (inner gl-double)
  (outer gl-double) (slices gl-int) (loops gl-int) (start gl-double) (sweep gl-double))
 (cffi:defcfun ("gluOrtho2D" glu-ortho-2d) :void (left gl-double) (right gl-double)
  (bottom gl-double) (top gl-double))
 (cffi:defcfun ("gluNurbsSurface" glu-nurbs-surface) :void (nurb :pointer) (sKnotCount gl-int)
  (sKnots :pointer) (tKnotCount gl-int) (tKnots :pointer) (sStride gl-int) (tStride gl-int)
  (control :pointer) (sOrder gl-int) (tOrder gl-int) (type gl-enum))
 (cffi:defcfun ("gluNurbsProperty" glu-nurbs-property) :void (nurb :pointer) (property gl-enum)
  (value gl-float))
 (cffi:defcfun ("gluNurbsCurve" glu-nurbs-curve) :void (nurb :pointer) (knotCount gl-int)
  (knots :pointer) (stride gl-int) (control :pointer) (order gl-int) (type gl-enum))
 (cffi:defcfun ("gluNurbsCallbackDataEXT" glu-nurbs-callback-data-ext) :void (nurb :pointer)
  (userData :pointer))
 (cffi:defcfun ("gluNurbsCallbackData" glu-nurbs-callback-data) :void (nurb :pointer)
  (userData :pointer))
 (cffi:defcfun ("gluNurbsCallback" glu-nurbs-callback) :void (nurb :pointer) (which gl-enum)
  (CallBackFunc _glu-funcptr))
 (cffi:defcfun ("gluNextContour" glu-next-contour) :void (tess :pointer) (type gl-enum))
 (cffi:defcfun ("gluNewTess" glu-new-tess) :pointer)
 (cffi:defcfun ("gluNewQuadric" glu-new-quadric) :pointer)
 (cffi:defcfun ("gluNewNurbsRenderer" glu-new-nurbs-renderer) :pointer)
 (cffi:defcfun ("gluLookAt" glu-look-at) :void (eyeX gl-double) (eyeY gl-double) (eyeZ gl-double)
  (centerX gl-double) (centerY gl-double) (centerZ gl-double) (upX gl-double) (upY gl-double)
  (upZ gl-double))
 (cffi:defcfun ("gluLoadSamplingMatrices" glu-load-sampling-matrices) :void (nurb :pointer)
  (model :pointer) (perspective :pointer) (view :pointer))
 (cffi:defcfun ("gluGetTessProperty" glu-get-tess-property) :void (tess :pointer) (which gl-enum)
  (data :pointer))
 (cffi:defcfun ("gluGetString" glu-get-string) :pointer (name gl-enum))
 (cffi:defcfun ("gluGetNurbsProperty" glu-get-nurbs-property) :void (nurb :pointer)
  (property gl-enum) (data :pointer))
 (cffi:defcfun ("gluErrorString" glu-error-string) :pointer (error gl-enum))
 (cffi:defcfun ("gluEndTrim" glu-end-trim) :void (nurb :pointer))
 (cffi:defcfun ("gluEndSurface" glu-end-surface) :void (nurb :pointer))
 (cffi:defcfun ("gluEndPolygon" glu-end-polygon) :void (tess :pointer))
 (cffi:defcfun ("gluEndCurve" glu-end-curve) :void (nurb :pointer))
 (cffi:defcfun ("gluDisk" glu-disk) :void (quad :pointer) (inner gl-double) (outer gl-double)
  (slices gl-int) (loops gl-int))
 (cffi:defcfun ("gluDeleteTess" glu-delete-tess) :void (tess :pointer))
 (cffi:defcfun ("gluDeleteQuadric" glu-delete-quadric) :void (quad :pointer))
 (cffi:defcfun ("gluDeleteNurbsRenderer" glu-delete-nurbs-renderer) :void (nurb :pointer))
 (cffi:defcfun ("gluCylinder" glu-cylinder) :void (quad :pointer) (base gl-double) (top gl-double)
  (height gl-double) (slices gl-int) (stacks gl-int))
 (cffi:defcfun ("gluCheckExtension" glu-check-extension) gl-boolean (extName :pointer)
  (extString :pointer))
 (cffi:defcfun ("gluBuild3DMipmaps" glu-build-3d-mipmaps) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (depth gl-sizei) (format gl-enum)
  (type gl-enum) (data :pointer))
 (cffi:defcfun ("gluBuild3DMipmapLevels" glu-build-3d-mipmap-levels) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (depth gl-sizei) (format gl-enum)
  (type gl-enum) (level gl-int) (base gl-int) (max gl-int) (data :pointer))
 (cffi:defcfun ("gluBuild2DMipmaps" glu-build-2d-mipmaps) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (format gl-enum) (type gl-enum)
  (data :pointer))
 (cffi:defcfun ("gluBuild2DMipmapLevels" glu-build-2d-mipmap-levels) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (format gl-enum) (type gl-enum)
  (level gl-int) (base gl-int) (max gl-int) (data :pointer))
 (cffi:defcfun ("gluBuild1DMipmaps" glu-build-1d-mipmaps) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (format gl-enum) (type gl-enum) (data :pointer))
 (cffi:defcfun ("gluBuild1DMipmapLevels" glu-build-1d-mipmap-levels) gl-int (target gl-enum)
  (internalFormat gl-int) (width gl-sizei) (format gl-enum) (type gl-enum) (level gl-int)
  (base gl-int) (max gl-int) (data :pointer))
 (cffi:defcfun ("gluBeginTrim" glu-begin-trim) :void (nurb :pointer))
 (cffi:defcfun ("gluBeginSurface" glu-begin-surface) :void (nurb :pointer))
 (cffi:defcfun ("gluBeginPolygon" glu-begin-polygon) :void (tess :pointer))
 (cffi:defcfun ("gluBeginCurve" glu-begin-curve) :void (nurb :pointer))
 (cffi:defcfun ("glBlendEquationSeparateATI" gl-blend-equation-separate-ati) :void
  (modeRGB gl-enum) (modeA gl-enum))
 (cffi:defcfun ("glGetProgramRegisterfvMESA" gl-get-program-registerfv-mesa) :void (target gl-enum)
  (len gl-sizei) (name :pointer) (v :pointer))
 (cffi:defcfun ("glProgramCallbackMESA" gl-program-callback-mesa) :void (target gl-enum)
  (callback gl-programcallback-mesa) (data :pointer))
 (cffi:defcfun ("glGetDebugLogLengthMESA" gl-get-debug-log-length-mesa) gl-sizei
  (obj gl-handle-arb) (logType gl-enum) (shaderType gl-enum))
 (cffi:defcfun ("glGetDebugLogMESA" gl-get-debug-log-mesa) :void (obj gl-handle-arb)
  (logType gl-enum) (shaderType gl-enum) (maxLength gl-sizei) (length :pointer)
  (debugLog :pointer))
 (cffi:defcfun ("glClearDebugLogMESA" gl-clear-debug-log-mesa) :void (obj gl-handle-arb)
  (logType gl-enum) (shaderType gl-enum))
 (cffi:defcfun ("glCreateDebugObjectMESA" gl-create-debug-object-mesa) gl-handle-arb)
 (cffi:defcfun ("glMultiTexCoord4svARB" gl-multi-tex-coord-4sv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4sARB" gl-multi-tex-coord-4s-arb) :void (target gl-enum)
  (s gl-short) (t gl-short) (r gl-short) (q gl-short))
 (cffi:defcfun ("glMultiTexCoord4ivARB" gl-multi-tex-coord-4iv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4iARB" gl-multi-tex-coord-4i-arb) :void (target gl-enum) (s gl-int)
  (t gl-int) (r gl-int) (q gl-int))
 (cffi:defcfun ("glMultiTexCoord4fvARB" gl-multi-tex-coord-4fv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4fARB" gl-multi-tex-coord-4f-arb) :void (target gl-enum)
  (s gl-float) (t gl-float) (r gl-float) (q gl-float))
 (cffi:defcfun ("glMultiTexCoord4dvARB" gl-multi-tex-coord-4dv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4dARB" gl-multi-tex-coord-4d-arb) :void (target gl-enum)
  (s gl-double) (t gl-double) (r gl-double) (q gl-double))
 (cffi:defcfun ("glMultiTexCoord3svARB" gl-multi-tex-coord-3sv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3sARB" gl-multi-tex-coord-3s-arb) :void (target gl-enum)
  (s gl-short) (t gl-short) (r gl-short))
 (cffi:defcfun ("glMultiTexCoord3ivARB" gl-multi-tex-coord-3iv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3iARB" gl-multi-tex-coord-3i-arb) :void (target gl-enum) (s gl-int)
  (t gl-int) (r gl-int))
 (cffi:defcfun ("glMultiTexCoord3fvARB" gl-multi-tex-coord-3fv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3fARB" gl-multi-tex-coord-3f-arb) :void (target gl-enum)
  (s gl-float) (t gl-float) (r gl-float))
 (cffi:defcfun ("glMultiTexCoord3dvARB" gl-multi-tex-coord-3dv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3dARB" gl-multi-tex-coord-3d-arb) :void (target gl-enum)
  (s gl-double) (t gl-double) (r gl-double))
 (cffi:defcfun ("glMultiTexCoord2svARB" gl-multi-tex-coord-2sv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2sARB" gl-multi-tex-coord-2s-arb) :void (target gl-enum)
  (s gl-short) (t gl-short))
 (cffi:defcfun ("glMultiTexCoord2ivARB" gl-multi-tex-coord-2iv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2iARB" gl-multi-tex-coord-2i-arb) :void (target gl-enum) (s gl-int)
  (t gl-int))
 (cffi:defcfun ("glMultiTexCoord2fvARB" gl-multi-tex-coord-2fv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2fARB" gl-multi-tex-coord-2f-arb) :void (target gl-enum)
  (s gl-float) (t gl-float))
 (cffi:defcfun ("glMultiTexCoord2dvARB" gl-multi-tex-coord-2dv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2dARB" gl-multi-tex-coord-2d-arb) :void (target gl-enum)
  (s gl-double) (t gl-double))
 (cffi:defcfun ("glMultiTexCoord1svARB" gl-multi-tex-coord-1sv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1sARB" gl-multi-tex-coord-1s-arb) :void (target gl-enum)
  (s gl-short))
 (cffi:defcfun ("glMultiTexCoord1ivARB" gl-multi-tex-coord-1iv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1iARB" gl-multi-tex-coord-1i-arb) :void (target gl-enum)
  (s gl-int))
 (cffi:defcfun ("glMultiTexCoord1fvARB" gl-multi-tex-coord-1fv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1fARB" gl-multi-tex-coord-1f-arb) :void (target gl-enum)
  (s gl-float))
 (cffi:defcfun ("glMultiTexCoord1dvARB" gl-multi-tex-coord-1dv-arb) :void (target gl-enum)
  (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1dARB" gl-multi-tex-coord-1d-arb) :void (target gl-enum)
  (s gl-double))
 (cffi:defcfun ("glClientActiveTextureARB" gl-client-active-texture-arb) :void (texture gl-enum))
 (cffi:defcfun ("glActiveTextureARB" gl-active-texture-arb) :void (texture gl-enum))
 (cffi:defcfun ("glSampleCoverage" gl-sample-coverage) :void (value gl-clampf) (invert gl-boolean))
 (cffi:defcfun ("glMultTransposeMatrixf" gl-mult-transpose-matrixf) :void (m :pointer))
 (cffi:defcfun ("glMultTransposeMatrixd" gl-mult-transpose-matrixd) :void (m :pointer))
 (cffi:defcfun ("glLoadTransposeMatrixf" gl-load-transpose-matrixf) :void (m :pointer))
 (cffi:defcfun ("glLoadTransposeMatrixd" gl-load-transpose-matrixd) :void (m :pointer))
 (cffi:defcfun ("glMultiTexCoord4sv" gl-multi-tex-coord-4sv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4s" gl-multi-tex-coord-4s) :void (target gl-enum) (s gl-short)
  (t gl-short) (r gl-short) (q gl-short))
 (cffi:defcfun ("glMultiTexCoord4iv" gl-multi-tex-coord-4iv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4i" gl-multi-tex-coord-4i) :void (target gl-enum) (s gl-int)
  (t gl-int) (r gl-int) (q gl-int))
 (cffi:defcfun ("glMultiTexCoord4fv" gl-multi-tex-coord-4fv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4f" gl-multi-tex-coord-4f) :void (target gl-enum) (s gl-float)
  (t gl-float) (r gl-float) (q gl-float))
 (cffi:defcfun ("glMultiTexCoord4dv" gl-multi-tex-coord-4dv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord4d" gl-multi-tex-coord-4d) :void (target gl-enum) (s gl-double)
  (t gl-double) (r gl-double) (q gl-double))
 (cffi:defcfun ("glMultiTexCoord3sv" gl-multi-tex-coord-3sv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3s" gl-multi-tex-coord-3s) :void (target gl-enum) (s gl-short)
  (t gl-short) (r gl-short))
 (cffi:defcfun ("glMultiTexCoord3iv" gl-multi-tex-coord-3iv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3i" gl-multi-tex-coord-3i) :void (target gl-enum) (s gl-int)
  (t gl-int) (r gl-int))
 (cffi:defcfun ("glMultiTexCoord3fv" gl-multi-tex-coord-3fv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3f" gl-multi-tex-coord-3f) :void (target gl-enum) (s gl-float)
  (t gl-float) (r gl-float))
 (cffi:defcfun ("glMultiTexCoord3dv" gl-multi-tex-coord-3dv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord3d" gl-multi-tex-coord-3d) :void (target gl-enum) (s gl-double)
  (t gl-double) (r gl-double))
 (cffi:defcfun ("glMultiTexCoord2sv" gl-multi-tex-coord-2sv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2s" gl-multi-tex-coord-2s) :void (target gl-enum) (s gl-short)
  (t gl-short))
 (cffi:defcfun ("glMultiTexCoord2iv" gl-multi-tex-coord-2iv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2i" gl-multi-tex-coord-2i) :void (target gl-enum) (s gl-int)
  (t gl-int))
 (cffi:defcfun ("glMultiTexCoord2fv" gl-multi-tex-coord-2fv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2f" gl-multi-tex-coord-2f) :void (target gl-enum) (s gl-float)
  (t gl-float))
 (cffi:defcfun ("glMultiTexCoord2dv" gl-multi-tex-coord-2dv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord2d" gl-multi-tex-coord-2d) :void (target gl-enum) (s gl-double)
  (t gl-double))
 (cffi:defcfun ("glMultiTexCoord1sv" gl-multi-tex-coord-1sv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1s" gl-multi-tex-coord-1s) :void (target gl-enum) (s gl-short))
 (cffi:defcfun ("glMultiTexCoord1iv" gl-multi-tex-coord-1iv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1i" gl-multi-tex-coord-1i) :void (target gl-enum) (s gl-int))
 (cffi:defcfun ("glMultiTexCoord1fv" gl-multi-tex-coord-1fv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1f" gl-multi-tex-coord-1f) :void (target gl-enum) (s gl-float))
 (cffi:defcfun ("glMultiTexCoord1dv" gl-multi-tex-coord-1dv) :void (target gl-enum) (v :pointer))
 (cffi:defcfun ("glMultiTexCoord1d" gl-multi-tex-coord-1d) :void (target gl-enum) (s gl-double))
 (cffi:defcfun ("glGetCompressedTexImage" gl-get-compressed-tex-image) :void (target gl-enum)
  (lod gl-int) (img :pointer))
 (cffi:defcfun ("glCompressedTexSubImage3D" gl-compressed-tex-sub-image-3d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (yoffset gl-int) (zoffset gl-int) (width gl-sizei)
  (height gl-sizei) (depth gl-sizei) (format gl-enum) (imageSize gl-sizei) (data :pointer))
 (cffi:defcfun ("glCompressedTexSubImage2D" gl-compressed-tex-sub-image-2d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (yoffset gl-int) (width gl-sizei) (height gl-sizei)
  (format gl-enum) (imageSize gl-sizei) (data :pointer))
 (cffi:defcfun ("glCompressedTexSubImage1D" gl-compressed-tex-sub-image-1d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (width gl-sizei) (format gl-enum) (imageSize gl-sizei)
  (data :pointer))
 (cffi:defcfun ("glCompressedTexImage3D" gl-compressed-tex-image-3d) :void (target gl-enum)
  (level gl-int) (internalformat gl-enum) (width gl-sizei) (height gl-sizei) (depth gl-sizei)
  (border gl-int) (imageSize gl-sizei) (data :pointer))
 (cffi:defcfun ("glCompressedTexImage2D" gl-compressed-tex-image-2d) :void (target gl-enum)
  (level gl-int) (internalformat gl-enum) (width gl-sizei) (height gl-sizei) (border gl-int)
  (imageSize gl-sizei) (data :pointer))
 (cffi:defcfun ("glCompressedTexImage1D" gl-compressed-tex-image-1d) :void (target gl-enum)
  (level gl-int) (internalformat gl-enum) (width gl-sizei) (border gl-int) (imageSize gl-sizei)
  (data :pointer))
 (cffi:defcfun ("glClientActiveTexture" gl-client-active-texture) :void (texture gl-enum))
 (cffi:defcfun ("glActiveTexture" gl-active-texture) :void (texture gl-enum))
 (cffi:defcfun ("glGetSeparableFilter" gl-get-separable-filter) :void (target gl-enum)
  (format gl-enum) (type gl-enum) (row :pointer) (column :pointer) (span :pointer))
 (cffi:defcfun ("glSeparableFilter2D" gl-separable-filter-2d) :void (target gl-enum)
  (internalformat gl-enum) (width gl-sizei) (height gl-sizei) (format gl-enum) (type gl-enum)
  (row :pointer) (column :pointer))
 (cffi:defcfun ("glGetConvolutionParameteriv" gl-get-convolution-parameteriv) :void
  (target gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetConvolutionParameterfv" gl-get-convolution-parameterfv) :void
  (target gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetConvolutionFilter" gl-get-convolution-filter) :void (target gl-enum)
  (format gl-enum) (type gl-enum) (image :pointer))
 (cffi:defcfun ("glCopyConvolutionFilter2D" gl-copy-convolution-filter-2d) :void (target gl-enum)
  (internalformat gl-enum) (x gl-int) (y gl-int) (width gl-sizei) (height gl-sizei))
 (cffi:defcfun ("glCopyConvolutionFilter1D" gl-copy-convolution-filter-1d) :void (target gl-enum)
  (internalformat gl-enum) (x gl-int) (y gl-int) (width gl-sizei))
 (cffi:defcfun ("glConvolutionParameteriv" gl-convolution-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glConvolutionParameteri" gl-convolution-parameteri) :void (target gl-enum)
  (pname gl-enum) (params gl-int))
 (cffi:defcfun ("glConvolutionParameterfv" gl-convolution-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glConvolutionParameterf" gl-convolution-parameterf) :void (target gl-enum)
  (pname gl-enum) (params gl-float))
 (cffi:defcfun ("glConvolutionFilter2D" gl-convolution-filter-2d) :void (target gl-enum)
  (internalformat gl-enum) (width gl-sizei) (height gl-sizei) (format gl-enum) (type gl-enum)
  (image :pointer))
 (cffi:defcfun ("glConvolutionFilter1D" gl-convolution-filter-1d) :void (target gl-enum)
  (internalformat gl-enum) (width gl-sizei) (format gl-enum) (type gl-enum) (image :pointer))
 (cffi:defcfun ("glGetMinmaxParameteriv" gl-get-minmax-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetMinmaxParameterfv" gl-get-minmax-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetMinmax" gl-get-minmax) :void (target gl-enum) (reset gl-boolean)
  (format gl-enum) (types gl-enum) (values :pointer))
 (cffi:defcfun ("glResetMinmax" gl-reset-minmax) :void (target gl-enum))
 (cffi:defcfun ("glMinmax" gl-minmax) :void (target gl-enum) (internalformat gl-enum)
  (sink gl-boolean))
 (cffi:defcfun ("glGetHistogramParameteriv" gl-get-histogram-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetHistogramParameterfv" gl-get-histogram-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetHistogram" gl-get-histogram) :void (target gl-enum) (reset gl-boolean)
  (format gl-enum) (type gl-enum) (values :pointer))
 (cffi:defcfun ("glResetHistogram" gl-reset-histogram) :void (target gl-enum))
 (cffi:defcfun ("glHistogram" gl-histogram) :void (target gl-enum) (width gl-sizei)
  (internalformat gl-enum) (sink gl-boolean))
 (cffi:defcfun ("glBlendColor" gl-blend-color) :void (red gl-clampf) (green gl-clampf)
  (blue gl-clampf) (alpha gl-clampf))
 (cffi:defcfun ("glBlendEquation" gl-blend-equation) :void (mode gl-enum))
 (cffi:defcfun ("glGetColorTableParameteriv" gl-get-color-table-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetColorTableParameterfv" gl-get-color-table-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetColorTable" gl-get-color-table) :void (target gl-enum) (format gl-enum)
  (type gl-enum) (table :pointer))
 (cffi:defcfun ("glCopyColorTable" gl-copy-color-table) :void (target gl-enum)
  (internalformat gl-enum) (x gl-int) (y gl-int) (width gl-sizei))
 (cffi:defcfun ("glCopyColorSubTable" gl-copy-color-sub-table) :void (target gl-enum)
  (start gl-sizei) (x gl-int) (y gl-int) (width gl-sizei))
 (cffi:defcfun ("glColorTableParameterfv" gl-color-table-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glColorTableParameteriv" gl-color-table-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glColorSubTable" gl-color-sub-table) :void (target gl-enum) (start gl-sizei)
  (count gl-sizei) (format gl-enum) (type gl-enum) (data :pointer))
 (cffi:defcfun ("glColorTable" gl-color-table) :void (target gl-enum) (internalformat gl-enum)
  (width gl-sizei) (format gl-enum) (type gl-enum) (table :pointer))
 (cffi:defcfun ("glCopyTexSubImage3D" gl-copy-tex-sub-image-3d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (yoffset gl-int) (zoffset gl-int) (x gl-int) (y gl-int)
  (width gl-sizei) (height gl-sizei))
 (cffi:defcfun ("glTexSubImage3D" gl-tex-sub-image-3d) :void (target gl-enum) (level gl-int)
  (xoffset gl-int) (yoffset gl-int) (zoffset gl-int) (width gl-sizei) (height gl-sizei)
  (depth gl-sizei) (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glTexImage3D" gl-tex-image-3d) :void (target gl-enum) (level gl-int)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (depth gl-sizei) (border gl-int)
  (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glDrawRangeElements" gl-draw-range-elements) :void (mode gl-enum) (start gl-uint)
  (end gl-uint) (count gl-sizei) (type gl-enum) (indices :pointer))
 (cffi:defcfun ("glPopName" gl-pop-name) :void)
 (cffi:defcfun ("glPushName" gl-push-name) :void (name gl-uint))
 (cffi:defcfun ("glLoadName" gl-load-name) :void (name gl-uint))
 (cffi:defcfun ("glInitNames" gl-init-names) :void)
 (cffi:defcfun ("glSelectBuffer" gl-select-buffer) :void (size gl-sizei) (buffer :pointer))
 (cffi:defcfun ("glPassThrough" gl-pass-through) :void (token gl-float))
 (cffi:defcfun ("glFeedbackBuffer" gl-feedback-buffer) :void (size gl-sizei) (type gl-enum)
  (buffer :pointer))
 (cffi:defcfun ("glFogiv" gl-fogiv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glFogfv" gl-fogfv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glFogi" gl-fogi) :void (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glFogf" gl-fogf) :void (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glEvalMesh2" gl-eval-mesh-2) :void (mode gl-enum) (i1 gl-int) (i2 gl-int)
  (j1 gl-int) (j2 gl-int))
 (cffi:defcfun ("glEvalMesh1" gl-eval-mesh-1) :void (mode gl-enum) (i1 gl-int) (i2 gl-int))
 (cffi:defcfun ("glEvalPoint2" gl-eval-point-2) :void (i gl-int) (j gl-int))
 (cffi:defcfun ("glEvalPoint1" gl-eval-point-1) :void (i gl-int))
 (cffi:defcfun ("glMapGrid2f" gl-map-grid-2f) :void (un gl-int) (u1 gl-float) (u2 gl-float)
  (vn gl-int) (v1 gl-float) (v2 gl-float))
 (cffi:defcfun ("glMapGrid2d" gl-map-grid-2d) :void (un gl-int) (u1 gl-double) (u2 gl-double)
  (vn gl-int) (v1 gl-double) (v2 gl-double))
 (cffi:defcfun ("glMapGrid1f" gl-map-grid-1f) :void (un gl-int) (u1 gl-float) (u2 gl-float))
 (cffi:defcfun ("glMapGrid1d" gl-map-grid-1d) :void (un gl-int) (u1 gl-double) (u2 gl-double))
 (cffi:defcfun ("glEvalCoord2fv" gl-eval-coord-2fv) :void (u :pointer))
 (cffi:defcfun ("glEvalCoord2dv" gl-eval-coord-2dv) :void (u :pointer))
 (cffi:defcfun ("glEvalCoord2f" gl-eval-coord-2f) :void (u gl-float) (v gl-float))
 (cffi:defcfun ("glEvalCoord2d" gl-eval-coord-2d) :void (u gl-double) (v gl-double))
 (cffi:defcfun ("glEvalCoord1fv" gl-eval-coord-1fv) :void (u :pointer))
 (cffi:defcfun ("glEvalCoord1dv" gl-eval-coord-1dv) :void (u :pointer))
 (cffi:defcfun ("glEvalCoord1f" gl-eval-coord-1f) :void (u gl-float))
 (cffi:defcfun ("glEvalCoord1d" gl-eval-coord-1d) :void (u gl-double))
 (cffi:defcfun ("glGetMapiv" gl-get-mapiv) :void (target gl-enum) (query gl-enum) (v :pointer))
 (cffi:defcfun ("glGetMapfv" gl-get-mapfv) :void (target gl-enum) (query gl-enum) (v :pointer))
 (cffi:defcfun ("glGetMapdv" gl-get-mapdv) :void (target gl-enum) (query gl-enum) (v :pointer))
 (cffi:defcfun ("glMap2f" gl-map-2f) :void (target gl-enum) (u1 gl-float) (u2 gl-float)
  (ustride gl-int) (uorder gl-int) (v1 gl-float) (v2 gl-float) (vstride gl-int) (vorder gl-int)
  (points :pointer))
 (cffi:defcfun ("glMap2d" gl-map-2d) :void (target gl-enum) (u1 gl-double) (u2 gl-double)
  (ustride gl-int) (uorder gl-int) (v1 gl-double) (v2 gl-double) (vstride gl-int) (vorder gl-int)
  (points :pointer))
 (cffi:defcfun ("glMap1f" gl-map-1f) :void (target gl-enum) (u1 gl-float) (u2 gl-float)
  (stride gl-int) (order gl-int) (points :pointer))
 (cffi:defcfun ("glMap1d" gl-map-1d) :void (target gl-enum) (u1 gl-double) (u2 gl-double)
  (stride gl-int) (order gl-int) (points :pointer))
 (cffi:defcfun ("glCopyTexSubImage2D" gl-copy-tex-sub-image-2d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (yoffset gl-int) (x gl-int) (y gl-int) (width gl-sizei)
  (height gl-sizei))
 (cffi:defcfun ("glCopyTexSubImage1D" gl-copy-tex-sub-image-1d) :void (target gl-enum)
  (level gl-int) (xoffset gl-int) (x gl-int) (y gl-int) (width gl-sizei))
 (cffi:defcfun ("glCopyTexImage2D" gl-copy-tex-image-2d) :void (target gl-enum) (level gl-int)
  (internalformat gl-enum) (x gl-int) (y gl-int) (width gl-sizei) (height gl-sizei)
  (border gl-int))
 (cffi:defcfun ("glCopyTexImage1D" gl-copy-tex-image-1d) :void (target gl-enum) (level gl-int)
  (internalformat gl-enum) (x gl-int) (y gl-int) (width gl-sizei) (border gl-int))
 (cffi:defcfun ("glTexSubImage2D" gl-tex-sub-image-2d) :void (target gl-enum) (level gl-int)
  (xoffset gl-int) (yoffset gl-int) (width gl-sizei) (height gl-sizei) (format gl-enum)
  (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glTexSubImage1D" gl-tex-sub-image-1d) :void (target gl-enum) (level gl-int)
  (xoffset gl-int) (width gl-sizei) (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glIsTexture" gl-is-texture) gl-boolean (texture gl-uint))
 (cffi:defcfun ("glAreTexturesResident" gl-are-textures-resident) gl-boolean (n gl-sizei)
  (textures :pointer) (residences :pointer))
 (cffi:defcfun ("glPrioritizeTextures" gl-prioritize-textures) :void (n gl-sizei)
  (textures :pointer) (priorities :pointer))
 (cffi:defcfun ("glBindTexture" gl-bind-texture) :void (target gl-enum) (texture gl-uint))
 (cffi:defcfun ("glDeleteTextures" gl-delete-textures) :void (n gl-sizei) (textures :pointer))
 (cffi:defcfun ("glGenTextures" gl-gen-textures) :void (n gl-sizei) (textures :pointer))
 (cffi:defcfun ("glGetTexImage" gl-get-tex-image) :void (target gl-enum) (level gl-int)
  (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glTexImage2D" gl-tex-image-2d) :void (target gl-enum) (level gl-int)
  (internalFormat gl-int) (width gl-sizei) (height gl-sizei) (border gl-int) (format gl-enum)
  (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glTexImage1D" gl-tex-image-1d) :void (target gl-enum) (level gl-int)
  (internalFormat gl-int) (width gl-sizei) (border gl-int) (format gl-enum) (type gl-enum)
  (pixels :pointer))
 (cffi:defcfun ("glGetTexLevelParameteriv" gl-get-tex-level-parameteriv) :void (target gl-enum)
  (level gl-int) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetTexLevelParameterfv" gl-get-tex-level-parameterfv) :void (target gl-enum)
  (level gl-int) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetTexParameteriv" gl-get-tex-parameteriv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetTexParameterfv" gl-get-tex-parameterfv) :void (target gl-enum)
  (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glTexParameteriv" gl-tex-parameteriv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexParameterfv" gl-tex-parameterfv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexParameteri" gl-tex-parameteri) :void (target gl-enum) (pname gl-enum)
  (param gl-int))
 (cffi:defcfun ("glTexParameterf" gl-tex-parameterf) :void (target gl-enum) (pname gl-enum)
  (param gl-float))
 (cffi:defcfun ("glGetTexEnviv" gl-get-tex-enviv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glGetTexEnvfv" gl-get-tex-envfv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexEnviv" gl-tex-enviv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexEnvfv" gl-tex-envfv) :void (target gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexEnvi" gl-tex-envi) :void (target gl-enum) (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glTexEnvf" gl-tex-envf) :void (target gl-enum) (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glGetTexGeniv" gl-get-tex-geniv) :void (coord gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glGetTexGenfv" gl-get-tex-genfv) :void (coord gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glGetTexGendv" gl-get-tex-gendv) :void (coord gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glTexGeniv" gl-tex-geniv) :void (coord gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glTexGenfv" gl-tex-genfv) :void (coord gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glTexGendv" gl-tex-gendv) :void (coord gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glTexGeni" gl-tex-geni) :void (coord gl-enum) (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glTexGenf" gl-tex-genf) :void (coord gl-enum) (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glTexGend" gl-tex-gend) :void (coord gl-enum) (pname gl-enum) (param gl-double))
 (cffi:defcfun ("glClearStencil" gl-clear-stencil) :void (s gl-int))
 (cffi:defcfun ("glStencilOp" gl-stencil-op) :void (fail gl-enum) (zfail gl-enum) (zpass gl-enum))
 (cffi:defcfun ("glStencilMask" gl-stencil-mask) :void (mask gl-uint))
 (cffi:defcfun ("glStencilFunc" gl-stencil-func) :void (func gl-enum) (ref gl-int) (mask gl-uint))
 (cffi:defcfun ("glCopyPixels" gl-copy-pixels) :void (x gl-int) (y gl-int) (width gl-sizei)
  (height gl-sizei) (type gl-enum))
 (cffi:defcfun ("glDrawPixels" gl-draw-pixels) :void (width gl-sizei) (height gl-sizei)
  (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glReadPixels" gl-read-pixels) :void (x gl-int) (y gl-int) (width gl-sizei)
  (height gl-sizei) (format gl-enum) (type gl-enum) (pixels :pointer))
 (cffi:defcfun ("glBitmap" gl-bitmap) :void (width gl-sizei) (height gl-sizei) (xorig gl-float)
  (yorig gl-float) (xmove gl-float) (ymove gl-float) (bitmap :pointer))
 (cffi:defcfun ("glGetPixelMapusv" gl-get-pixel-mapusv) :void (map gl-enum) (values :pointer))
 (cffi:defcfun ("glGetPixelMapuiv" gl-get-pixel-mapuiv) :void (map gl-enum) (values :pointer))
 (cffi:defcfun ("glGetPixelMapfv" gl-get-pixel-mapfv) :void (map gl-enum) (values :pointer))
 (cffi:defcfun ("glPixelMapusv" gl-pixel-mapusv) :void (map gl-enum) (mapsize gl-sizei)
  (values :pointer))
 (cffi:defcfun ("glPixelMapuiv" gl-pixel-mapuiv) :void (map gl-enum) (mapsize gl-sizei)
  (values :pointer))
 (cffi:defcfun ("glPixelMapfv" gl-pixel-mapfv) :void (map gl-enum) (mapsize gl-sizei)
  (values :pointer))
 (cffi:defcfun ("glPixelTransferi" gl-pixel-transferi) :void (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glPixelTransferf" gl-pixel-transferf) :void (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glPixelStorei" gl-pixel-storei) :void (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glPixelStoref" gl-pixel-storef) :void (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glPixelZoom" gl-pixel-zoom) :void (xfactor gl-float) (yfactor gl-float))
 (cffi:defcfun ("glColorMaterial" gl-color-material) :void (face gl-enum) (mode gl-enum))
 (cffi:defcfun ("glGetMaterialiv" gl-get-materialiv) :void (face gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glGetMaterialfv" gl-get-materialfv) :void (face gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glMaterialiv" gl-materialiv) :void (face gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glMaterialfv" gl-materialfv) :void (face gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glMateriali" gl-materiali) :void (face gl-enum) (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glMaterialf" gl-materialf) :void (face gl-enum) (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glLightModeliv" gl-light-modeliv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glLightModelfv" gl-light-modelfv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glLightModeli" gl-light-modeli) :void (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glLightModelf" gl-light-modelf) :void (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glGetLightiv" gl-get-lightiv) :void (light gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glGetLightfv" gl-get-lightfv) :void (light gl-enum) (pname gl-enum)
  (params :pointer))
 (cffi:defcfun ("glLightiv" gl-lightiv) :void (light gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glLightfv" gl-lightfv) :void (light gl-enum) (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glLighti" gl-lighti) :void (light gl-enum) (pname gl-enum) (param gl-int))
 (cffi:defcfun ("glLightf" gl-lightf) :void (light gl-enum) (pname gl-enum) (param gl-float))
 (cffi:defcfun ("glShadeModel" gl-shade-model) :void (mode gl-enum))
 (cffi:defcfun ("glInterleavedArrays" gl-interleaved-arrays) :void (format gl-enum)
  (stride gl-sizei) (pointer :pointer))
 (cffi:defcfun ("glDrawElements" gl-draw-elements) :void (mode gl-enum) (count gl-sizei)
  (type gl-enum) (indices :pointer))
 (cffi:defcfun ("glDrawArrays" gl-draw-arrays) :void (mode gl-enum) (first gl-int)
  (count gl-sizei))
 (cffi:defcfun ("glArrayElement" gl-array-element) :void (i gl-int))
 (cffi:defcfun ("glGetPointerv" gl-get-pointerv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glEdgeFlagPointer" gl-edge-flag-pointer) :void (stride gl-sizei) (ptr :pointer))
 (cffi:defcfun ("glTexCoordPointer" gl-tex-coord-pointer) :void (size gl-int) (type gl-enum)
  (stride gl-sizei) (ptr :pointer))
 (cffi:defcfun ("glIndexPointer" gl-index-pointer) :void (type gl-enum) (stride gl-sizei)
  (ptr :pointer))
 (cffi:defcfun ("glColorPointer" gl-color-pointer) :void (size gl-int) (type gl-enum)
  (stride gl-sizei) (ptr :pointer))
 (cffi:defcfun ("glNormalPointer" gl-normal-pointer) :void (type gl-enum) (stride gl-sizei)
  (ptr :pointer))
 (cffi:defcfun ("glVertexPointer" gl-vertex-pointer) :void (size gl-int) (type gl-enum)
  (stride gl-sizei) (ptr :pointer))
 (cffi:defcfun ("glRectsv" gl-rectsv) :void (v1 :pointer) (v2 :pointer))
 (cffi:defcfun ("glRectiv" gl-rectiv) :void (v1 :pointer) (v2 :pointer))
 (cffi:defcfun ("glRectfv" gl-rectfv) :void (v1 :pointer) (v2 :pointer))
 (cffi:defcfun ("glRectdv" gl-rectdv) :void (v1 :pointer) (v2 :pointer))
 (cffi:defcfun ("glRects" gl-rects) :void (x1 gl-short) (y1 gl-short) (x2 gl-short) (y2 gl-short))
 (cffi:defcfun ("glRecti" gl-recti) :void (x1 gl-int) (y1 gl-int) (x2 gl-int) (y2 gl-int))
 (cffi:defcfun ("glRectf" gl-rectf) :void (x1 gl-float) (y1 gl-float) (x2 gl-float) (y2 gl-float))
 (cffi:defcfun ("glRectd" gl-rectd) :void (x1 gl-double) (y1 gl-double) (x2 gl-double)
  (y2 gl-double))
 (cffi:defcfun ("glRasterPos4sv" gl-raster-pos-4sv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos4iv" gl-raster-pos-4iv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos4fv" gl-raster-pos-4fv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos4dv" gl-raster-pos-4dv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos3sv" gl-raster-pos-3sv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos3iv" gl-raster-pos-3iv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos3fv" gl-raster-pos-3fv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos3dv" gl-raster-pos-3dv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos2sv" gl-raster-pos-2sv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos2iv" gl-raster-pos-2iv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos2fv" gl-raster-pos-2fv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos2dv" gl-raster-pos-2dv) :void (v :pointer))
 (cffi:defcfun ("glRasterPos4s" gl-raster-pos-4s) :void (x gl-short) (y gl-short) (z gl-short)
  (w gl-short))
 (cffi:defcfun ("glRasterPos4i" gl-raster-pos-4i) :void (x gl-int) (y gl-int) (z gl-int)
  (w gl-int))
 (cffi:defcfun ("glRasterPos4f" gl-raster-pos-4f) :void (x gl-float) (y gl-float) (z gl-float)
  (w gl-float))
 (cffi:defcfun ("glRasterPos4d" gl-raster-pos-4d) :void (x gl-double) (y gl-double) (z gl-double)
  (w gl-double))
 (cffi:defcfun ("glRasterPos3s" gl-raster-pos-3s) :void (x gl-short) (y gl-short) (z gl-short))
 (cffi:defcfun ("glRasterPos3i" gl-raster-pos-3i) :void (x gl-int) (y gl-int) (z gl-int))
 (cffi:defcfun ("glRasterPos3f" gl-raster-pos-3f) :void (x gl-float) (y gl-float) (z gl-float))
 (cffi:defcfun ("glRasterPos3d" gl-raster-pos-3d) :void (x gl-double) (y gl-double) (z gl-double))
 (cffi:defcfun ("glRasterPos2s" gl-raster-pos-2s) :void (x gl-short) (y gl-short))
 (cffi:defcfun ("glRasterPos2i" gl-raster-pos-2i) :void (x gl-int) (y gl-int))
 (cffi:defcfun ("glRasterPos2f" gl-raster-pos-2f) :void (x gl-float) (y gl-float))
 (cffi:defcfun ("glRasterPos2d" gl-raster-pos-2d) :void (x gl-double) (y gl-double))
 (cffi:defcfun ("glTexCoord4sv" gl-tex-coord-4sv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord4iv" gl-tex-coord-4iv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord4fv" gl-tex-coord-4fv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord4dv" gl-tex-coord-4dv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord3sv" gl-tex-coord-3sv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord3iv" gl-tex-coord-3iv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord3fv" gl-tex-coord-3fv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord3dv" gl-tex-coord-3dv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord2sv" gl-tex-coord-2sv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord2iv" gl-tex-coord-2iv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord2fv" gl-tex-coord-2fv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord2dv" gl-tex-coord-2dv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord1sv" gl-tex-coord-1sv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord1iv" gl-tex-coord-1iv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord1fv" gl-tex-coord-1fv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord1dv" gl-tex-coord-1dv) :void (v :pointer))
 (cffi:defcfun ("glTexCoord4s" gl-tex-coord-4s) :void (s gl-short) (t gl-short) (r gl-short)
  (q gl-short))
 (cffi:defcfun ("glTexCoord4i" gl-tex-coord-4i) :void (s gl-int) (t gl-int) (r gl-int) (q gl-int))
 (cffi:defcfun ("glTexCoord4f" gl-tex-coord-4f) :void (s gl-float) (t gl-float) (r gl-float)
  (q gl-float))
 (cffi:defcfun ("glTexCoord4d" gl-tex-coord-4d) :void (s gl-double) (t gl-double) (r gl-double)
  (q gl-double))
 (cffi:defcfun ("glTexCoord3s" gl-tex-coord-3s) :void (s gl-short) (t gl-short) (r gl-short))
 (cffi:defcfun ("glTexCoord3i" gl-tex-coord-3i) :void (s gl-int) (t gl-int) (r gl-int))
 (cffi:defcfun ("glTexCoord3f" gl-tex-coord-3f) :void (s gl-float) (t gl-float) (r gl-float))
 (cffi:defcfun ("glTexCoord3d" gl-tex-coord-3d) :void (s gl-double) (t gl-double) (r gl-double))
 (cffi:defcfun ("glTexCoord2s" gl-tex-coord-2s) :void (s gl-short) (t gl-short))
 (cffi:defcfun ("glTexCoord2i" gl-tex-coord-2i) :void (s gl-int) (t gl-int))
 (cffi:defcfun ("glTexCoord2f" gl-tex-coord-2f) :void (s gl-float) (t gl-float))
 (cffi:defcfun ("glTexCoord2d" gl-tex-coord-2d) :void (s gl-double) (t gl-double))
 (cffi:defcfun ("glTexCoord1s" gl-tex-coord-1s) :void (s gl-short))
 (cffi:defcfun ("glTexCoord1i" gl-tex-coord-1i) :void (s gl-int))
 (cffi:defcfun ("glTexCoord1f" gl-tex-coord-1f) :void (s gl-float))
 (cffi:defcfun ("glTexCoord1d" gl-tex-coord-1d) :void (s gl-double))
 (cffi:defcfun ("glColor4usv" gl-color-4usv) :void (v :pointer))
 (cffi:defcfun ("glColor4uiv" gl-color-4uiv) :void (v :pointer))
 (cffi:defcfun ("glColor4ubv" gl-color-4ubv) :void (v :pointer))
 (cffi:defcfun ("glColor4sv" gl-color-4sv) :void (v :pointer))
 (cffi:defcfun ("glColor4iv" gl-color-4iv) :void (v :pointer))
 (cffi:defcfun ("glColor4fv" gl-color-4fv) :void (v :pointer))
 (cffi:defcfun ("glColor4dv" gl-color-4dv) :void (v :pointer))
 (cffi:defcfun ("glColor4bv" gl-color-4bv) :void (v :pointer))
 (cffi:defcfun ("glColor3usv" gl-color-3usv) :void (v :pointer))
 (cffi:defcfun ("glColor3uiv" gl-color-3uiv) :void (v :pointer))
 (cffi:defcfun ("glColor3ubv" gl-color-3ubv) :void (v :pointer))
 (cffi:defcfun ("glColor3sv" gl-color-3sv) :void (v :pointer))
 (cffi:defcfun ("glColor3iv" gl-color-3iv) :void (v :pointer))
 (cffi:defcfun ("glColor3fv" gl-color-3fv) :void (v :pointer))
 (cffi:defcfun ("glColor3dv" gl-color-3dv) :void (v :pointer))
 (cffi:defcfun ("glColor3bv" gl-color-3bv) :void (v :pointer))
 (cffi:defcfun ("glColor4us" gl-color-4us) :void (red gl-ushort) (green gl-ushort) (blue gl-ushort)
  (alpha gl-ushort))
 (cffi:defcfun ("glColor4ui" gl-color-4ui) :void (red gl-uint) (green gl-uint) (blue gl-uint)
  (alpha gl-uint))
 (cffi:defcfun ("glColor4ub" gl-color-4ub) :void (red gl-ubyte) (green gl-ubyte) (blue gl-ubyte)
  (alpha gl-ubyte))
 (cffi:defcfun ("glColor4s" gl-color-4s) :void (red gl-short) (green gl-short) (blue gl-short)
  (alpha gl-short))
 (cffi:defcfun ("glColor4i" gl-color-4i) :void (red gl-int) (green gl-int) (blue gl-int)
  (alpha gl-int))
 (cffi:defcfun ("glColor4f" gl-color-4f) :void (red gl-float) (green gl-float) (blue gl-float)
  (alpha gl-float))
 (cffi:defcfun ("glColor4d" gl-color-4d) :void (red gl-double) (green gl-double) (blue gl-double)
  (alpha gl-double))
 (cffi:defcfun ("glColor4b" gl-color-4b) :void (red gl-byte) (green gl-byte) (blue gl-byte)
  (alpha gl-byte))
 (cffi:defcfun ("glColor3us" gl-color-3us) :void (red gl-ushort) (green gl-ushort)
  (blue gl-ushort))
 (cffi:defcfun ("glColor3ui" gl-color-3ui) :void (red gl-uint) (green gl-uint) (blue gl-uint))
 (cffi:defcfun ("glColor3ub" gl-color-3ub) :void (red gl-ubyte) (green gl-ubyte) (blue gl-ubyte))
 (cffi:defcfun ("glColor3s" gl-color-3s) :void (red gl-short) (green gl-short) (blue gl-short))
 (cffi:defcfun ("glColor3i" gl-color-3i) :void (red gl-int) (green gl-int) (blue gl-int))
 (cffi:defcfun ("glColor3f" gl-color-3f) :void (red gl-float) (green gl-float) (blue gl-float))
 (cffi:defcfun ("glColor3d" gl-color-3d) :void (red gl-double) (green gl-double) (blue gl-double))
 (cffi:defcfun ("glColor3b" gl-color-3b) :void (red gl-byte) (green gl-byte) (blue gl-byte))
 (cffi:defcfun ("glIndexubv" gl-indexubv) :void (c :pointer))
 (cffi:defcfun ("glIndexsv" gl-indexsv) :void (c :pointer))
 (cffi:defcfun ("glIndexiv" gl-indexiv) :void (c :pointer))
 (cffi:defcfun ("glIndexfv" gl-indexfv) :void (c :pointer))
 (cffi:defcfun ("glIndexdv" gl-indexdv) :void (c :pointer))
 (cffi:defcfun ("glIndexub" gl-indexub) :void (c gl-ubyte))
 (cffi:defcfun ("glIndexs" gl-indexs) :void (c gl-short))
 (cffi:defcfun ("glIndexi" gl-indexi) :void (c gl-int))
 (cffi:defcfun ("glIndexf" gl-indexf) :void (c gl-float))
 (cffi:defcfun ("glIndexd" gl-indexd) :void (c gl-double))
 (cffi:defcfun ("glNormal3sv" gl-normal-3sv) :void (v :pointer))
 (cffi:defcfun ("glNormal3iv" gl-normal-3iv) :void (v :pointer))
 (cffi:defcfun ("glNormal3fv" gl-normal-3fv) :void (v :pointer))
 (cffi:defcfun ("glNormal3dv" gl-normal-3dv) :void (v :pointer))
 (cffi:defcfun ("glNormal3bv" gl-normal-3bv) :void (v :pointer))
 (cffi:defcfun ("glNormal3s" gl-normal-3s) :void (nx gl-short) (ny gl-short) (nz gl-short))
 (cffi:defcfun ("glNormal3i" gl-normal-3i) :void (nx gl-int) (ny gl-int) (nz gl-int))
 (cffi:defcfun ("glNormal3f" gl-normal-3f) :void (nx gl-float) (ny gl-float) (nz gl-float))
 (cffi:defcfun ("glNormal3d" gl-normal-3d) :void (nx gl-double) (ny gl-double) (nz gl-double))
 (cffi:defcfun ("glNormal3b" gl-normal-3b) :void (nx gl-byte) (ny gl-byte) (nz gl-byte))
 (cffi:defcfun ("glVertex4sv" gl-vertex-4sv) :void (v :pointer))
 (cffi:defcfun ("glVertex4iv" gl-vertex-4iv) :void (v :pointer))
 (cffi:defcfun ("glVertex4fv" gl-vertex-4fv) :void (v :pointer))
 (cffi:defcfun ("glVertex4dv" gl-vertex-4dv) :void (v :pointer))
 (cffi:defcfun ("glVertex3sv" gl-vertex-3sv) :void (v :pointer))
 (cffi:defcfun ("glVertex3iv" gl-vertex-3iv) :void (v :pointer))
 (cffi:defcfun ("glVertex3fv" gl-vertex-3fv) :void (v :pointer))
 (cffi:defcfun ("glVertex3dv" gl-vertex-3dv) :void (v :pointer))
 (cffi:defcfun ("glVertex2sv" gl-vertex-2sv) :void (v :pointer))
 (cffi:defcfun ("glVertex2iv" gl-vertex-2iv) :void (v :pointer))
 (cffi:defcfun ("glVertex2fv" gl-vertex-2fv) :void (v :pointer))
 (cffi:defcfun ("glVertex2dv" gl-vertex-2dv) :void (v :pointer))
 (cffi:defcfun ("glVertex4s" gl-vertex-4s) :void (x gl-short) (y gl-short) (z gl-short)
  (w gl-short))
 (cffi:defcfun ("glVertex4i" gl-vertex-4i) :void (x gl-int) (y gl-int) (z gl-int) (w gl-int))
 (cffi:defcfun ("glVertex4f" gl-vertex-4f) :void (x gl-float) (y gl-float) (z gl-float)
  (w gl-float))
 (cffi:defcfun ("glVertex4d" gl-vertex-4d) :void (x gl-double) (y gl-double) (z gl-double)
  (w gl-double))
 (cffi:defcfun ("glVertex3s" gl-vertex-3s) :void (x gl-short) (y gl-short) (z gl-short))
 (cffi:defcfun ("glVertex3i" gl-vertex-3i) :void (x gl-int) (y gl-int) (z gl-int))
 (cffi:defcfun ("glVertex3f" gl-vertex-3f) :void (x gl-float) (y gl-float) (z gl-float))
 (cffi:defcfun ("glVertex3d" gl-vertex-3d) :void (x gl-double) (y gl-double) (z gl-double))
 (cffi:defcfun ("glVertex2s" gl-vertex-2s) :void (x gl-short) (y gl-short))
 (cffi:defcfun ("glVertex2i" gl-vertex-2i) :void (x gl-int) (y gl-int))
 (cffi:defcfun ("glVertex2f" gl-vertex-2f) :void (x gl-float) (y gl-float))
 (cffi:defcfun ("glVertex2d" gl-vertex-2d) :void (x gl-double) (y gl-double))
 (cffi:defcfun ("glEnd" gl-end) :void) (cffi:defcfun ("glBegin" gl-begin) :void (mode gl-enum))
 (cffi:defcfun ("glListBase" gl-list-base) :void (base gl-uint))
 (cffi:defcfun ("glCallLists" gl-call-lists) :void (n gl-sizei) (type gl-enum) (lists :pointer))
 (cffi:defcfun ("glCallList" gl-call-list) :void (list gl-uint))
 (cffi:defcfun ("glEndList" gl-end-list) :void)
 (cffi:defcfun ("glNewList" gl-new-list) :void (list gl-uint) (mode gl-enum))
 (cffi:defcfun ("glGenLists" gl-gen-lists) gl-uint (range gl-sizei))
 (cffi:defcfun ("glDeleteLists" gl-delete-lists) :void (list gl-uint) (range gl-sizei))
 (cffi:defcfun ("glIsList" gl-is-list) gl-boolean (list gl-uint))
 (cffi:defcfun ("glTranslatef" gl-translatef) :void (x gl-float) (y gl-float) (z gl-float))
 (cffi:defcfun ("glTranslated" gl-translated) :void (x gl-double) (y gl-double) (z gl-double))
 (cffi:defcfun ("glScalef" gl-scalef) :void (x gl-float) (y gl-float) (z gl-float))
 (cffi:defcfun ("glScaled" gl-scaled) :void (x gl-double) (y gl-double) (z gl-double))
 (cffi:defcfun ("glRotatef" gl-rotatef) :void (angle gl-float) (x gl-float) (y gl-float)
  (z gl-float))
 (cffi:defcfun ("glRotated" gl-rotated) :void (angle gl-double) (x gl-double) (y gl-double)
  (z gl-double))
 (cffi:defcfun ("glMultMatrixf" gl-mult-matrixf) :void (m :pointer))
 (cffi:defcfun ("glMultMatrixd" gl-mult-matrixd) :void (m :pointer))
 (cffi:defcfun ("glLoadMatrixf" gl-load-matrixf) :void (m :pointer))
 (cffi:defcfun ("glLoadMatrixd" gl-load-matrixd) :void (m :pointer))
 (cffi:defcfun ("glLoadIdentity" gl-load-identity) :void)
 (cffi:defcfun ("glPopMatrix" gl-pop-matrix) :void)
 (cffi:defcfun ("glPushMatrix" gl-push-matrix) :void)
 (cffi:defcfun ("glViewport" gl-viewport) :void (x gl-int) (y gl-int) (width gl-sizei)
  (height gl-sizei))
 (cffi:defcfun ("glFrustum" gl-frustum) :void (left gl-double) (right gl-double) (bottom gl-double)
  (top gl-double) (near_val gl-double) (far_val gl-double))
 (cffi:defcfun ("glOrtho" gl-ortho) :void (left gl-double) (right gl-double) (bottom gl-double)
  (top gl-double) (near_val gl-double) (far_val gl-double))
 (cffi:defcfun ("glMatrixMode" gl-matrix-mode) :void (mode gl-enum))
 (cffi:defcfun ("glAccum" gl-accum) :void (op gl-enum) (value gl-float))
 (cffi:defcfun ("glClearAccum" gl-clear-accum) :void (red gl-float) (green gl-float)
  (blue gl-float) (alpha gl-float))
 (cffi:defcfun ("glDepthRange" gl-depth-range) :void (near_val gl-clampd) (far_val gl-clampd))
 (cffi:defcfun ("glDepthMask" gl-depth-mask) :void (flag gl-boolean))
 (cffi:defcfun ("glDepthFunc" gl-depth-func) :void (func gl-enum))
 (cffi:defcfun ("glClearDepth" gl-clear-depth) :void (depth gl-clampd))
 (cffi:defcfun ("glHint" gl-hint) :void (target gl-enum) (mode gl-enum))
 (cffi:defcfun ("glFlush" gl-flush) :void) (cffi:defcfun ("glFinish" gl-finish) :void)
 (cffi:defcfun ("glGetString" gl-get-string) :pointer (name gl-enum))
 (cffi:defcfun ("glGetError" gl-get-error) gl-enum)
 (cffi:defcfun ("glRenderMode" gl-render-mode) gl-int (mode gl-enum))
 (cffi:defcfun ("glPopClientAttrib" gl-pop-client-attrib) :void)
 (cffi:defcfun ("glPushClientAttrib" gl-push-client-attrib) :void (mask gl-bitfield))
 (cffi:defcfun ("glPopAttrib" gl-pop-attrib) :void)
 (cffi:defcfun ("glPushAttrib" gl-push-attrib) :void (mask gl-bitfield))
 (cffi:defcfun ("glGetIntegerv" gl-get-integerv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetFloatv" gl-get-floatv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetDoublev" gl-get-doublev) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glGetBooleanv" gl-get-booleanv) :void (pname gl-enum) (params :pointer))
 (cffi:defcfun ("glDisableClientState" gl-disable-client-state) :void (cap gl-enum))
 (cffi:defcfun ("glEnableClientState" gl-enable-client-state) :void (cap gl-enum))
 (cffi:defcfun ("glIsEnabled" gl-is-enabled) gl-boolean (cap gl-enum))
 (cffi:defcfun ("glDisable" gl-disable) :void (cap gl-enum))
 (cffi:defcfun ("glEnable" gl-enable) :void (cap gl-enum))
 (cffi:defcfun ("glReadBuffer" gl-read-buffer) :void (mode gl-enum))
 (cffi:defcfun ("glDrawBuffer" gl-draw-buffer) :void (mode gl-enum))
 (cffi:defcfun ("glGetClipPlane" gl-get-clip-plane) :void (plane gl-enum) (equation :pointer))
 (cffi:defcfun ("glClipPlane" gl-clip-plane) :void (plane gl-enum) (equation :pointer))
 (cffi:defcfun ("glScissor" gl-scissor) :void (x gl-int) (y gl-int) (width gl-sizei)
  (height gl-sizei))
 (cffi:defcfun ("glEdgeFlagv" gl-edge-flagv) :void (flag :pointer))
 (cffi:defcfun ("glEdgeFlag" gl-edge-flag) :void (flag gl-boolean))
 (cffi:defcfun ("glGetPolygonStipple" gl-get-polygon-stipple) :void (mask :pointer))
 (cffi:defcfun ("glPolygonStipple" gl-polygon-stipple) :void (mask :pointer))
 (cffi:defcfun ("glPolygonOffset" gl-polygon-offset) :void (factor gl-float) (units gl-float))
 (cffi:defcfun ("glPolygonMode" gl-polygon-mode) :void (face gl-enum) (mode gl-enum))
 (cffi:defcfun ("glLineStipple" gl-line-stipple) :void (factor gl-int) (pattern gl-ushort))
 (cffi:defcfun ("glLineWidth" gl-line-width) :void (width gl-float))
 (cffi:defcfun ("glPointSize" gl-point-size) :void (size gl-float))
 (cffi:defcfun ("glFrontFace" gl-front-face) :void (mode gl-enum))
 (cffi:defcfun ("glCullFace" gl-cull-face) :void (mode gl-enum))
 (cffi:defcfun ("glLogicOp" gl-logic-op) :void (opcode gl-enum))
 (cffi:defcfun ("glBlendFunc" gl-blend-func) :void (sfactor gl-enum) (dfactor gl-enum))
 (cffi:defcfun ("glAlphaFunc" gl-alpha-func) :void (func gl-enum) (ref gl-clampf))
 (cffi:defcfun ("glColorMask" gl-color-mask) :void (red gl-boolean) (green gl-boolean)
  (blue gl-boolean) (alpha gl-boolean))
 (cffi:defcfun ("glIndexMask" gl-index-mask) :void (mask gl-uint))
 (cffi:defcfun ("glClear" gl-clear) :void (mask gl-bitfield))
 (cffi:defcfun ("glClearColor" gl-clear-color) :void (red gl-clampf) (green gl-clampf)
  (blue gl-clampf) (alpha gl-clampf))
 (cffi:defcfun ("glClearIndex" gl-clear-index) :void (c gl-float))
 (cl:defconstant +gl-version-1-1+ 1) (cl:defconstant +gl-version-1-2+ 1)
 (cl:defconstant +gl-version-1-3+ 1) (cl:defconstant +gl-arb-imaging+ 1)
 (cl:defconstant +gl-false+ 0) (cl:defconstant +gl-true+ 1) (cl:defconstant +gl-byte+ 5120)
 (cl:defconstant +gl-unsigned-byte+ 5121) (cl:defconstant +gl-short+ 5122)
 (cl:defconstant +gl-unsigned-short+ 5123) (cl:defconstant +gl-int+ 5124)
 (cl:defconstant +gl-unsigned-int+ 5125) (cl:defconstant +gl-float+ 5126)
 (cl:defconstant +gl-2-bytes+ 5127) (cl:defconstant +gl-3-bytes+ 5128)
 (cl:defconstant +gl-4-bytes+ 5129) (cl:defconstant +gl-double+ 5130)
 (cl:defconstant +gl-points+ 0) (cl:defconstant +gl-lines+ 1) (cl:defconstant +gl-line-loop+ 2)
 (cl:defconstant +gl-line-strip+ 3) (cl:defconstant +gl-triangles+ 4)
 (cl:defconstant +gl-triangle-strip+ 5) (cl:defconstant +gl-triangle-fan+ 6)
 (cl:defconstant +gl-quads+ 7) (cl:defconstant +gl-quad-strip+ 8) (cl:defconstant +gl-polygon+ 9)
 (cl:defconstant +gl-vertex-array+ 32884) (cl:defconstant +gl-normal-array+ 32885)
 (cl:defconstant +gl-color-array+ 32886) (cl:defconstant +gl-index-array+ 32887)
 (cl:defconstant +gl-texture-coord-array+ 32888) (cl:defconstant +gl-edge-flag-array+ 32889)
 (cl:defconstant +gl-vertex-array-size+ 32890) (cl:defconstant +gl-vertex-array-type+ 32891)
 (cl:defconstant +gl-vertex-array-stride+ 32892) (cl:defconstant +gl-normal-array-type+ 32894)
 (cl:defconstant +gl-normal-array-stride+ 32895) (cl:defconstant +gl-color-array-size+ 32897)
 (cl:defconstant +gl-color-array-type+ 32898) (cl:defconstant +gl-color-array-stride+ 32899)
 (cl:defconstant +gl-index-array-type+ 32901) (cl:defconstant +gl-index-array-stride+ 32902)
 (cl:defconstant +gl-texture-coord-array-size+ 32904)
 (cl:defconstant +gl-texture-coord-array-type+ 32905)
 (cl:defconstant +gl-texture-coord-array-stride+ 32906)
 (cl:defconstant +gl-edge-flag-array-stride+ 32908)
 (cl:defconstant +gl-vertex-array-pointer+ 32910) (cl:defconstant +gl-normal-array-pointer+ 32911)
 (cl:defconstant +gl-color-array-pointer+ 32912) (cl:defconstant +gl-index-array-pointer+ 32913)
 (cl:defconstant +gl-texture-coord-array-pointer+ 32914)
 (cl:defconstant +gl-edge-flag-array-pointer+ 32915) (cl:defconstant +gl-v-2f+ 10784)
 (cl:defconstant +gl-v-3f+ 10785) (cl:defconstant +gl-c-4ub-v-2f+ 10786)
 (cl:defconstant +gl-c-4ub-v-3f+ 10787) (cl:defconstant +gl-c-3f-v-3f+ 10788)
 (cl:defconstant +gl-n-3f-v-3f+ 10789) (cl:defconstant +gl-c-4f-n-3f-v-3f+ 10790)
 (cl:defconstant +gl-t-2f-v-3f+ 10791) (cl:defconstant +gl-t-4f-v-4f+ 10792)
 (cl:defconstant +gl-t-2f-c-4ub-v-3f+ 10793) (cl:defconstant +gl-t-2f-c-3f-v-3f+ 10794)
 (cl:defconstant +gl-t-2f-n-3f-v-3f+ 10795) (cl:defconstant +gl-t-2f-c-4f-n-3f-v-3f+ 10796)
 (cl:defconstant +gl-t-4f-c-4f-n-3f-v-4f+ 10797) (cl:defconstant +gl-matrix-mode+ 2976)
 (cl:defconstant +gl-modelview+ 5888) (cl:defconstant +gl-projection+ 5889)
 (cl:defconstant +gl-texture+ 5890) (cl:defconstant +gl-point-smooth+ 2832)
 (cl:defconstant +gl-point-size+ 2833) (cl:defconstant +gl-point-size-granularity+ 2835)
 (cl:defconstant +gl-point-size-range+ 2834) (cl:defconstant +gl-line-smooth+ 2848)
 (cl:defconstant +gl-line-stipple+ 2852) (cl:defconstant +gl-line-stipple-pattern+ 2853)
 (cl:defconstant +gl-line-stipple-repeat+ 2854) (cl:defconstant +gl-line-width+ 2849)
 (cl:defconstant +gl-line-width-granularity+ 2851) (cl:defconstant +gl-line-width-range+ 2850)
 (cl:defconstant +gl-point+ 6912) (cl:defconstant +gl-line+ 6913) (cl:defconstant +gl-fill+ 6914)
 (cl:defconstant +gl-cw+ 2304) (cl:defconstant +gl-ccw+ 2305) (cl:defconstant +gl-front+ 1028)
 (cl:defconstant +gl-back+ 1029) (cl:defconstant +gl-polygon-mode+ 2880)
 (cl:defconstant +gl-polygon-smooth+ 2881) (cl:defconstant +gl-polygon-stipple+ 2882)
 (cl:defconstant +gl-edge-flag+ 2883) (cl:defconstant +gl-cull-face+ 2884)
 (cl:defconstant +gl-cull-face-mode+ 2885) (cl:defconstant +gl-front-face+ 2886)
 (cl:defconstant +gl-polygon-offset-factor+ 32824) (cl:defconstant +gl-polygon-offset-units+ 10752)
 (cl:defconstant +gl-polygon-offset-point+ 10753) (cl:defconstant +gl-polygon-offset-line+ 10754)
 (cl:defconstant +gl-polygon-offset-fill+ 32823) (cl:defconstant +gl-compile+ 4864)
 (cl:defconstant +gl-compile-and-execute+ 4865) (cl:defconstant +gl-list-base+ 2866)
 (cl:defconstant +gl-list-index+ 2867) (cl:defconstant +gl-list-mode+ 2864)
 (cl:defconstant +gl-never+ 512) (cl:defconstant +gl-less+ 513) (cl:defconstant +gl-equal+ 514)
 (cl:defconstant +gl-lequal+ 515) (cl:defconstant +gl-greater+ 516)
 (cl:defconstant +gl-notequal+ 517) (cl:defconstant +gl-gequal+ 518)
 (cl:defconstant +gl-always+ 519) (cl:defconstant +gl-depth-test+ 2929)
 (cl:defconstant +gl-depth-bits+ 3414) (cl:defconstant +gl-depth-clear-value+ 2931)
 (cl:defconstant +gl-depth-func+ 2932) (cl:defconstant +gl-depth-range+ 2928)
 (cl:defconstant +gl-depth-writemask+ 2930) (cl:defconstant +gl-depth-component+ 6402)
 (cl:defconstant +gl-lighting+ 2896) (cl:defconstant +gl-light-0+ 16384)
 (cl:defconstant +gl-light-1+ 16385) (cl:defconstant +gl-light-2+ 16386)
 (cl:defconstant +gl-light-3+ 16387) (cl:defconstant +gl-light-4+ 16388)
 (cl:defconstant +gl-light-5+ 16389) (cl:defconstant +gl-light-6+ 16390)
 (cl:defconstant +gl-light-7+ 16391) (cl:defconstant +gl-spot-exponent+ 4613)
 (cl:defconstant +gl-spot-cutoff+ 4614) (cl:defconstant +gl-constant-attenuation+ 4615)
 (cl:defconstant +gl-linear-attenuation+ 4616) (cl:defconstant +gl-quadratic-attenuation+ 4617)
 (cl:defconstant +gl-ambient+ 4608) (cl:defconstant +gl-diffuse+ 4609)
 (cl:defconstant +gl-specular+ 4610) (cl:defconstant +gl-shininess+ 5633)
 (cl:defconstant +gl-emission+ 5632) (cl:defconstant +gl-position+ 4611)
 (cl:defconstant +gl-spot-direction+ 4612) (cl:defconstant +gl-ambient-and-diffuse+ 5634)
 (cl:defconstant +gl-color-indexes+ 5635) (cl:defconstant +gl-light-model-two-side+ 2898)
 (cl:defconstant +gl-light-model-local-viewer+ 2897) (cl:defconstant +gl-light-model-ambient+ 2899)
 (cl:defconstant +gl-front-and-back+ 1032) (cl:defconstant +gl-shade-model+ 2900)
 (cl:defconstant +gl-flat+ 7424) (cl:defconstant +gl-smooth+ 7425)
 (cl:defconstant +gl-color-material+ 2903) (cl:defconstant +gl-color-material-face+ 2901)
 (cl:defconstant +gl-color-material-parameter+ 2902) (cl:defconstant +gl-normalize+ 2977)
 (cl:defconstant +gl-clip-plane-0+ 12288) (cl:defconstant +gl-clip-plane-1+ 12289)
 (cl:defconstant +gl-clip-plane-2+ 12290) (cl:defconstant +gl-clip-plane-3+ 12291)
 (cl:defconstant +gl-clip-plane-4+ 12292) (cl:defconstant +gl-clip-plane-5+ 12293)
 (cl:defconstant +gl-accum-red-bits+ 3416) (cl:defconstant +gl-accum-green-bits+ 3417)
 (cl:defconstant +gl-accum-blue-bits+ 3418) (cl:defconstant +gl-accum-alpha-bits+ 3419)
 (cl:defconstant +gl-accum-clear-value+ 2944) (cl:defconstant +gl-accum+ 256)
 (cl:defconstant +gl-add+ 260) (cl:defconstant +gl-load+ 257) (cl:defconstant +gl-mult+ 259)
 (cl:defconstant +gl-return+ 258) (cl:defconstant +gl-alpha-test+ 3008)
 (cl:defconstant +gl-alpha-test-ref+ 3010) (cl:defconstant +gl-alpha-test-func+ 3009)
 (cl:defconstant +gl-blend+ 3042) (cl:defconstant +gl-blend-src+ 3041)
 (cl:defconstant +gl-blend-dst+ 3040) (cl:defconstant +gl-zero+ 0) (cl:defconstant +gl-one+ 1)
 (cl:defconstant +gl-src-color+ 768) (cl:defconstant +gl-one-minus-src-color+ 769)
 (cl:defconstant +gl-src-alpha+ 770) (cl:defconstant +gl-one-minus-src-alpha+ 771)
 (cl:defconstant +gl-dst-alpha+ 772) (cl:defconstant +gl-one-minus-dst-alpha+ 773)
 (cl:defconstant +gl-dst-color+ 774) (cl:defconstant +gl-one-minus-dst-color+ 775)
 (cl:defconstant +gl-src-alpha-saturate+ 776) (cl:defconstant +gl-feedback+ 7169)
 (cl:defconstant +gl-render+ 7168) (cl:defconstant +gl-select+ 7170) (cl:defconstant +gl-2-d+ 1536)
 (cl:defconstant +gl-3-d+ 1537) (cl:defconstant +gl-3-d-color+ 1538)
 (cl:defconstant +gl-3-d-color-texture+ 1539) (cl:defconstant +gl-4-d-color-texture+ 1540)
 (cl:defconstant +gl-point-token+ 1793) (cl:defconstant +gl-line-token+ 1794)
 (cl:defconstant +gl-line-reset-token+ 1799) (cl:defconstant +gl-polygon-token+ 1795)
 (cl:defconstant +gl-bitmap-token+ 1796) (cl:defconstant +gl-draw-pixel-token+ 1797)
 (cl:defconstant +gl-copy-pixel-token+ 1798) (cl:defconstant +gl-pass-through-token+ 1792)
 (cl:defconstant +gl-feedback-buffer-pointer+ 3568) (cl:defconstant +gl-feedback-buffer-size+ 3569)
 (cl:defconstant +gl-feedback-buffer-type+ 3570)
 (cl:defconstant +gl-selection-buffer-pointer+ 3571)
 (cl:defconstant +gl-selection-buffer-size+ 3572) (cl:defconstant +gl-fog+ 2912)
 (cl:defconstant +gl-fog-mode+ 2917) (cl:defconstant +gl-fog-density+ 2914)
 (cl:defconstant +gl-fog-color+ 2918) (cl:defconstant +gl-fog-index+ 2913)
 (cl:defconstant +gl-fog-start+ 2915) (cl:defconstant +gl-fog-end+ 2916)
 (cl:defconstant +gl-linear+ 9729) (cl:defconstant +gl-exp+ 2048) (cl:defconstant +gl-exp-2+ 2049)
 (cl:defconstant +gl-logic-op+ 3057) (cl:defconstant +gl-index-logic-op+ 3057)
 (cl:defconstant +gl-color-logic-op+ 3058) (cl:defconstant +gl-logic-op-mode+ 3056)
 (cl:defconstant +gl-clear+ 5376) (cl:defconstant +gl-set+ 5391) (cl:defconstant +gl-copy+ 5379)
 (cl:defconstant +gl-copy-inverted+ 5388) (cl:defconstant +gl-noop+ 5381)
 (cl:defconstant +gl-invert+ 5386) (cl:defconstant +gl-and+ 5377) (cl:defconstant +gl-nand+ 5390)
 (cl:defconstant +gl-or+ 5383) (cl:defconstant +gl-nor+ 5384) (cl:defconstant +gl-xor+ 5382)
 (cl:defconstant +gl-equiv+ 5385) (cl:defconstant +gl-and-reverse+ 5378)
 (cl:defconstant +gl-and-inverted+ 5380) (cl:defconstant +gl-or-reverse+ 5387)
 (cl:defconstant +gl-or-inverted+ 5389) (cl:defconstant +gl-stencil-bits+ 3415)
 (cl:defconstant +gl-stencil-test+ 2960) (cl:defconstant +gl-stencil-clear-value+ 2961)
 (cl:defconstant +gl-stencil-func+ 2962) (cl:defconstant +gl-stencil-value-mask+ 2963)
 (cl:defconstant +gl-stencil-fail+ 2964) (cl:defconstant +gl-stencil-pass-depth-fail+ 2965)
 (cl:defconstant +gl-stencil-pass-depth-pass+ 2966) (cl:defconstant +gl-stencil-ref+ 2967)
 (cl:defconstant +gl-stencil-writemask+ 2968) (cl:defconstant +gl-stencil-index+ 6401)
 (cl:defconstant +gl-keep+ 7680) (cl:defconstant +gl-replace+ 7681) (cl:defconstant +gl-incr+ 7682)
 (cl:defconstant +gl-decr+ 7683) (cl:defconstant +gl-none+ 0) (cl:defconstant +gl-left+ 1030)
 (cl:defconstant +gl-right+ 1031) (cl:defconstant +gl-front-left+ 1024)
 (cl:defconstant +gl-front-right+ 1025) (cl:defconstant +gl-back-left+ 1026)
 (cl:defconstant +gl-back-right+ 1027) (cl:defconstant +gl-aux-0+ 1033)
 (cl:defconstant +gl-aux-1+ 1034) (cl:defconstant +gl-aux-2+ 1035) (cl:defconstant +gl-aux-3+ 1036)
 (cl:defconstant +gl-color-index+ 6400) (cl:defconstant +gl-red+ 6403)
 (cl:defconstant +gl-green+ 6404) (cl:defconstant +gl-blue+ 6405) (cl:defconstant +gl-alpha+ 6406)
 (cl:defconstant +gl-luminance+ 6409) (cl:defconstant +gl-luminance-alpha+ 6410)
 (cl:defconstant +gl-alpha-bits+ 3413) (cl:defconstant +gl-red-bits+ 3410)
 (cl:defconstant +gl-green-bits+ 3411) (cl:defconstant +gl-blue-bits+ 3412)
 (cl:defconstant +gl-index-bits+ 3409) (cl:defconstant +gl-subpixel-bits+ 3408)
 (cl:defconstant +gl-aux-buffers+ 3072) (cl:defconstant +gl-read-buffer+ 3074)
 (cl:defconstant +gl-draw-buffer+ 3073) (cl:defconstant +gl-doublebuffer+ 3122)
 (cl:defconstant +gl-stereo+ 3123) (cl:defconstant +gl-bitmap+ 6656)
 (cl:defconstant +gl-color+ 6144) (cl:defconstant +gl-depth+ 6145)
 (cl:defconstant +gl-stencil+ 6146) (cl:defconstant +gl-dither+ 3024)
 (cl:defconstant +gl-rgb+ 6407) (cl:defconstant +gl-rgba+ 6408)
 (cl:defconstant +gl-max-list-nesting+ 2865) (cl:defconstant +gl-max-eval-order+ 3376)
 (cl:defconstant +gl-max-lights+ 3377) (cl:defconstant +gl-max-clip-planes+ 3378)
 (cl:defconstant +gl-max-texture-size+ 3379) (cl:defconstant +gl-max-pixel-map-table+ 3380)
 (cl:defconstant +gl-max-attrib-stack-depth+ 3381)
 (cl:defconstant +gl-max-modelview-stack-depth+ 3382)
 (cl:defconstant +gl-max-name-stack-depth+ 3383)
 (cl:defconstant +gl-max-projection-stack-depth+ 3384)
 (cl:defconstant +gl-max-texture-stack-depth+ 3385) (cl:defconstant +gl-max-viewport-dims+ 3386)
 (cl:defconstant +gl-max-client-attrib-stack-depth+ 3387)
 (cl:defconstant +gl-attrib-stack-depth+ 2992) (cl:defconstant +gl-client-attrib-stack-depth+ 2993)
 (cl:defconstant +gl-color-clear-value+ 3106) (cl:defconstant +gl-color-writemask+ 3107)
 (cl:defconstant +gl-current-index+ 2817) (cl:defconstant +gl-current-color+ 2816)
 (cl:defconstant +gl-current-normal+ 2818) (cl:defconstant +gl-current-raster-color+ 2820)
 (cl:defconstant +gl-current-raster-distance+ 2825) (cl:defconstant +gl-current-raster-index+ 2821)
 (cl:defconstant +gl-current-raster-position+ 2823)
 (cl:defconstant +gl-current-raster-texture-coords+ 2822)
 (cl:defconstant +gl-current-raster-position-valid+ 2824)
 (cl:defconstant +gl-current-texture-coords+ 2819) (cl:defconstant +gl-index-clear-value+ 3104)
 (cl:defconstant +gl-index-mode+ 3120) (cl:defconstant +gl-index-writemask+ 3105)
 (cl:defconstant +gl-modelview-matrix+ 2982) (cl:defconstant +gl-modelview-stack-depth+ 2979)
 (cl:defconstant +gl-name-stack-depth+ 3440) (cl:defconstant +gl-projection-matrix+ 2983)
 (cl:defconstant +gl-projection-stack-depth+ 2980) (cl:defconstant +gl-render-mode+ 3136)
 (cl:defconstant +gl-rgba-mode+ 3121) (cl:defconstant +gl-texture-matrix+ 2984)
 (cl:defconstant +gl-texture-stack-depth+ 2981) (cl:defconstant +gl-viewport+ 2978)
 (cl:defconstant +gl-auto-normal+ 3456) (cl:defconstant +gl-map-1-color-4+ 3472)
 (cl:defconstant +gl-map-1-index+ 3473) (cl:defconstant +gl-map-1-normal+ 3474)
 (cl:defconstant +gl-map-1-texture-coord-1+ 3475) (cl:defconstant +gl-map-1-texture-coord-2+ 3476)
 (cl:defconstant +gl-map-1-texture-coord-3+ 3477) (cl:defconstant +gl-map-1-texture-coord-4+ 3478)
 (cl:defconstant +gl-map-1-vertex-3+ 3479) (cl:defconstant +gl-map-1-vertex-4+ 3480)
 (cl:defconstant +gl-map-2-color-4+ 3504) (cl:defconstant +gl-map-2-index+ 3505)
 (cl:defconstant +gl-map-2-normal+ 3506) (cl:defconstant +gl-map-2-texture-coord-1+ 3507)
 (cl:defconstant +gl-map-2-texture-coord-2+ 3508) (cl:defconstant +gl-map-2-texture-coord-3+ 3509)
 (cl:defconstant +gl-map-2-texture-coord-4+ 3510) (cl:defconstant +gl-map-2-vertex-3+ 3511)
 (cl:defconstant +gl-map-2-vertex-4+ 3512) (cl:defconstant +gl-map-1-grid-domain+ 3536)
 (cl:defconstant +gl-map-1-grid-segments+ 3537) (cl:defconstant +gl-map-2-grid-domain+ 3538)
 (cl:defconstant +gl-map-2-grid-segments+ 3539) (cl:defconstant +gl-coeff+ 2560)
 (cl:defconstant +gl-order+ 2561) (cl:defconstant +gl-domain+ 2562)
 (cl:defconstant +gl-perspective-correction-hint+ 3152)
 (cl:defconstant +gl-point-smooth-hint+ 3153) (cl:defconstant +gl-line-smooth-hint+ 3154)
 (cl:defconstant +gl-polygon-smooth-hint+ 3155) (cl:defconstant +gl-fog-hint+ 3156)
 (cl:defconstant +gl-dont-care+ 4352) (cl:defconstant +gl-fastest+ 4353)
 (cl:defconstant +gl-nicest+ 4354) (cl:defconstant +gl-scissor-box+ 3088)
 (cl:defconstant +gl-scissor-test+ 3089) (cl:defconstant +gl-map-color+ 3344)
 (cl:defconstant +gl-map-stencil+ 3345) (cl:defconstant +gl-index-shift+ 3346)
 (cl:defconstant +gl-index-offset+ 3347) (cl:defconstant +gl-red-scale+ 3348)
 (cl:defconstant +gl-red-bias+ 3349) (cl:defconstant +gl-green-scale+ 3352)
 (cl:defconstant +gl-green-bias+ 3353) (cl:defconstant +gl-blue-scale+ 3354)
 (cl:defconstant +gl-blue-bias+ 3355) (cl:defconstant +gl-alpha-scale+ 3356)
 (cl:defconstant +gl-alpha-bias+ 3357) (cl:defconstant +gl-depth-scale+ 3358)
 (cl:defconstant +gl-depth-bias+ 3359) (cl:defconstant +gl-pixel-map-s-to-s-size+ 3249)
 (cl:defconstant +gl-pixel-map-i-to-i-size+ 3248) (cl:defconstant +gl-pixel-map-i-to-r-size+ 3250)
 (cl:defconstant +gl-pixel-map-i-to-g-size+ 3251) (cl:defconstant +gl-pixel-map-i-to-b-size+ 3252)
 (cl:defconstant +gl-pixel-map-i-to-a-size+ 3253) (cl:defconstant +gl-pixel-map-r-to-r-size+ 3254)
 (cl:defconstant +gl-pixel-map-g-to-g-size+ 3255) (cl:defconstant +gl-pixel-map-b-to-b-size+ 3256)
 (cl:defconstant +gl-pixel-map-a-to-a-size+ 3257) (cl:defconstant +gl-pixel-map-s-to-s+ 3185)
 (cl:defconstant +gl-pixel-map-i-to-i+ 3184) (cl:defconstant +gl-pixel-map-i-to-r+ 3186)
 (cl:defconstant +gl-pixel-map-i-to-g+ 3187) (cl:defconstant +gl-pixel-map-i-to-b+ 3188)
 (cl:defconstant +gl-pixel-map-i-to-a+ 3189) (cl:defconstant +gl-pixel-map-r-to-r+ 3190)
 (cl:defconstant +gl-pixel-map-g-to-g+ 3191) (cl:defconstant +gl-pixel-map-b-to-b+ 3192)
 (cl:defconstant +gl-pixel-map-a-to-a+ 3193) (cl:defconstant +gl-pack-alignment+ 3333)
 (cl:defconstant +gl-pack-lsb-first+ 3329) (cl:defconstant +gl-pack-row-length+ 3330)
 (cl:defconstant +gl-pack-skip-pixels+ 3332) (cl:defconstant +gl-pack-skip-rows+ 3331)
 (cl:defconstant +gl-pack-swap-bytes+ 3328) (cl:defconstant +gl-unpack-alignment+ 3317)
 (cl:defconstant +gl-unpack-lsb-first+ 3313) (cl:defconstant +gl-unpack-row-length+ 3314)
 (cl:defconstant +gl-unpack-skip-pixels+ 3316) (cl:defconstant +gl-unpack-skip-rows+ 3315)
 (cl:defconstant +gl-unpack-swap-bytes+ 3312) (cl:defconstant +gl-zoom-x+ 3350)
 (cl:defconstant +gl-zoom-y+ 3351) (cl:defconstant +gl-texture-env+ 8960)
 (cl:defconstant +gl-texture-env-mode+ 8704) (cl:defconstant +gl-texture-1-d+ 3552)
 (cl:defconstant +gl-texture-2-d+ 3553) (cl:defconstant +gl-texture-wrap-s+ 10242)
 (cl:defconstant +gl-texture-wrap-t+ 10243) (cl:defconstant +gl-texture-mag-filter+ 10240)
 (cl:defconstant +gl-texture-min-filter+ 10241) (cl:defconstant +gl-texture-env-color+ 8705)
 (cl:defconstant +gl-texture-gen-s+ 3168) (cl:defconstant +gl-texture-gen-t+ 3169)
 (cl:defconstant +gl-texture-gen-mode+ 9472) (cl:defconstant +gl-texture-border-color+ 4100)
 (cl:defconstant +gl-texture-width+ 4096) (cl:defconstant +gl-texture-height+ 4097)
 (cl:defconstant +gl-texture-border+ 4101) (cl:defconstant +gl-texture-components+ 4099)
 (cl:defconstant +gl-texture-red-size+ 32860) (cl:defconstant +gl-texture-green-size+ 32861)
 (cl:defconstant +gl-texture-blue-size+ 32862) (cl:defconstant +gl-texture-alpha-size+ 32863)
 (cl:defconstant +gl-texture-luminance-size+ 32864)
 (cl:defconstant +gl-texture-intensity-size+ 32865)
 (cl:defconstant +gl-nearest-mipmap-nearest+ 9984) (cl:defconstant +gl-nearest-mipmap-linear+ 9986)
 (cl:defconstant +gl-linear-mipmap-nearest+ 9985) (cl:defconstant +gl-linear-mipmap-linear+ 9987)
 (cl:defconstant +gl-object-linear+ 9217) (cl:defconstant +gl-object-plane+ 9473)
 (cl:defconstant +gl-eye-linear+ 9216) (cl:defconstant +gl-eye-plane+ 9474)
 (cl:defconstant +gl-sphere-map+ 9218) (cl:defconstant +gl-decal+ 8449)
 (cl:defconstant +gl-modulate+ 8448) (cl:defconstant +gl-nearest+ 9728)
 (cl:defconstant +gl-repeat+ 10497) (cl:defconstant +gl-clamp+ 10496) (cl:defconstant +gl-s+ 8192)
 (cl:defconstant +gl-t+ 8193) (cl:defconstant +gl-r+ 8194) (cl:defconstant +gl-q+ 8195)
 (cl:defconstant +gl-texture-gen-r+ 3170) (cl:defconstant +gl-texture-gen-q+ 3171)
 (cl:defconstant +gl-vendor+ 7936) (cl:defconstant +gl-renderer+ 7937)
 (cl:defconstant +gl-version+ 7938) (cl:defconstant +gl-extensions+ 7939)
 (cl:defconstant +gl-no-error+ 0) (cl:defconstant +gl-invalid-enum+ 1280)
 (cl:defconstant +gl-invalid-value+ 1281) (cl:defconstant +gl-invalid-operation+ 1282)
 (cl:defconstant +gl-stack-overflow+ 1283) (cl:defconstant +gl-stack-underflow+ 1284)
 (cl:defconstant +gl-out-of-memory+ 1285) (cl:defconstant +gl-current-bit+ 1)
 (cl:defconstant +gl-point-bit+ 2) (cl:defconstant +gl-line-bit+ 4)
 (cl:defconstant +gl-polygon-bit+ 8) (cl:defconstant +gl-polygon-stipple-bit+ 16)
 (cl:defconstant +gl-pixel-mode-bit+ 32) (cl:defconstant +gl-lighting-bit+ 64)
 (cl:defconstant +gl-fog-bit+ 128) (cl:defconstant +gl-depth-buffer-bit+ 256)
 (cl:defconstant +gl-accum-buffer-bit+ 512) (cl:defconstant +gl-stencil-buffer-bit+ 1024)
 (cl:defconstant +gl-viewport-bit+ 2048) (cl:defconstant +gl-transform-bit+ 4096)
 (cl:defconstant +gl-enable-bit+ 8192) (cl:defconstant +gl-color-buffer-bit+ 16384)
 (cl:defconstant +gl-hint-bit+ 32768) (cl:defconstant +gl-eval-bit+ 65536)
 (cl:defconstant +gl-list-bit+ 131072) (cl:defconstant +gl-texture-bit+ 262144)
 (cl:defconstant +gl-scissor-bit+ 524288) (cl:defconstant +gl-all-attrib-bits+ 1048575)
 (cl:defconstant +gl-proxy-texture-1-d+ 32867) (cl:defconstant +gl-proxy-texture-2-d+ 32868)
 (cl:defconstant +gl-texture-priority+ 32870) (cl:defconstant +gl-texture-resident+ 32871)
 (cl:defconstant +gl-texture-binding-1-d+ 32872) (cl:defconstant +gl-texture-binding-2-d+ 32873)
 (cl:defconstant +gl-texture-internal-format+ 4099) (cl:defconstant +gl-alpha-4+ 32827)
 (cl:defconstant +gl-alpha-8+ 32828) (cl:defconstant +gl-alpha-12+ 32829)
 (cl:defconstant +gl-alpha-16+ 32830) (cl:defconstant +gl-luminance-4+ 32831)
 (cl:defconstant +gl-luminance-8+ 32832) (cl:defconstant +gl-luminance-12+ 32833)
 (cl:defconstant +gl-luminance-16+ 32834) (cl:defconstant +gl-luminance-4-alpha-4+ 32835)
 (cl:defconstant +gl-luminance-6-alpha-2+ 32836) (cl:defconstant +gl-luminance-8-alpha-8+ 32837)
 (cl:defconstant +gl-luminance-12-alpha-4+ 32838) (cl:defconstant +gl-luminance-12-alpha-12+ 32839)
 (cl:defconstant +gl-luminance-16-alpha-16+ 32840) (cl:defconstant +gl-intensity+ 32841)
 (cl:defconstant +gl-intensity-4+ 32842) (cl:defconstant +gl-intensity-8+ 32843)
 (cl:defconstant +gl-intensity-12+ 32844) (cl:defconstant +gl-intensity-16+ 32845)
 (cl:defconstant +gl-r-3-g-3-b-2+ 10768) (cl:defconstant +gl-rgb-4+ 32847)
 (cl:defconstant +gl-rgb-5+ 32848) (cl:defconstant +gl-rgb-8+ 32849)
 (cl:defconstant +gl-rgb-10+ 32850) (cl:defconstant +gl-rgb-12+ 32851)
 (cl:defconstant +gl-rgb-16+ 32852) (cl:defconstant +gl-rgba-2+ 32853)
 (cl:defconstant +gl-rgba-4+ 32854) (cl:defconstant +gl-rgb-5-a-1+ 32855)
 (cl:defconstant +gl-rgba-8+ 32856) (cl:defconstant +gl-rgb-10-a-2+ 32857)
 (cl:defconstant +gl-rgba-12+ 32858) (cl:defconstant +gl-rgba-16+ 32859)
 (cl:defconstant +gl-client-pixel-store-bit+ 1) (cl:defconstant +gl-client-vertex-array-bit+ 2)
 (cl:defconstant +gl-all-client-attrib-bits+ 4294967295)
 (cl:defconstant +gl-client-all-attrib-bits+ 4294967295) (cl:defconstant +gl-rescale-normal+ 32826)
 (cl:defconstant +gl-clamp-to-edge+ 33071) (cl:defconstant +gl-max-elements-vertices+ 33000)
 (cl:defconstant +gl-max-elements-indices+ 33001) (cl:defconstant +gl-bgr+ 32992)
 (cl:defconstant +gl-bgra+ 32993) (cl:defconstant +gl-unsigned-byte-3-3-2+ 32818)
 (cl:defconstant +gl-unsigned-byte-2-3-3-rev+ 33634)
 (cl:defconstant +gl-unsigned-short-5-6-5+ 33635)
 (cl:defconstant +gl-unsigned-short-5-6-5-rev+ 33636)
 (cl:defconstant +gl-unsigned-short-4-4-4-4+ 32819)
 (cl:defconstant +gl-unsigned-short-4-4-4-4-rev+ 33637)
 (cl:defconstant +gl-unsigned-short-5-5-5-1+ 32820)
 (cl:defconstant +gl-unsigned-short-1-5-5-5-rev+ 33638)
 (cl:defconstant +gl-unsigned-int-8-8-8-8+ 32821)
 (cl:defconstant +gl-unsigned-int-8-8-8-8-rev+ 33639)
 (cl:defconstant +gl-unsigned-int-10-10-10-2+ 32822)
 (cl:defconstant +gl-unsigned-int-2-10-10-10-rev+ 33640)
 (cl:defconstant +gl-light-model-color-control+ 33272) (cl:defconstant +gl-single-color+ 33273)
 (cl:defconstant +gl-separate-specular-color+ 33274) (cl:defconstant +gl-texture-min-lod+ 33082)
 (cl:defconstant +gl-texture-max-lod+ 33083) (cl:defconstant +gl-texture-base-level+ 33084)
 (cl:defconstant +gl-texture-max-level+ 33085) (cl:defconstant +gl-smooth-point-size-range+ 2834)
 (cl:defconstant +gl-smooth-point-size-granularity+ 2835)
 (cl:defconstant +gl-smooth-line-width-range+ 2850)
 (cl:defconstant +gl-smooth-line-width-granularity+ 2851)
 (cl:defconstant +gl-aliased-point-size-range+ 33901)
 (cl:defconstant +gl-aliased-line-width-range+ 33902) (cl:defconstant +gl-pack-skip-images+ 32875)
 (cl:defconstant +gl-pack-image-height+ 32876) (cl:defconstant +gl-unpack-skip-images+ 32877)
 (cl:defconstant +gl-unpack-image-height+ 32878) (cl:defconstant +gl-texture-3-d+ 32879)
 (cl:defconstant +gl-proxy-texture-3-d+ 32880) (cl:defconstant +gl-texture-depth+ 32881)
 (cl:defconstant +gl-texture-wrap-r+ 32882) (cl:defconstant +gl-max-3-d-texture-size+ 32883)
 (cl:defconstant +gl-texture-binding-3-d+ 32874) (cl:defconstant +gl-constant-color+ 32769)
 (cl:defconstant +gl-one-minus-constant-color+ 32770) (cl:defconstant +gl-constant-alpha+ 32771)
 (cl:defconstant +gl-one-minus-constant-alpha+ 32772) (cl:defconstant +gl-color-table+ 32976)
 (cl:defconstant +gl-post-convolution-color-table+ 32977)
 (cl:defconstant +gl-post-color-matrix-color-table+ 32978)
 (cl:defconstant +gl-proxy-color-table+ 32979)
 (cl:defconstant +gl-proxy-post-convolution-color-table+ 32980)
 (cl:defconstant +gl-proxy-post-color-matrix-color-table+ 32981)
 (cl:defconstant +gl-color-table-scale+ 32982) (cl:defconstant +gl-color-table-bias+ 32983)
 (cl:defconstant +gl-color-table-format+ 32984) (cl:defconstant +gl-color-table-width+ 32985)
 (cl:defconstant +gl-color-table-red-size+ 32986)
 (cl:defconstant +gl-color-table-green-size+ 32987)
 (cl:defconstant +gl-color-table-blue-size+ 32988)
 (cl:defconstant +gl-color-table-alpha-size+ 32989)
 (cl:defconstant +gl-color-table-luminance-size+ 32990)
 (cl:defconstant +gl-color-table-intensity-size+ 32991) (cl:defconstant +gl-convolution-1-d+ 32784)
 (cl:defconstant +gl-convolution-2-d+ 32785) (cl:defconstant +gl-separable-2-d+ 32786)
 (cl:defconstant +gl-convolution-border-mode+ 32787)
 (cl:defconstant +gl-convolution-filter-scale+ 32788)
 (cl:defconstant +gl-convolution-filter-bias+ 32789) (cl:defconstant +gl-reduce+ 32790)
 (cl:defconstant +gl-convolution-format+ 32791) (cl:defconstant +gl-convolution-width+ 32792)
 (cl:defconstant +gl-convolution-height+ 32793) (cl:defconstant +gl-max-convolution-width+ 32794)
 (cl:defconstant +gl-max-convolution-height+ 32795)
 (cl:defconstant +gl-post-convolution-red-scale+ 32796)
 (cl:defconstant +gl-post-convolution-green-scale+ 32797)
 (cl:defconstant +gl-post-convolution-blue-scale+ 32798)
 (cl:defconstant +gl-post-convolution-alpha-scale+ 32799)
 (cl:defconstant +gl-post-convolution-red-bias+ 32800)
 (cl:defconstant +gl-post-convolution-green-bias+ 32801)
 (cl:defconstant +gl-post-convolution-blue-bias+ 32802)
 (cl:defconstant +gl-post-convolution-alpha-bias+ 32803)
 (cl:defconstant +gl-constant-border+ 33105) (cl:defconstant +gl-replicate-border+ 33107)
 (cl:defconstant +gl-convolution-border-color+ 33108) (cl:defconstant +gl-color-matrix+ 32945)
 (cl:defconstant +gl-color-matrix-stack-depth+ 32946)
 (cl:defconstant +gl-max-color-matrix-stack-depth+ 32947)
 (cl:defconstant +gl-post-color-matrix-red-scale+ 32948)
 (cl:defconstant +gl-post-color-matrix-green-scale+ 32949)
 (cl:defconstant +gl-post-color-matrix-blue-scale+ 32950)
 (cl:defconstant +gl-post-color-matrix-alpha-scale+ 32951)
 (cl:defconstant +gl-post-color-matrix-red-bias+ 32952)
 (cl:defconstant +gl-post-color-matrix-green-bias+ 32953)
 (cl:defconstant +gl-post-color-matrix-blue-bias+ 32954)
 (cl:defconstant +gl-post-color-matrix-alpha-bias+ 32955) (cl:defconstant +gl-histogram+ 32804)
 (cl:defconstant +gl-proxy-histogram+ 32805) (cl:defconstant +gl-histogram-width+ 32806)
 (cl:defconstant +gl-histogram-format+ 32807) (cl:defconstant +gl-histogram-red-size+ 32808)
 (cl:defconstant +gl-histogram-green-size+ 32809) (cl:defconstant +gl-histogram-blue-size+ 32810)
 (cl:defconstant +gl-histogram-alpha-size+ 32811)
 (cl:defconstant +gl-histogram-luminance-size+ 32812) (cl:defconstant +gl-histogram-sink+ 32813)
 (cl:defconstant +gl-minmax+ 32814) (cl:defconstant +gl-minmax-format+ 32815)
 (cl:defconstant +gl-minmax-sink+ 32816) (cl:defconstant +gl-table-too-large+ 32817)
 (cl:defconstant +gl-blend-equation+ 32777) (cl:defconstant +gl-min+ 32775)
 (cl:defconstant +gl-max+ 32776) (cl:defconstant +gl-func-add+ 32774)
 (cl:defconstant +gl-func-subtract+ 32778) (cl:defconstant +gl-func-reverse-subtract+ 32779)
 (cl:defconstant +gl-blend-color+ 32773) (cl:defconstant +gl-texture-0+ 33984)
 (cl:defconstant +gl-texture-1+ 33985) (cl:defconstant +gl-texture-2+ 33986)
 (cl:defconstant +gl-texture-3+ 33987) (cl:defconstant +gl-texture-4+ 33988)
 (cl:defconstant +gl-texture-5+ 33989) (cl:defconstant +gl-texture-6+ 33990)
 (cl:defconstant +gl-texture-7+ 33991) (cl:defconstant +gl-texture-8+ 33992)
 (cl:defconstant +gl-texture-9+ 33993) (cl:defconstant +gl-texture-10+ 33994)
 (cl:defconstant +gl-texture-11+ 33995) (cl:defconstant +gl-texture-12+ 33996)
 (cl:defconstant +gl-texture-13+ 33997) (cl:defconstant +gl-texture-14+ 33998)
 (cl:defconstant +gl-texture-15+ 33999) (cl:defconstant +gl-texture-16+ 34000)
 (cl:defconstant +gl-texture-17+ 34001) (cl:defconstant +gl-texture-18+ 34002)
 (cl:defconstant +gl-texture-19+ 34003) (cl:defconstant +gl-texture-20+ 34004)
 (cl:defconstant +gl-texture-21+ 34005) (cl:defconstant +gl-texture-22+ 34006)
 (cl:defconstant +gl-texture-23+ 34007) (cl:defconstant +gl-texture-24+ 34008)
 (cl:defconstant +gl-texture-25+ 34009) (cl:defconstant +gl-texture-26+ 34010)
 (cl:defconstant +gl-texture-27+ 34011) (cl:defconstant +gl-texture-28+ 34012)
 (cl:defconstant +gl-texture-29+ 34013) (cl:defconstant +gl-texture-30+ 34014)
 (cl:defconstant +gl-texture-31+ 34015) (cl:defconstant +gl-active-texture+ 34016)
 (cl:defconstant +gl-client-active-texture+ 34017) (cl:defconstant +gl-max-texture-units+ 34018)
 (cl:defconstant +gl-normal-map+ 34065) (cl:defconstant +gl-reflection-map+ 34066)
 (cl:defconstant +gl-texture-cube-map+ 34067) (cl:defconstant +gl-texture-binding-cube-map+ 34068)
 (cl:defconstant +gl-texture-cube-map-positive-x+ 34069)
 (cl:defconstant +gl-texture-cube-map-negative-x+ 34070)
 (cl:defconstant +gl-texture-cube-map-positive-y+ 34071)
 (cl:defconstant +gl-texture-cube-map-negative-y+ 34072)
 (cl:defconstant +gl-texture-cube-map-positive-z+ 34073)
 (cl:defconstant +gl-texture-cube-map-negative-z+ 34074)
 (cl:defconstant +gl-proxy-texture-cube-map+ 34075)
 (cl:defconstant +gl-max-cube-map-texture-size+ 34076) (cl:defconstant +gl-compressed-alpha+ 34025)
 (cl:defconstant +gl-compressed-luminance+ 34026)
 (cl:defconstant +gl-compressed-luminance-alpha+ 34027)
 (cl:defconstant +gl-compressed-intensity+ 34028) (cl:defconstant +gl-compressed-rgb+ 34029)
 (cl:defconstant +gl-compressed-rgba+ 34030) (cl:defconstant +gl-texture-compression-hint+ 34031)
 (cl:defconstant +gl-texture-compressed-image-size+ 34464)
 (cl:defconstant +gl-texture-compressed+ 34465)
 (cl:defconstant +gl-num-compressed-texture-formats+ 34466)
 (cl:defconstant +gl-compressed-texture-formats+ 34467) (cl:defconstant +gl-multisample+ 32925)
 (cl:defconstant +gl-sample-alpha-to-coverage+ 32926)
 (cl:defconstant +gl-sample-alpha-to-one+ 32927) (cl:defconstant +gl-sample-coverage+ 32928)
 (cl:defconstant +gl-sample-buffers+ 32936) (cl:defconstant +gl-samples+ 32937)
 (cl:defconstant +gl-sample-coverage-value+ 32938)
 (cl:defconstant +gl-sample-coverage-invert+ 32939) (cl:defconstant +gl-multisample-bit+ 536870912)
 (cl:defconstant +gl-transpose-modelview-matrix+ 34019)
 (cl:defconstant +gl-transpose-projection-matrix+ 34020)
 (cl:defconstant +gl-transpose-texture-matrix+ 34021)
 (cl:defconstant +gl-transpose-color-matrix+ 34022) (cl:defconstant +gl-combine+ 34160)
 (cl:defconstant +gl-combine-rgb+ 34161) (cl:defconstant +gl-combine-alpha+ 34162)
 (cl:defconstant +gl-source-0-rgb+ 34176) (cl:defconstant +gl-source-1-rgb+ 34177)
 (cl:defconstant +gl-source-2-rgb+ 34178) (cl:defconstant +gl-source-0-alpha+ 34184)
 (cl:defconstant +gl-source-1-alpha+ 34185) (cl:defconstant +gl-source-2-alpha+ 34186)
 (cl:defconstant +gl-operand-0-rgb+ 34192) (cl:defconstant +gl-operand-1-rgb+ 34193)
 (cl:defconstant +gl-operand-2-rgb+ 34194) (cl:defconstant +gl-operand-0-alpha+ 34200)
 (cl:defconstant +gl-operand-1-alpha+ 34201) (cl:defconstant +gl-operand-2-alpha+ 34202)
 (cl:defconstant +gl-rgb-scale+ 34163) (cl:defconstant +gl-add-signed+ 34164)
 (cl:defconstant +gl-interpolate+ 34165) (cl:defconstant +gl-subtract+ 34023)
 (cl:defconstant +gl-constant+ 34166) (cl:defconstant +gl-primary-color+ 34167)
 (cl:defconstant +gl-previous+ 34168) (cl:defconstant +gl-dot-3-rgb+ 34478)
 (cl:defconstant +gl-dot-3-rgba+ 34479) (cl:defconstant +gl-clamp-to-border+ 33069)
 (cl:defconstant +gl-arb-multitexture+ 1) (cl:defconstant +gl-texture-0-arb+ 33984)
 (cl:defconstant +gl-texture-1-arb+ 33985) (cl:defconstant +gl-texture-2-arb+ 33986)
 (cl:defconstant +gl-texture-3-arb+ 33987) (cl:defconstant +gl-texture-4-arb+ 33988)
 (cl:defconstant +gl-texture-5-arb+ 33989) (cl:defconstant +gl-texture-6-arb+ 33990)
 (cl:defconstant +gl-texture-7-arb+ 33991) (cl:defconstant +gl-texture-8-arb+ 33992)
 (cl:defconstant +gl-texture-9-arb+ 33993) (cl:defconstant +gl-texture-10-arb+ 33994)
 (cl:defconstant +gl-texture-11-arb+ 33995) (cl:defconstant +gl-texture-12-arb+ 33996)
 (cl:defconstant +gl-texture-13-arb+ 33997) (cl:defconstant +gl-texture-14-arb+ 33998)
 (cl:defconstant +gl-texture-15-arb+ 33999) (cl:defconstant +gl-texture-16-arb+ 34000)
 (cl:defconstant +gl-texture-17-arb+ 34001) (cl:defconstant +gl-texture-18-arb+ 34002)
 (cl:defconstant +gl-texture-19-arb+ 34003) (cl:defconstant +gl-texture-20-arb+ 34004)
 (cl:defconstant +gl-texture-21-arb+ 34005) (cl:defconstant +gl-texture-22-arb+ 34006)
 (cl:defconstant +gl-texture-23-arb+ 34007) (cl:defconstant +gl-texture-24-arb+ 34008)
 (cl:defconstant +gl-texture-25-arb+ 34009) (cl:defconstant +gl-texture-26-arb+ 34010)
 (cl:defconstant +gl-texture-27-arb+ 34011) (cl:defconstant +gl-texture-28-arb+ 34012)
 (cl:defconstant +gl-texture-29-arb+ 34013) (cl:defconstant +gl-texture-30-arb+ 34014)
 (cl:defconstant +gl-texture-31-arb+ 34015) (cl:defconstant +gl-active-texture-arb+ 34016)
 (cl:defconstant +gl-client-active-texture-arb+ 34017)
 (cl:defconstant +gl-max-texture-units-arb+ 34018) (cl:defconstant +gl-mesa-shader-debug+ 1)
 (cl:defconstant +gl-debug-object-mesa+ 34649) (cl:defconstant +gl-debug-print-mesa+ 34650)
 (cl:defconstant +gl-debug-assert-mesa+ 34651) (cl:defconstant +gl-mesa-packed-depth-stencil+ 1)
 (cl:defconstant +gl-depth-stencil-mesa+ 34640) (cl:defconstant +gl-unsigned-int-24-8-mesa+ 34641)
 (cl:defconstant +gl-unsigned-int-8-24-rev-mesa+ 34642)
 (cl:defconstant +gl-unsigned-short-15-1-mesa+ 34643)
 (cl:defconstant +gl-unsigned-short-1-15-rev-mesa+ 34644)
 (cl:defconstant +gl-mesa-program-debug+ 1)
 (cl:defconstant +gl-fragment-program-position-mesa+ 35760)
 (cl:defconstant +gl-fragment-program-callback-mesa+ 35761)
 (cl:defconstant +gl-fragment-program-callback-func-mesa+ 35762)
 (cl:defconstant +gl-fragment-program-callback-data-mesa+ 35763)
 (cl:defconstant +gl-vertex-program-position-mesa+ 35764)
 (cl:defconstant +gl-vertex-program-callback-mesa+ 35765)
 (cl:defconstant +gl-vertex-program-callback-func-mesa+ 35766)
 (cl:defconstant +gl-vertex-program-callback-data-mesa+ 35767)
 (cl:defconstant +gl-ati-blend-equation-separate+ 1)
 (cl:defconstant +gl-alpha-blend-equation-ati+ 34877)
 (cl:defconstant +glu-ext-object-space-tess+ 1) (cl:defconstant +glu-ext-nurbs-tessellator+ 1)
 (cl:defconstant +glu-false+ 0) (cl:defconstant +glu-true+ 1) (cl:defconstant +glu-version-1-1+ 1)
 (cl:defconstant +glu-version-1-2+ 1) (cl:defconstant +glu-version-1-3+ 1)
 (cl:defconstant +glu-version+ 100800) (cl:defconstant +glu-extensions+ 100801)
 (cl:defconstant +glu-invalid-enum+ 100900) (cl:defconstant +glu-invalid-value+ 100901)
 (cl:defconstant +glu-out-of-memory+ 100902) (cl:defconstant +glu-incompatible-gl-version+ 100903)
 (cl:defconstant +glu-invalid-operation+ 100904) (cl:defconstant +glu-outline-polygon+ 100240)
 (cl:defconstant +glu-outline-patch+ 100241) (cl:defconstant +glu-nurbs-error+ 100103)
 (cl:defconstant +glu-error+ 100103) (cl:defconstant +glu-nurbs-begin+ 100164)
 (cl:defconstant +glu-nurbs-begin-ext+ 100164) (cl:defconstant +glu-nurbs-vertex+ 100165)
 (cl:defconstant +glu-nurbs-vertex-ext+ 100165) (cl:defconstant +glu-nurbs-normal+ 100166)
 (cl:defconstant +glu-nurbs-normal-ext+ 100166) (cl:defconstant +glu-nurbs-color+ 100167)
 (cl:defconstant +glu-nurbs-color-ext+ 100167) (cl:defconstant +glu-nurbs-texture-coord+ 100168)
 (cl:defconstant +glu-nurbs-tex-coord-ext+ 100168) (cl:defconstant +glu-nurbs-end+ 100169)
 (cl:defconstant +glu-nurbs-end-ext+ 100169) (cl:defconstant +glu-nurbs-begin-data+ 100170)
 (cl:defconstant +glu-nurbs-begin-data-ext+ 100170) (cl:defconstant +glu-nurbs-vertex-data+ 100171)
 (cl:defconstant +glu-nurbs-vertex-data-ext+ 100171)
 (cl:defconstant +glu-nurbs-normal-data+ 100172)
 (cl:defconstant +glu-nurbs-normal-data-ext+ 100172) (cl:defconstant +glu-nurbs-color-data+ 100173)
 (cl:defconstant +glu-nurbs-color-data-ext+ 100173)
 (cl:defconstant +glu-nurbs-texture-coord-data+ 100174)
 (cl:defconstant +glu-nurbs-tex-coord-data-ext+ 100174)
 (cl:defconstant +glu-nurbs-end-data+ 100175) (cl:defconstant +glu-nurbs-end-data-ext+ 100175)
 (cl:defconstant +glu-nurbs-error-1+ 100251) (cl:defconstant +glu-nurbs-error-2+ 100252)
 (cl:defconstant +glu-nurbs-error-3+ 100253) (cl:defconstant +glu-nurbs-error-4+ 100254)
 (cl:defconstant +glu-nurbs-error-5+ 100255) (cl:defconstant +glu-nurbs-error-6+ 100256)
 (cl:defconstant +glu-nurbs-error-7+ 100257) (cl:defconstant +glu-nurbs-error-8+ 100258)
 (cl:defconstant +glu-nurbs-error-9+ 100259) (cl:defconstant +glu-nurbs-error-10+ 100260)
 (cl:defconstant +glu-nurbs-error-11+ 100261) (cl:defconstant +glu-nurbs-error-12+ 100262)
 (cl:defconstant +glu-nurbs-error-13+ 100263) (cl:defconstant +glu-nurbs-error-14+ 100264)
 (cl:defconstant +glu-nurbs-error-15+ 100265) (cl:defconstant +glu-nurbs-error-16+ 100266)
 (cl:defconstant +glu-nurbs-error-17+ 100267) (cl:defconstant +glu-nurbs-error-18+ 100268)
 (cl:defconstant +glu-nurbs-error-19+ 100269) (cl:defconstant +glu-nurbs-error-20+ 100270)
 (cl:defconstant +glu-nurbs-error-21+ 100271) (cl:defconstant +glu-nurbs-error-22+ 100272)
 (cl:defconstant +glu-nurbs-error-23+ 100273) (cl:defconstant +glu-nurbs-error-24+ 100274)
 (cl:defconstant +glu-nurbs-error-25+ 100275) (cl:defconstant +glu-nurbs-error-26+ 100276)
 (cl:defconstant +glu-nurbs-error-27+ 100277) (cl:defconstant +glu-nurbs-error-28+ 100278)
 (cl:defconstant +glu-nurbs-error-29+ 100279) (cl:defconstant +glu-nurbs-error-30+ 100280)
 (cl:defconstant +glu-nurbs-error-31+ 100281) (cl:defconstant +glu-nurbs-error-32+ 100282)
 (cl:defconstant +glu-nurbs-error-33+ 100283) (cl:defconstant +glu-nurbs-error-34+ 100284)
 (cl:defconstant +glu-nurbs-error-35+ 100285) (cl:defconstant +glu-nurbs-error-36+ 100286)
 (cl:defconstant +glu-nurbs-error-37+ 100287) (cl:defconstant +glu-auto-load-matrix+ 100200)
 (cl:defconstant +glu-culling+ 100201) (cl:defconstant +glu-sampling-tolerance+ 100203)
 (cl:defconstant +glu-display-mode+ 100204) (cl:defconstant +glu-parametric-tolerance+ 100202)
 (cl:defconstant +glu-sampling-method+ 100205) (cl:defconstant +glu-u-step+ 100206)
 (cl:defconstant +glu-v-step+ 100207) (cl:defconstant +glu-nurbs-mode+ 100160)
 (cl:defconstant +glu-nurbs-mode-ext+ 100160) (cl:defconstant +glu-nurbs-tessellator+ 100161)
 (cl:defconstant +glu-nurbs-tessellator-ext+ 100161) (cl:defconstant +glu-nurbs-renderer+ 100162)
 (cl:defconstant +glu-nurbs-renderer-ext+ 100162)
 (cl:defconstant +glu-object-parametric-error+ 100208)
 (cl:defconstant +glu-object-parametric-error-ext+ 100208)
 (cl:defconstant +glu-object-path-length+ 100209)
 (cl:defconstant +glu-object-path-length-ext+ 100209) (cl:defconstant +glu-path-length+ 100215)
 (cl:defconstant +glu-parametric-error+ 100216) (cl:defconstant +glu-domain-distance+ 100217)
 (cl:defconstant +glu-map-1-trim-2+ 100210) (cl:defconstant +glu-map-1-trim-3+ 100211)
 (cl:defconstant +glu-point+ 100010) (cl:defconstant +glu-line+ 100011)
 (cl:defconstant +glu-fill+ 100012) (cl:defconstant +glu-silhouette+ 100013)
 (cl:defconstant +glu-smooth+ 100000) (cl:defconstant +glu-flat+ 100001)
 (cl:defconstant +glu-none+ 100002) (cl:defconstant +glu-outside+ 100020)
 (cl:defconstant +glu-inside+ 100021) (cl:defconstant +glu-tess-begin+ 100100)
 (cl:defconstant +glu-begin+ 100100) (cl:defconstant +glu-tess-vertex+ 100101)
 (cl:defconstant +glu-vertex+ 100101) (cl:defconstant +glu-tess-end+ 100102)
 (cl:defconstant +glu-end+ 100102) (cl:defconstant +glu-tess-error+ 100103)
 (cl:defconstant +glu-tess-edge-flag+ 100104) (cl:defconstant +glu-edge-flag+ 100104)
 (cl:defconstant +glu-tess-combine+ 100105) (cl:defconstant +glu-tess-begin-data+ 100106)
 (cl:defconstant +glu-tess-vertex-data+ 100107) (cl:defconstant +glu-tess-end-data+ 100108)
 (cl:defconstant +glu-tess-error-data+ 100109) (cl:defconstant +glu-tess-edge-flag-data+ 100110)
 (cl:defconstant +glu-tess-combine-data+ 100111) (cl:defconstant +glu-cw+ 100120)
 (cl:defconstant +glu-ccw+ 100121) (cl:defconstant +glu-interior+ 100122)
 (cl:defconstant +glu-exterior+ 100123) (cl:defconstant +glu-unknown+ 100124)
 (cl:defconstant +glu-tess-winding-rule+ 100140) (cl:defconstant +glu-tess-boundary-only+ 100141)
 (cl:defconstant +glu-tess-tolerance+ 100142) (cl:defconstant +glu-tess-error-1+ 100151)
 (cl:defconstant +glu-tess-error-2+ 100152) (cl:defconstant +glu-tess-error-3+ 100153)
 (cl:defconstant +glu-tess-error-4+ 100154) (cl:defconstant +glu-tess-error-5+ 100155)
 (cl:defconstant +glu-tess-error-6+ 100156) (cl:defconstant +glu-tess-error-7+ 100157)
 (cl:defconstant +glu-tess-error-8+ 100158)
 (cl:defconstant +glu-tess-missing-begin-polygon+ 100151)
 (cl:defconstant +glu-tess-missing-begin-contour+ 100152)
 (cl:defconstant +glu-tess-missing-end-polygon+ 100153)
 (cl:defconstant +glu-tess-missing-end-contour+ 100154)
 (cl:defconstant +glu-tess-coord-too-large+ 100155)
 (cl:defconstant +glu-tess-need-combine-callback+ 100156)
 (cl:defconstant +glu-tess-winding-odd+ 100130) (cl:defconstant +glu-tess-winding-nonzero+ 100131)
 (cl:defconstant +glu-tess-winding-positive+ 100132)
 (cl:defconstant +glu-tess-winding-negative+ 100133)
 (cl:defconstant +glu-tess-winding-abs-geq-two+ 100134)
 (cl:defconstant +glu-tess-max-coord+
  1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
