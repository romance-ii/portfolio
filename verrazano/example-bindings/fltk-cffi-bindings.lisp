;;; WARNING: This is a generated file, editing it is not advised!
(in-package :cl-user)
(asdf:operate 'asdf:load-op :verrazano-runtime)
(DEFPACKAGE :FLTK-CFFI-BINDINGS (:USE :CFFI) (:NICKNAMES)
            (:EXPORT "+FL-HIDDEN-BUTTON+" "+FL-TOGGLE-BUTTON+" "+FL-NORMAL-BUTTON+"
             "+FL-DOUBLE-WINDOW+" "+FL-WINDOW+" "FL-OLD-SHORTCUT" "FL-O-UTPUT-NEW-1"
             "FL-O-UTPUT-NEW-1-" "FL-O-UTPUT-DELETE" "FL-I-NPUT-NEW-1" "FL-I-NPUT-NEW-1-"
             "FL-I-NPUT-HANDLE" "FL-I-NPUT-DRAW" "FL-I-NPUT-HANDLE-MOUSE"
             "FL-I-NPUT-SHIFT-UP-DOWN-POSITION" "FL-I-NPUT-SHIFT-POSITION" "FL-I-NPUT-HANDLE-KEY"
             "FL-I-NPUT-DELETE" "FL-I-NPUT--WRAP-1" "FL-I-NPUT--WRAP" "FL-I-NPUT--READONLY-1"
             "FL-I-NPUT--READONLY" "FL-I-NPUT--INPUT-TYPE-1" "FL-I-NPUT--INPUT-TYPE"
             "FL-I-NPUT--CURSOR-COLOR-1" "FL-I-NPUT--CURSOR-COLOR" "FL-I-NPUT--TEXTCOLOR-1"
             "FL-I-NPUT--TEXTCOLOR" "FL-I-NPUT--TEXTSIZE-1" "FL-I-NPUT--TEXTSIZE"
             "FL-I-NPUT--TEXTFONT-1" "FL-I-NPUT--TEXTFONT" "FL-I-NPUT--COPY-CUTS" "FL-I-NPUT--UNDO"
             "FL-I-NPUT--COPY" "FL-I-NPUT--INSERT" "FL-I-NPUT--CUT-2" "FL-I-NPUT--CUT-1"
             "FL-I-NPUT--CUT" "FL-I-NPUT--REPLACE" "FL-I-NPUT--MARK-1" "FL-I-NPUT--POSITION-2"
             "FL-I-NPUT--POSITION-1" "FL-I-NPUT--MARK" "FL-I-NPUT--POSITION"
             "FL-I-NPUT--MAXIMUM-SIZE-1" "FL-I-NPUT--MAXIMUM-SIZE" "FL-I-NPUT--SIZE-1"
             "FL-I-NPUT--SIZE" "FL-I-NPUT--INDEX" "FL-I-NPUT--VALUE-2" "FL-I-NPUT--STATIC-VALUE-1"
             "FL-I-NPUT--STATIC-VALUE" "FL-I-NPUT--VALUE-1" "FL-I-NPUT--VALUE" "FL-I-NPUT--DELETE"
             "FL-I-NPUT--NEW-1" "FL-I-NPUT--NEW-1-" "FL-I-NPUT--RESIZE" "FL-I-NPUT--YSCROLL"
             "FL-I-NPUT--XSCROLL" "FL-I-NPUT--MAYBE-DO-CALLBACK" "FL-I-NPUT--HANDLETEXT"
             "FL-I-NPUT--HANDLE-MOUSE" "FL-I-NPUT--UP-DOWN-POSITION" "FL-I-NPUT--DRAWTEXT"
             "FL-I-NPUT--LINE-END" "FL-I-NPUT--LINE-START" "FL-I-NPUT--WORD-END"
             "FL-I-NPUT--WORD-START" "FL-I-NPUT--SETFONT" "FL-I-NPUT--PUT-IN-BUFFER"
             "FL-I-NPUT--MINIMAL-UPDATE-1" "FL-I-NPUT--MINIMAL-UPDATE" "FL-I-NPUT--EXPANDPOS"
             "FL-I-NPUT--EXPAND" "FL-B-UTTON-DOWN-COLOR-1" "FL-B-UTTON-DOWN-COLOR"
             "FL-B-UTTON-SHORTCUT-2" "FL-B-UTTON-DOWN-BOX-1" "FL-B-UTTON-DOWN-BOX"
             "FL-B-UTTON-SHORTCUT-1" "FL-B-UTTON-SHORTCUT" "FL-B-UTTON-SETONLY" "FL-B-UTTON-CLEAR"
             "FL-B-UTTON-SET" "FL-B-UTTON-VALUE-1" "FL-B-UTTON-VALUE" "FL-B-UTTON-NEW-1"
             "FL-B-UTTON-NEW-1-" "FL-B-UTTON-HANDLE" "FL-B-UTTON-DRAW" "FL-B-UTTON-DELETE"
             "FL-G-ROUP-FORMS-END" "FL-G-ROUP--DDFDESIGN-KLUDGE" "FL-G-ROUP-FOCUS"
             "FL-G-ROUP-INIT-SIZES" "FL-G-ROUP-ADD-RESIZABLE" "FL-G-ROUP-RESIZABLE-2"
             "FL-G-ROUP-RESIZABLE-1" "FL-G-ROUP-RESIZABLE" "FL-G-ROUP-CLEAR" "FL-G-ROUP-REMOVE-1"
             "FL-G-ROUP-REMOVE" "FL-G-ROUP-INSERT-1" "FL-G-ROUP-INSERT" "FL-G-ROUP-ADD-1"
             "FL-G-ROUP-ADD" "FL-G-ROUP-DELETE" "FL-G-ROUP-NEW-1" "FL-G-ROUP-NEW-1-"
             "FL-G-ROUP-RESIZE" "FL-G-ROUP-ARRAY" "FL-G-ROUP-FIND-1" "FL-G-ROUP-FIND"
             "FL-G-ROUP-CHILD" "FL-G-ROUP-CHILDREN" "FL-G-ROUP-CURRENT-1" "FL-G-ROUP-CURRENT"
             "FL-G-ROUP-END" "FL-G-ROUP-BEGIN" "FL-G-ROUP-HANDLE" "FL-G-ROUP-SIZES"
             "FL-G-ROUP-UPDATE-CHILD" "FL-G-ROUP-DRAW-OUTSIDE-LABEL" "FL-G-ROUP-DRAW-CHILDREN"
             "FL-G-ROUP-DRAW-CHILD" "FL-G-ROUP-DRAW" "FL-G-ROUP-OPERATOR=" "FL-G-ROUP-NAVIGATION"
             "FL-DO-WIDGET-DELETION" "FL-DELETE-WIDGET" "FL-THREAD-MESSAGE" "FL-AWAKE" "FL-UNLOCK"
             "FL-LOCK" "FL-DND-TEXT-OPS-1" "FL-DND-TEXT-OPS" "FL-VISIBLE-FOCUS-1"
             "FL-VISIBLE-FOCUS" "FL-RELEASE" "FL-GRAB-2" "FL-SET-IDLE" "FL-EVENT-BUTTON-3"
             "FL-EVENT-BUTTON-2" "FL-EVENT-BUTTON-1" "FL-EVENT-BUTTONS" "FL-EVENT-ALT"
             "FL-EVENT-CTRL" "FL-EVENT-SHIFT" "FL-SET-ATCLOSE" "FL-DEFAULT-ATCLOSE" "FL-SET-ABORT"
             "FL-DRAW-BOX-ACTIVE" "FL-BOX-DH" "FL-BOX-DW" "FL-BOX-DY" "FL-BOX-DX"
             "FL-SET-BOXTYPE-1" "FL-SET-BOXTYPE" "FL-GET-BOXTYPE" "FL-SET-LABELTYPE-1"
             "FL-SET-LABELTYPE" "FL-SET-FONTS" "FL-SET-FONT-1" "FL-SET-FONT" "FL-GET-FONT-SIZES"
             "FL-GET-FONT-NAME" "FL-GET-FONT" "FL-FREE-COLOR" "FL-GET-COLOR-1" "FL-GET-COLOR"
             "FL-SET-COLOR-1" "FL-SET-COLOR" "FL-SCREEN-XYWH-2" "FL-SCREEN-XYWH-1" "FL-SCREEN-XYWH"
             "FL-SCREEN-COUNT" "FL-H" "FL-W" "FL-Y" "FL-X" "FL-PASTE-1" "FL-SELECTION"
             "FL-SELECTION-OWNER-1" "FL-SELECTION-OWNER" "FL-DND" "FL-PASTE" "FL-COPY"
             "FL-REMOVE-HANDLER" "FL-ADD-HANDLER" "FL-FOCUS-1" "FL-FOCUS" "FL-PUSHED-1" "FL-PUSHED"
             "FL-BELOWMOUSE-1" "FL-BELOWMOUSE" "FL-HANDLE" "FL-TEST-SHORTCUT" "FL-EVENT-INSIDE-1"
             "FL-EVENT-INSIDE" "FL-COMPOSE-RESET" "FL-COMPOSE" "FL-EVENT-LENGTH" "FL-EVENT-TEXT"
             "FL-GET-KEY" "FL-EVENT-KEY-1" "FL-EVENT-KEY" "FL-EVENT-STATE-1" "FL-EVENT-STATE"
             "FL-EVENT-BUTTON" "FL-EVENT-IS-CLICK-1" "FL-EVENT-IS-CLICK" "FL-EVENT-CLICKS-1"
             "FL-EVENT-CLICKS" "FL-GET-MOUSE" "FL-EVENT-DY" "FL-EVENT-DX" "FL-EVENT-Y-ROOT"
             "FL-EVENT-X-ROOT" "FL-EVENT-Y" "FL-EVENT-X" "FL-EVENT" "FL-GRAB-1" "FL-GRAB"
             "FL-MODAL" "FL-NEXT-WINDOW" "FL-FIRST-WINDOW-1" "FL-FIRST-WINDOW" "FL-FLUSH"
             "FL-REDRAW" "FL-DAMAGE-1" "FL-REMOVE-IDLE" "FL-HAS-IDLE" "FL-ADD-IDLE"
             "FL-REMOVE-FD-1" "FL-REMOVE-FD" "FL-ADD-FD-1" "FL-ADD-FD" "FL-REMOVE-CHECK"
             "FL-HAS-CHECK" "FL-ADD-CHECK" "FL-REMOVE-TIMEOUT" "FL-HAS-TIMEOUT" "FL-REPEAT-TIMEOUT"
             "FL-ADD-TIMEOUT" "FL-READQUEUE" "FL-RUN" "FL-READY" "FL-CHECK" "FL-WAIT-1" "FL-WAIT"
             "FL-RELOAD-SCHEME" "FL-SCHEME-1" "FL-SCHEME" "FL-BACKGROUND-2" "FL-BACKGROUND"
             "FL-FOREGROUND" "FL-GET-SYSTEM-COLORS" "FL-OWN-COLORMAP" "FL-GL-VISUAL" "FL-VISUAL"
             "FL-DISPLAY" "FL-ARGS-1" "FL-ARGS" "FL-ARG" "FL-VERSION" "FL-DAMAGE" "FL-NEW-1"
             "FL-NEW-1-" "FL-L-ABEL-MEASURE" "FL-L-ABEL-DRAW" "FL-L-ABEL-NEW-1" "FL-L-ABEL-NEW-1-"
             "FL-W-INDOW-DEFAULT-CALLBACK" "FL-W-INDOW-DEFAULT-CURSOR" "FL-W-INDOW-CURSOR"
             "FL-W-INDOW-MAKE-CURRENT" "FL-W-INDOW-CURRENT" "FL-W-INDOW-Y-ROOT" "FL-W-INDOW-X-ROOT"
             "FL-W-INDOW-ICONIZE" "FL-W-INDOW-FULLSCREEN-OFF" "FL-W-INDOW-FULLSCREEN"
             "FL-W-INDOW-SHOW-1" "FL-W-INDOW-HIDE" "FL-W-INDOW-SHOW" "FL-W-INDOW-SHOWN"
             "FL-W-INDOW-ICON-1" "FL-W-INDOW-ICON" "FL-W-INDOW-XCLASS-1" "FL-W-INDOW-XCLASS"
             "FL-W-INDOW-COPY-LABEL" "FL-W-INDOW-LABEL-2" "FL-W-INDOW-ICONLABEL-1"
             "FL-W-INDOW-LABEL-1" "FL-W-INDOW-ICONLABEL" "FL-W-INDOW-LABEL" "FL-W-INDOW-SIZE-RANGE"
             "FL-W-INDOW-FREE-POSITION" "FL-W-INDOW-HOTSPOT-2" "FL-W-INDOW-HOTSPOT-1"
             "FL-W-INDOW-HOTSPOT" "FL-W-INDOW-NON-MODAL" "FL-W-INDOW-SET-NON-MODAL"
             "FL-W-INDOW-MODAL" "FL-W-INDOW-SET-MODAL" "FL-W-INDOW-OVERRIDE"
             "FL-W-INDOW-SET-OVERRIDE" "FL-W-INDOW-BORDER-1" "FL-W-INDOW-CLEAR-BORDER"
             "FL-W-INDOW-BORDER" "FL-W-INDOW-RESIZE" "FL-W-INDOW-HANDLE" "FL-W-INDOW-DELETE"
             "FL-W-INDOW-NEW-2" "FL-W-INDOW-NEW-2-" "FL-W-INDOW-NEW-1" "FL-W-INDOW-NEW-1-"
             "FL-W-INDOW-FLUSH" "FL-W-INDOW-DRAW" "FL-W-INDOW-OPERATOR=" "FL-W-INDOW--F-L-W-INDOW"
             "FL-W-INDOW-SIZE-RANGE-" "FL-W-IDGET-COLOR-2-1" "FL-W-IDGET-WINDOW"
             "FL-W-IDGET-MEASURE-LABEL" "FL-W-IDGET-DRAW-LABEL-2" "FL-W-IDGET-DAMAGE-2"
             "FL-W-IDGET-DAMAGE-1" "FL-W-IDGET-CLEAR-DAMAGE" "FL-W-IDGET-DAMAGE"
             "FL-W-IDGET-REDRAW-LABEL" "FL-W-IDGET-REDRAW" "FL-W-IDGET-INSIDE"
             "FL-W-IDGET-CONTAINS" "FL-W-IDGET-TEST-SHORTCUT-1" "FL-W-IDGET-TEST-SHORTCUT"
             "FL-W-IDGET-DO-CALLBACK-2" "FL-W-IDGET-DO-CALLBACK-1" "FL-W-IDGET-DO-CALLBACK"
             "FL-W-IDGET-DEFAULT-CALLBACK" "FL-W-IDGET-VISIBLE-FOCUS-1" "FL-W-IDGET-VISIBLE-FOCUS"
             "FL-W-IDGET-CLEAR-VISIBLE-FOCUS" "FL-W-IDGET-SET-VISIBLE-FOCUS"
             "FL-W-IDGET-TAKE-FOCUS" "FL-W-IDGET-CLEAR-CHANGED" "FL-W-IDGET-SET-CHANGED"
             "FL-W-IDGET-CHANGED" "FL-W-IDGET-TAKESEVENTS" "FL-W-IDGET-CLEAR-OUTPUT"
             "FL-W-IDGET-SET-OUTPUT" "FL-W-IDGET-OUTPUT" "FL-W-IDGET-DEACTIVATE"
             "FL-W-IDGET-ACTIVATE" "FL-W-IDGET-ACTIVE-R" "FL-W-IDGET-ACTIVE"
             "FL-W-IDGET-CLEAR-VISIBLE" "FL-W-IDGET-SET-VISIBLE" "FL-W-IDGET-HIDE"
             "FL-W-IDGET-SHOW" "FL-W-IDGET-VISIBLE-R" "FL-W-IDGET-VISIBLE" "FL-W-IDGET-WHEN-1"
             "FL-W-IDGET-WHEN" "FL-W-IDGET-ARGUMENT-1" "FL-W-IDGET-ARGUMENT"
             "FL-W-IDGET-USER-DATA-1" "FL-W-IDGET-USER-DATA" "FL-W-IDGET-CALLBACK-4"
             "FL-W-IDGET-CALLBACK-3" "FL-W-IDGET-CALLBACK-2" "FL-W-IDGET-CALLBACK-1"
             "FL-W-IDGET-CALLBACK" "FL-W-IDGET-TOOLTIP-1" "FL-W-IDGET-TOOLTIP"
             "FL-W-IDGET-DEIMAGE-2" "FL-W-IDGET-DEIMAGE-1" "FL-W-IDGET-DEIMAGE"
             "FL-W-IDGET-IMAGE-2" "FL-W-IDGET-IMAGE-1" "FL-W-IDGET-IMAGE" "FL-W-IDGET-LABELSIZE-1"
             "FL-W-IDGET-LABELSIZE" "FL-W-IDGET-LABELFONT-1" "FL-W-IDGET-LABELFONT"
             "FL-W-IDGET-LABELCOLOR-1" "FL-W-IDGET-LABELCOLOR" "FL-W-IDGET-LABELTYPE-1"
             "FL-W-IDGET-LABELTYPE" "FL-W-IDGET-LABEL-2" "FL-W-IDGET-COPY-LABEL"
             "FL-W-IDGET-LABEL-1" "FL-W-IDGET-LABEL" "FL-W-IDGET-COLOR-2"
             "FL-W-IDGET-SELECTION-COLOR-1" "FL-W-IDGET-SELECTION-COLOR" "FL-W-IDGET-COLOR-1"
             "FL-W-IDGET-COLOR" "FL-W-IDGET-BOX-1" "FL-W-IDGET-BOX" "FL-W-IDGET-ALIGN-1"
             "FL-W-IDGET-ALIGN" "FL-W-IDGET-SIZE" "FL-W-IDGET-POSITION" "FL-W-IDGET-DAMAGE-RESIZE"
             "FL-W-IDGET-RESIZE" "FL-W-IDGET-H-1" "FL-W-IDGET-W-1" "FL-W-IDGET-Y-1"
             "FL-W-IDGET-X-1" "FL-W-IDGET-TYPE-1" "FL-W-IDGET-TYPE" "FL-W-IDGET-PARENT-1"
             "FL-W-IDGET-PARENT" "FL-W-IDGET-HANDLE" "FL-W-IDGET-DRAW" "FL-W-IDGET-DELETE"
             "FL-W-IDGET-DRAW-LABEL-1" "FL-W-IDGET-DRAW-LABEL" "FL-W-IDGET-DRAW-FOCUS-1"
             "FL-W-IDGET-DRAW-FOCUS" "FL-W-IDGET-DRAW-BOX-2" "FL-W-IDGET-DRAW-BOX-1"
             "FL-W-IDGET-DRAW-BOX" "FL-W-IDGET-CLEAR-FLAG" "FL-W-IDGET-SET-FLAG" "FL-W-IDGET-FLAGS"
             "FL-W-IDGET-H" "FL-W-IDGET-W" "FL-W-IDGET-Y" "FL-W-IDGET-X" "FL-W-IDGET-NEW-1"
             "FL-W-IDGET-NEW-1-" "FL-W-IDGET-OPERATOR=" "FL-W-INDOW-ANONYMOUS-216"
             "FL-W-IDGET-ANONYMOUS-207" "FL-C-URSOR" "FL-W-HEN" "FL-F-ONT" "FL-L-ABELTYPE"
             "FL-A-LIGN" "FL-C-OLOR" "FL-B-OXTYPE" "FL-X" "FL-I-MAGE" "FL-B-OX-D-RAW-F"
             "FL-L-ABEL-M-EASURE-F" "FL-L-ABEL-D-RAW-F" "FL-T-IMEOUT-H-ANDLER" "FL-C-ALLBACK-1"
             "FL-C-ALLBACK-0" "FL-C-ALLBACK-P" "UCHAR" "FL-C-ALLBACK"))

(in-package :FLTK-CFFI-BINDINGS)
(cffi:defcstruct fl-g-roup (data :char :count 88))
(cffi::defctype* fl-c-allback anonymous200)
(cffi:defcstruct fl-i-mage)
(cffi::defctype* uchar :unsigned-char)
(cffi:defcstruct fl-l-abel (data :char :count 20))
(cffi:defcstruct fl-w-idget (data :char :count 68))
(cffi:defcenum fl-b-oxtype (:fl-no-box 0) (:fl-flat-box 1) (:fl-up-box 2) (:fl-down-box 3)
 (:fl-up-frame 4) (:fl-down-frame 5) (:fl-thin-up-box 6) (:fl-thin-down-box 7)
 (:fl-thin-up-frame 8) (:fl-thin-down-frame 9) (:fl-engraved-box 10) (:fl-embossed-box 11)
 (:fl-engraved-frame 12) (:fl-embossed-frame 13) (:fl-border-box 14) (:_fl-shadow-box 15)
 (:fl-border-frame 16) (:_fl-shadow-frame 17) (:_fl-rounded-box 18) (:_fl-rshadow-box 19)
 (:_fl-rounded-frame 20) (:_fl-rflat-box 21) (:_fl-round-up-box 22) (:_fl-round-down-box 23)
 (:_fl-diamond-up-box 24) (:_fl-diamond-down-box 25) (:_fl-oval-box 26) (:_fl-oshadow-box 27)
 (:_fl-oval-frame 28) (:_fl-oflat-box 29) (:_fl-plastic-up-box 30) (:_fl-plastic-down-box 31)
 (:_fl-plastic-up-frame 32) (:_fl-plastic-down-frame 33) (:_fl-plastic-thin-up-box 34)
 (:_fl-plastic-thin-down-box 35) (:_fl-plastic-round-up-box 36) (:_fl-plastic-round-down-box 37)
 (:fl-free-boxtype 38))
(cffi:defcenum fl-c-olor (:fl-foreground-color 0) (:fl-background-2-color 7) (:fl-inactive-color 8)
 (:fl-selection-color 15) (:fl-gray-0 32) (:fl-dark-3 39) (:fl-dark-2 45) (:fl-dark-1 47)
 (:fl-background-color 49) (:fl-light-1 50) (:fl-light-2 52) (:fl-light-3 54) (:fl-black 56)
 (:fl-red 88) (:fl-green 63) (:fl-yellow 95) (:fl-blue 216) (:fl-magenta 248) (:fl-cyan 223)
 (:fl-dark-red 72) (:fl-dark-green 60) (:fl-dark-yellow 76) (:fl-dark-blue 136)
 (:fl-dark-magenta 152) (:fl-dark-cyan 140) (:fl-white 255))
(cffi:defcenum fl-a-lign (:fl-align-top 1) (:fl-align-bottom 2) (:fl-align-left 4)
 (:fl-align-right 8) (:fl-align-inside 16) (:fl-align-text-over-image 32) (:fl-align-clip 64)
 (:fl-align-wrap 128) (:fl-align-left-top 5) (:fl-align-right-top 9) (:fl-align-left-bottom 6)
 (:fl-align-right-bottom 10) (:fl-align-nowrap 0))
(cffi:defcenum fl-l-abeltype (:fl-normal-label 0) (:fl-no-label 1) (:_fl-shadow-label 2)
 (:_fl-engraved-label 3) (:_fl-embossed-label 4) (:_fl-multi-label 5) (:_fl-icon-label 6)
 (:_fl-image-label 7) (:fl-free-labeltype 8))
(cffi:defcenum fl-f-ont (:fl-helvetica 0) (:fl-helvetica-bold-italic 3) (:fl-courier 4)
 (:fl-courier-bold 5) (:fl-courier-italic 6) (:fl-courier-bold-italic 7) (:fl-times 8)
 (:fl-times-bold 9) (:fl-times-italic 10) (:fl-times-bold-italic 11) (:fl-symbol 12)
 (:fl-screen 13) (:fl-screen-bold 14) (:fl-zapf-dingbats 15) (:fl-free-font 16) (:fl-bold 1)
 (:fl-italic 2))
(cffi::defctype* fl-c-allback-p :pointer)
(cffi::defctype* fl-c-allback-0 anonymous209)
(cffi::defctype* fl-c-allback-1 anonymous211)
(cffi:defcenum fl-w-hen (:fl-when-never 0) (:fl-when-changed 1) (:fl-when-release 4)
 (:fl-when-release-always 6) (:fl-when-enter-key 8) (:fl-when-enter-key-always 10)
 (:fl-when-enter-key-changed 11) (:fl-when-not-changed 2))
(cffi:defcstruct fl-x)
(cffi:defcenum fl-c-ursor (:fl-cursor-default 0) (:fl-cursor-arrow 35) (:fl-cursor-cross 66)
 (:fl-cursor-wait 76) (:fl-cursor-insert 77) (:fl-cursor-hand 31) (:fl-cursor-help 47)
 (:fl-cursor-move 27) (:fl-cursor-ns 78) (:fl-cursor-we 79) (:fl-cursor-nwse 80)
 (:fl-cursor-nesw 81) (:fl-cursor-none 255) (:fl-cursor-n 70) (:fl-cursor-ne 69) (:fl-cursor-e 49)
 (:fl-cursor-se 8) (:fl-cursor-s 9) (:fl-cursor-sw 7) (:fl-cursor-w 36) (:fl-cursor-nw 68))
(cffi:defcstruct fl-w-indow (data :char :count 128))
(cffi:defcstruct fl (data :char :count 1))
(cffi::defctype* fl-t-imeout-h-andler :pointer)
(cffi::defctype* fl-l-abel-d-raw-f anonymous254)
(cffi::defctype* fl-l-abel-m-easure-f anonymous256)
(cffi::defctype* fl-b-ox-d-raw-f anonymous258)
(cffi:defcstruct fl-b-utton (data :char :count 76))
(cffi:defcstruct fl-i-nput- (data :char :count 120))
(cffi:defcstruct fl-i-nput (data :char :count 120))
(cffi:defcstruct fl-o-utput (data :char :count 120))
(cffi:defcenum fl-w-idget-anonymous-207 (:inactive 1) (:invisible 2) (:output 4)
 (:shortcut-label 64) (:changed 128) (:visible-focus 512) (:copied-label 1024))
(cffi:defcenum fl-w-indow-anonymous-216 (:fl-modal 64) (:fl-noborder 8) (:fl-force-position 16)
 (:fl-non-modal 32) (:fl-override 256))
(cl:progn
 (cffi:defcfun ("_ZN9Fl_WidgetaSERKS_" fl-w-idget-operator=) :pointer (this :pointer)
  (arg1 :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_WidgetC1EiiiiPKc" fl-w-idget-new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-w-idget-new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-w-idget)))
    (fl-w-idget-new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cffi:defcfun ("_ZN9Fl_Widget1xEi" fl-w-idget-x) :void (this :pointer) (v :int))
 (cffi:defcfun ("_ZN9Fl_Widget1yEi" fl-w-idget-y) :void (this :pointer) (v :int))
 (cffi:defcfun ("_ZN9Fl_Widget1wEi" fl-w-idget-w) :void (this :pointer) (v :int))
 (cffi:defcfun ("_ZN9Fl_Widget1hEi" fl-w-idget-h) :void (this :pointer) (v :int))
 (cffi:defcfun ("_ZNK9Fl_Widget5flagsEv" fl-w-idget-flags) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8set_flagEi" fl-w-idget-set-flag) :void (this :pointer) (c :int))
 (cffi:defcfun ("_ZN9Fl_Widget10clear_flagEi" fl-w-idget-clear-flag) :void (this :pointer)
  (c :int))
 (cffi:defcfun ("_ZNK9Fl_Widget8draw_boxEv" fl-w-idget-draw-box) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget8draw_boxE10Fl_Boxtype8Fl_Color" fl-w-idget-draw-box-1) :void
  (this :pointer) (arg1 fl-b-oxtype) (arg2 fl-c-olor))
 (cffi:defcfun ("_ZNK9Fl_Widget8draw_boxE10Fl_Boxtypeiiii8Fl_Color" fl-w-idget-draw-box-2) :void
  (this :pointer) (arg1 fl-b-oxtype) (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :int)
  (arg6 fl-c-olor))
 (cffi:defcfun ("_ZN9Fl_Widget10draw_focusEv" fl-w-idget-draw-focus) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget10draw_focusE10Fl_Boxtypeiiii" fl-w-idget-draw-focus-1) :void
  (this :pointer) (arg1 fl-b-oxtype) (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :int))
 (cffi:defcfun ("_ZNK9Fl_Widget10draw_labelEv" fl-w-idget-draw-label) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget10draw_labelEiiii" fl-w-idget-draw-label-1) :void (this :pointer)
  (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int))
 (cl:defun fl-w-idget-delete (this) (vzn:virtual-funcall this 0 :pointer this :void))
 (cl:defun fl-w-idget-draw (this) (vzn:virtual-funcall this 3 0 :pointer this :void))
 (cl:defun fl-w-idget-handle (this arg1)
  (vzn:virtual-funcall this 4 0 :pointer this :int arg1 :int))
 (cffi:defcfun ("_ZNK9Fl_Widget6parentEv" fl-w-idget-parent) :pointer (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget6parentEP8Fl_Group" fl-w-idget-parent-1) :void (this :pointer)
  (p :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget4typeEv" fl-w-idget-type) uchar (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget4typeEh" fl-w-idget-type-1) :void (this :pointer) (t uchar))
 (cffi:defcfun ("_ZNK9Fl_Widget1xEv" fl-w-idget-x-1) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget1yEv" fl-w-idget-y-1) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget1wEv" fl-w-idget-w-1) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget1hEv" fl-w-idget-h-1) :int (this :pointer))
 (cl:defun fl-w-idget-resize (this arg1 arg2 arg3 arg4)
  (vzn:virtual-funcall this 5 0 :pointer this :int arg1 :int arg2 :int arg3 :int arg4 :void))
 (cffi:defcfun ("_ZN9Fl_Widget13damage_resizeEiiii" fl-w-idget-damage-resize) :int (this :pointer)
  (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int))
 (cffi:defcfun ("_ZN9Fl_Widget8positionEii" fl-w-idget-position) :void (this :pointer) (X :int)
  (Y :int))
 (cffi:defcfun ("_ZN9Fl_Widget4sizeEii" fl-w-idget-size) :void (this :pointer) (W :int) (H :int))
 (cffi:defcfun ("_ZNK9Fl_Widget5alignEv" fl-w-idget-align) fl-a-lign (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget5alignEh" fl-w-idget-align-1) :void (this :pointer) (a uchar))
 (cffi:defcfun ("_ZNK9Fl_Widget3boxEv" fl-w-idget-box) fl-b-oxtype (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget3boxE10Fl_Boxtype" fl-w-idget-box-1) :void (this :pointer)
  (a fl-b-oxtype))
 (cffi:defcfun ("_ZNK9Fl_Widget5colorEv" fl-w-idget-color) fl-c-olor (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget5colorEj" fl-w-idget-color-1) :void (this :pointer)
  (a :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Widget15selection_colorEv" fl-w-idget-selection-color) fl-c-olor
  (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget15selection_colorEj" fl-w-idget-selection-color-1) :void
  (this :pointer) (a :unsigned-int))
 (cffi:defcfun ("_ZN9Fl_Widget5colorEjj" fl-w-idget-color-2) :void (this :pointer)
  (a :unsigned-int) (b :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Widget5labelEv" fl-w-idget-label) :string (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget5labelEPKc" fl-w-idget-label-1) :void (this :pointer) (a :string))
 (cffi:defcfun ("_ZN9Fl_Widget10copy_labelEPKc" fl-w-idget-copy-label) :void (this :pointer)
  (a :string))
 (cffi:defcfun ("_ZN9Fl_Widget5labelE12Fl_LabeltypePKc" fl-w-idget-label-2) :void (this :pointer)
  (a fl-l-abeltype) (b :string))
 (cffi:defcfun ("_ZNK9Fl_Widget9labeltypeEv" fl-w-idget-labeltype) fl-l-abeltype (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget9labeltypeE12Fl_Labeltype" fl-w-idget-labeltype-1) :void
  (this :pointer) (a fl-l-abeltype))
 (cffi:defcfun ("_ZNK9Fl_Widget10labelcolorEv" fl-w-idget-labelcolor) fl-c-olor (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget10labelcolorEj" fl-w-idget-labelcolor-1) :void (this :pointer)
  (a :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Widget9labelfontEv" fl-w-idget-labelfont) fl-f-ont (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget9labelfontEh" fl-w-idget-labelfont-1) :void (this :pointer)
  (a uchar))
 (cffi:defcfun ("_ZNK9Fl_Widget9labelsizeEv" fl-w-idget-labelsize) uchar (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget9labelsizeEh" fl-w-idget-labelsize-1) :void (this :pointer)
  (a uchar))
 (cffi:defcfun ("_ZN9Fl_Widget5imageEv" fl-w-idget-image) :pointer (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget5imageEP8Fl_Image" fl-w-idget-image-1) :void (this :pointer)
  (a :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget5imageER8Fl_Image" fl-w-idget-image-2) :void (this :pointer)
  (a :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget7deimageEv" fl-w-idget-deimage) :pointer (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget7deimageEP8Fl_Image" fl-w-idget-deimage-1) :void (this :pointer)
  (a :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget7deimageER8Fl_Image" fl-w-idget-deimage-2) :void (this :pointer)
  (a :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget7tooltipEv" fl-w-idget-tooltip) :string (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget7tooltipEPKc" fl-w-idget-tooltip-1) :void (this :pointer)
  (t :string))
 (cffi:defcfun ("_ZNK9Fl_Widget8callbackEv" fl-w-idget-callback) fl-c-allback-p (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8callbackEPFvPS_PvES1_" fl-w-idget-callback-1) :void (this :pointer)
  (c :pointer) (p :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8callbackEPFvPS_PvE" fl-w-idget-callback-2) :void (this :pointer)
  (c :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8callbackEPFvPS_E" fl-w-idget-callback-3) :void (this :pointer)
  (c :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8callbackEPFvPS_lEl" fl-w-idget-callback-4) :void (this :pointer)
  (c :pointer) (p :long))
 (cffi:defcfun ("_ZNK9Fl_Widget9user_dataEv" fl-w-idget-user-data) :pointer (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget9user_dataEPv" fl-w-idget-user-data-1) :void (this :pointer)
  (v :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget8argumentEv" fl-w-idget-argument) :long (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8argumentEl" fl-w-idget-argument-1) :void (this :pointer) (v :long))
 (cffi:defcfun ("_ZNK9Fl_Widget4whenEv" fl-w-idget-when) fl-w-hen (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget4whenEh" fl-w-idget-when-1) :void (this :pointer) (i uchar))
 (cffi:defcfun ("_ZNK9Fl_Widget7visibleEv" fl-w-idget-visible) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget9visible_rEv" fl-w-idget-visible-r) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget4showEv" fl-w-idget-show) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget4hideEv" fl-w-idget-hide) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget11set_visibleEv" fl-w-idget-set-visible) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget13clear_visibleEv" fl-w-idget-clear-visible) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6activeEv" fl-w-idget-active) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget8active_rEv" fl-w-idget-active-r) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget8activateEv" fl-w-idget-activate) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget10deactivateEv" fl-w-idget-deactivate) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6outputEv" fl-w-idget-output) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget10set_outputEv" fl-w-idget-set-output) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget12clear_outputEv" fl-w-idget-clear-output) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget11takeseventsEv" fl-w-idget-takesevents) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget7changedEv" fl-w-idget-changed) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget11set_changedEv" fl-w-idget-set-changed) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget13clear_changedEv" fl-w-idget-clear-changed) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget10take_focusEv" fl-w-idget-take-focus) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget17set_visible_focusEv" fl-w-idget-set-visible-focus) :void
  (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget19clear_visible_focusEv" fl-w-idget-clear-visible-focus) :void
  (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget13visible_focusEi" fl-w-idget-visible-focus) :void (this :pointer)
  (v :int))
 (cffi:defcfun ("_ZN9Fl_Widget13visible_focusEv" fl-w-idget-visible-focus-1) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget16default_callbackEPS_Pv" fl-w-idget-default-callback) :void
  (arg1 :pointer) (arg2 :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget11do_callbackEv" fl-w-idget-do-callback) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget11do_callbackEPS_Pv" fl-w-idget-do-callback-1) :void (this :pointer)
  (o :pointer) (arg :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget11do_callbackEPS_l" fl-w-idget-do-callback-2) :void (this :pointer)
  (o :pointer) (arg :long))
 (cffi:defcfun ("_ZN9Fl_Widget13test_shortcutEv" fl-w-idget-test-shortcut) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget13test_shortcutEPKc" fl-w-idget-test-shortcut-1) :int (arg1 :string))
 (cffi:defcfun ("_ZNK9Fl_Widget8containsEPKS_" fl-w-idget-contains) :int (this :pointer)
  (arg1 :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6insideEPKS_" fl-w-idget-inside) :int (this :pointer) (o :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget6redrawEv" fl-w-idget-redraw) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget12redraw_labelEv" fl-w-idget-redraw-label) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6damageEv" fl-w-idget-damage) uchar (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget12clear_damageEh" fl-w-idget-clear-damage) :void (this :pointer)
  (c uchar))
 (cffi:defcfun ("_ZN9Fl_Widget6damageEh" fl-w-idget-damage-1) :void (this :pointer) (c uchar))
 (cffi:defcfun ("_ZN9Fl_Widget6damageEhiiii" fl-w-idget-damage-2) :void (this :pointer) (c uchar)
  (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :int))
 (cffi:defcfun ("_ZNK9Fl_Widget10draw_labelEiiii8Fl_Align" fl-w-idget-draw-label-2) :void
  (this :pointer) (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int) (arg5 fl-a-lign))
 (cffi:defcfun ("_ZN9Fl_Widget13measure_labelERiS0_" fl-w-idget-measure-label) :void
  (this :pointer) (xx :pointer) (yy :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6windowEv" fl-w-idget-window) :pointer (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Widget6color2Ev" fl-w-idget-color-2) fl-c-olor (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Widget6color2Ej" fl-w-idget-color-2-1) :void (this :pointer)
  (a :unsigned-int))
 (cffi:defcfun ("_ZN9Fl_Window11size_range_Ev" fl-w-indow-size-range-) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window10_Fl_WindowEv" fl-w-indow--f-l-w-indow) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_WindowaSERKS_" fl-w-indow-operator=) :pointer (this :pointer)
  (arg1 :pointer))
 (cl:defun fl-w-indow-draw (this) (vzn:virtual-funcall this 3 0 :pointer this :void))
 (cl:defun fl-w-indow-flush (this) (vzn:virtual-funcall this 8 0 :pointer this :void))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_WindowC1EiiiiPKc" fl-w-indow-new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-w-indow-new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-w-indow)))
    (fl-w-indow-new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_WindowC1EiiPKc" fl-w-indow-new-2-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :string))
  (cl:defun fl-w-indow-new-2 (arg1 arg2 arg3)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-w-indow))) (fl-w-indow-new-2- -pobj- arg1 arg2 arg3)
    -pobj-)))
 (cl:defun fl-w-indow-delete (this) (vzn:virtual-funcall this 0 :pointer this :void))
 (cl:defun fl-w-indow-handle (this arg1)
  (vzn:virtual-funcall this 4 0 :pointer this :int arg1 :int))
 (cl:defun fl-w-indow-resize (this arg1 arg2 arg3 arg4)
  (vzn:virtual-funcall this 5 0 :pointer this :int arg1 :int arg2 :int arg3 :int arg4 :void))
 (cffi:defcfun ("_ZN9Fl_Window6borderEi" fl-w-indow-border) :void (this :pointer) (b :int))
 (cffi:defcfun ("_ZN9Fl_Window12clear_borderEv" fl-w-indow-clear-border) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window6borderEv" fl-w-indow-border-1) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window12set_overrideEv" fl-w-indow-set-override) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window8overrideEv" fl-w-indow-override) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window9set_modalEv" fl-w-indow-set-modal) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window5modalEv" fl-w-indow-modal) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window13set_non_modalEv" fl-w-indow-set-non-modal) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window9non_modalEv" fl-w-indow-non-modal) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window7hotspotEiii" fl-w-indow-hotspot) :void (this :pointer) (x :int)
  (y :int) (offscreen :int))
 (cffi:defcfun ("_ZN9Fl_Window7hotspotEPK9Fl_Widgeti" fl-w-indow-hotspot-1) :void (this :pointer)
  (arg1 :pointer) (offscreen :int))
 (cffi:defcfun ("_ZN9Fl_Window7hotspotERK9Fl_Widgeti" fl-w-indow-hotspot-2) :void (this :pointer)
  (p :pointer) (offscreen :int))
 (cffi:defcfun ("_ZN9Fl_Window13free_positionEv" fl-w-indow-free-position) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window10size_rangeEiiiiiii" fl-w-indow-size-range) :void (this :pointer)
  (a :int) (b :int) (c :int) (d :int) (e :int) (f :int) (g :int))
 (cffi:defcfun ("_ZNK9Fl_Window5labelEv" fl-w-indow-label) :string (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window9iconlabelEv" fl-w-indow-iconlabel) :string (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window5labelEPKc" fl-w-indow-label-1) :void (this :pointer) (arg1 :string))
 (cffi:defcfun ("_ZN9Fl_Window9iconlabelEPKc" fl-w-indow-iconlabel-1) :void (this :pointer)
  (arg1 :string))
 (cffi:defcfun ("_ZN9Fl_Window5labelEPKcS1_" fl-w-indow-label-2) :void (this :pointer)
  (label :string) (iconlabel :string))
 (cffi:defcfun ("_ZN9Fl_Window10copy_labelEPKc" fl-w-indow-copy-label) :void (this :pointer)
  (a :string))
 (cffi:defcfun ("_ZNK9Fl_Window6xclassEv" fl-w-indow-xclass) :string (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window6xclassEPKc" fl-w-indow-xclass-1) :void (this :pointer) (c :string))
 (cffi:defcfun ("_ZNK9Fl_Window4iconEv" fl-w-indow-icon) :pointer (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window4iconEPKv" fl-w-indow-icon-1) :void (this :pointer) (ic :pointer))
 (cffi:defcfun ("_ZN9Fl_Window5shownEv" fl-w-indow-shown) :int (this :pointer))
 (cl:defun fl-w-indow-show (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun fl-w-indow-hide (this) (vzn:virtual-funcall this 10 0 :pointer this :void))
 (cffi:defcfun ("_ZN9Fl_Window4showEiPPc" fl-w-indow-show-1) :void (this :pointer) (arg1 :int)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN9Fl_Window10fullscreenEv" fl-w-indow-fullscreen) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window14fullscreen_offEiiii" fl-w-indow-fullscreen-off) :void
  (this :pointer) (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int))
 (cffi:defcfun ("_ZN9Fl_Window7iconizeEv" fl-w-indow-iconize) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window6x_rootEv" fl-w-indow-x-root) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Window6y_rootEv" fl-w-indow-y-root) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window7currentEv" fl-w-indow-current) :pointer)
 (cffi:defcfun ("_ZN9Fl_Window12make_currentEv" fl-w-indow-make-current) :void (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Window6cursorE9Fl_Cursor8Fl_ColorS1_" fl-w-indow-cursor) :void
  (this :pointer) (arg1 fl-c-ursor) (arg2 fl-c-olor) (arg3 fl-c-olor))
 (cffi:defcfun ("_ZN9Fl_Window14default_cursorE9Fl_Cursor8Fl_ColorS1_" fl-w-indow-default-cursor)
  :void (this :pointer) (arg1 fl-c-ursor) (arg2 fl-c-olor) (arg3 fl-c-olor))
 (cffi:defcfun ("_ZN9Fl_Window16default_callbackEPS_Pv" fl-w-indow-default-callback) :void
  (arg1 :pointer) (v :pointer))
 (cl:progn (cffi:defcfun ("_ZN8Fl_LabelC1Ev" fl-l-abel-new-1-) :void (this :pointer))
  (cl:defun fl-l-abel-new-1 ()
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-l-abel))) (fl-l-abel-new-1- -pobj-) -pobj-)))
 (cffi:defcfun ("_ZNK8Fl_Label4drawEiiii8Fl_Align" fl-l-abel-draw) :void (this :pointer)
  (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int) (arg5 fl-a-lign))
 (cffi:defcfun ("_ZNK8Fl_Label7measureERiS0_" fl-l-abel-measure) :void (this :pointer)
  (arg1 :pointer) (arg2 :pointer))
 (cl:progn (cffi:defcfun ("_ZN2FlC1Ev" fl-new-1-) :void (this :pointer))
  (cl:defun fl-new-1 () (cl:let ((-pobj- (cffi:foreign-alloc 'fl))) (fl-new-1- -pobj-) -pobj-)))
 (cffi:defcfun ("_ZN2Fl6damageEi" fl-damage) :void (d :int))
 (cffi:defcfun ("_ZN2Fl7versionEv" fl-version) :double)
 (cffi:defcfun ("_ZN2Fl3argEiPPcRi" fl-arg) :int (arg1 :int) (arg2 :pointer) (arg3 :pointer))
 (cffi:defcfun ("_ZN2Fl4argsEiPPcRiPFiiS1_S2_E" fl-args) :int (arg1 :int) (arg2 :pointer)
  (arg3 :pointer) (arg4 :pointer))
 (cffi:defcfun ("_ZN2Fl4argsEiPPc" fl-args-1) :void (arg1 :int) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl7displayEPKc" fl-display) :void (arg1 :string))
 (cffi:defcfun ("_ZN2Fl6visualEi" fl-visual) :int (arg1 :int))
 (cffi:defcfun ("_ZN2Fl9gl_visualEiPi" fl-gl-visual) :int (arg1 :int) (alist :pointer))
 (cffi:defcfun ("_ZN2Fl12own_colormapEv" fl-own-colormap) :void)
 (cffi:defcfun ("_ZN2Fl17get_system_colorsEv" fl-get-system-colors) :void)
 (cffi:defcfun ("_ZN2Fl10foregroundEhhh" fl-foreground) :void (arg1 uchar) (arg2 uchar)
  (arg3 uchar))
 (cffi:defcfun ("_ZN2Fl10backgroundEhhh" fl-background) :void (arg1 uchar) (arg2 uchar)
  (arg3 uchar))
 (cffi:defcfun ("_ZN2Fl11background2Ehhh" fl-background-2) :void (arg1 uchar) (arg2 uchar)
  (arg3 uchar))
 (cffi:defcfun ("_ZN2Fl6schemeEPKc" fl-scheme) :int (arg1 :string))
 (cffi:defcfun ("_ZN2Fl6schemeEv" fl-scheme-1) :string)
 (cffi:defcfun ("_ZN2Fl13reload_schemeEv" fl-reload-scheme) :int)
 (cffi:defcfun ("_ZN2Fl4waitEv" fl-wait) :int)
 (cffi:defcfun ("_ZN2Fl4waitEd" fl-wait-1) :double (time :double))
 (cffi:defcfun ("_ZN2Fl5checkEv" fl-check) :int) (cffi:defcfun ("_ZN2Fl5readyEv" fl-ready) :int)
 (cffi:defcfun ("_ZN2Fl3runEv" fl-run) :int)
 (cffi:defcfun ("_ZN2Fl9readqueueEv" fl-readqueue) :pointer)
 (cffi:defcfun ("_ZN2Fl11add_timeoutEdPFvPvES0_" fl-add-timeout) :void (t :double)
  (arg2 fl-t-imeout-h-andler) (arg3 :pointer))
 (cffi:defcfun ("_ZN2Fl14repeat_timeoutEdPFvPvES0_" fl-repeat-timeout) :void (t :double)
  (arg2 fl-t-imeout-h-andler) (arg3 :pointer))
 (cffi:defcfun ("_ZN2Fl11has_timeoutEPFvPvES0_" fl-has-timeout) :int (arg1 fl-t-imeout-h-andler)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl14remove_timeoutEPFvPvES0_" fl-remove-timeout) :void
  (arg1 fl-t-imeout-h-andler) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl9add_checkEPFvPvES0_" fl-add-check) :void (arg1 fl-t-imeout-h-andler)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl9has_checkEPFvPvES0_" fl-has-check) :int (arg1 fl-t-imeout-h-andler)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl12remove_checkEPFvPvES0_" fl-remove-check) :void (arg1 fl-t-imeout-h-andler)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl6add_fdEiiPFviPvES0_" fl-add-fd) :void (fd :int) (when :int) (cb :pointer)
  (arg4 :pointer))
 (cffi:defcfun ("_ZN2Fl6add_fdEiPFviPvES0_" fl-add-fd-1) :void (fd :int) (cb :pointer)
  (arg3 :pointer))
 (cffi:defcfun ("_ZN2Fl9remove_fdEii" fl-remove-fd) :void (arg1 :int) (when :int))
 (cffi:defcfun ("_ZN2Fl9remove_fdEi" fl-remove-fd-1) :void (arg1 :int))
 (cffi:defcfun ("_ZN2Fl8add_idleEPFvPvES0_" fl-add-idle) :void (cb :pointer) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl8has_idleEPFvPvES0_" fl-has-idle) :int (cb :pointer) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl11remove_idleEPFvPvES0_" fl-remove-idle) :void (cb :pointer)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl6damageEv" fl-damage-1) :int)
 (cffi:defcfun ("_ZN2Fl6redrawEv" fl-redraw) :void)
 (cffi:defcfun ("_ZN2Fl5flushEv" fl-flush) :void)
 (cffi:defcfun ("_ZN2Fl12first_windowEv" fl-first-window) :pointer)
 (cffi:defcfun ("_ZN2Fl12first_windowEP9Fl_Window" fl-first-window-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl11next_windowEPK9Fl_Window" fl-next-window) :pointer (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl5modalEv" fl-modal) :pointer)
 (cffi:defcfun ("_ZN2Fl4grabEv" fl-grab) :pointer)
 (cffi:defcfun ("_ZN2Fl4grabEP9Fl_Window" fl-grab-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl5eventEv" fl-event) :int)
 (cffi:defcfun ("_ZN2Fl7event_xEv" fl-event-x) :int)
 (cffi:defcfun ("_ZN2Fl7event_yEv" fl-event-y) :int)
 (cffi:defcfun ("_ZN2Fl12event_x_rootEv" fl-event-x-root) :int)
 (cffi:defcfun ("_ZN2Fl12event_y_rootEv" fl-event-y-root) :int)
 (cffi:defcfun ("_ZN2Fl8event_dxEv" fl-event-dx) :int)
 (cffi:defcfun ("_ZN2Fl8event_dyEv" fl-event-dy) :int)
 (cffi:defcfun ("_ZN2Fl9get_mouseERiS0_" fl-get-mouse) :void (arg1 :pointer) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl12event_clicksEv" fl-event-clicks) :int)
 (cffi:defcfun ("_ZN2Fl12event_clicksEi" fl-event-clicks-1) :void (i :int))
 (cffi:defcfun ("_ZN2Fl14event_is_clickEv" fl-event-is-click) :int)
 (cffi:defcfun ("_ZN2Fl14event_is_clickEi" fl-event-is-click-1) :void (i :int))
 (cffi:defcfun ("_ZN2Fl12event_buttonEv" fl-event-button) :int)
 (cffi:defcfun ("_ZN2Fl11event_stateEv" fl-event-state) :int)
 (cffi:defcfun ("_ZN2Fl11event_stateEi" fl-event-state-1) :int (i :int))
 (cffi:defcfun ("_ZN2Fl9event_keyEv" fl-event-key) :int)
 (cffi:defcfun ("_ZN2Fl9event_keyEi" fl-event-key-1) :int (arg1 :int))
 (cffi:defcfun ("_ZN2Fl7get_keyEi" fl-get-key) :int (arg1 :int))
 (cffi:defcfun ("_ZN2Fl10event_textEv" fl-event-text) :string)
 (cffi:defcfun ("_ZN2Fl12event_lengthEv" fl-event-length) :int)
 (cffi:defcfun ("_ZN2Fl7composeERi" fl-compose) :int (del :pointer))
 (cffi:defcfun ("_ZN2Fl13compose_resetEv" fl-compose-reset) :void)
 (cffi:defcfun ("_ZN2Fl12event_insideEiiii" fl-event-inside) :int (arg1 :int) (arg2 :int)
  (arg3 :int) (arg4 :int))
 (cffi:defcfun ("_ZN2Fl12event_insideEPK9Fl_Widget" fl-event-inside-1) :int (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl13test_shortcutEi" fl-test-shortcut) :int (arg1 :int))
 (cffi:defcfun ("_ZN2Fl6handleEiP9Fl_Window" fl-handle) :int (arg1 :int) (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl10belowmouseEv" fl-belowmouse) :pointer)
 (cffi:defcfun ("_ZN2Fl10belowmouseEP9Fl_Widget" fl-belowmouse-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl6pushedEv" fl-pushed) :pointer)
 (cffi:defcfun ("_ZN2Fl6pushedEP9Fl_Widget" fl-pushed-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl5focusEv" fl-focus) :pointer)
 (cffi:defcfun ("_ZN2Fl5focusEP9Fl_Widget" fl-focus-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl11add_handlerEPFiiE" fl-add-handler) :void (h :pointer))
 (cffi:defcfun ("_ZN2Fl14remove_handlerEPFiiE" fl-remove-handler) :void (h :pointer))
 (cffi:defcfun ("_ZN2Fl4copyEPKcii" fl-copy) :void (stuff :string) (len :int) (clipboard :int))
 (cffi:defcfun ("_ZN2Fl5pasteER9Fl_Widgeti" fl-paste) :void (receiver :pointer) (clipboard :int))
 (cffi:defcfun ("_ZN2Fl3dndEv" fl-dnd) :int)
 (cffi:defcfun ("_ZN2Fl15selection_ownerEv" fl-selection-owner) :pointer)
 (cffi:defcfun ("_ZN2Fl15selection_ownerEP9Fl_Widget" fl-selection-owner-1) :void (arg1 :pointer))
 (cffi:defcfun ("_ZN2Fl9selectionER9Fl_WidgetPKci" fl-selection) :void (owner :pointer)
  (arg2 :string) (len :int))
 (cffi:defcfun ("_ZN2Fl5pasteER9Fl_Widget" fl-paste-1) :void (receiver :pointer))
 (cffi:defcfun ("_ZN2Fl1xEv" fl-x) :int) (cffi:defcfun ("_ZN2Fl1yEv" fl-y) :int)
 (cffi:defcfun ("_ZN2Fl1wEv" fl-w) :int) (cffi:defcfun ("_ZN2Fl1hEv" fl-h) :int)
 (cffi:defcfun ("_ZN2Fl12screen_countEv" fl-screen-count) :int)
 (cffi:defcfun ("_ZN2Fl11screen_xywhERiS0_S0_S0_" fl-screen-xywh) :void (x :pointer) (y :pointer)
  (w :pointer) (h :pointer))
 (cffi:defcfun ("_ZN2Fl11screen_xywhERiS0_S0_S0_ii" fl-screen-xywh-1) :void (x :pointer)
  (y :pointer) (w :pointer) (h :pointer) (mx :int) (my :int))
 (cffi:defcfun ("_ZN2Fl11screen_xywhERiS0_S0_S0_i" fl-screen-xywh-2) :void (x :pointer)
  (y :pointer) (w :pointer) (h :pointer) (n :int))
 (cffi:defcfun ("_ZN2Fl9set_colorE8Fl_Colorhhh" fl-set-color) :void (arg1 fl-c-olor) (arg2 uchar)
  (arg3 uchar) (arg4 uchar))
 (cffi:defcfun ("_ZN2Fl9set_colorE8Fl_Colorj" fl-set-color-1) :void (arg1 fl-c-olor)
  (arg2 :unsigned-int))
 (cffi:defcfun ("_ZN2Fl9get_colorE8Fl_Color" fl-get-color) :unsigned-int (arg1 fl-c-olor))
 (cffi:defcfun ("_ZN2Fl9get_colorE8Fl_ColorRhS1_S1_" fl-get-color-1) :void (arg1 fl-c-olor)
  (arg2 :pointer) (arg3 :pointer) (arg4 :pointer))
 (cffi:defcfun ("_ZN2Fl10free_colorE8Fl_Colori" fl-free-color) :void (arg1 fl-c-olor)
  (overlay :int))
 (cffi:defcfun ("_ZN2Fl8get_fontE7Fl_Font" fl-get-font) :string (arg1 fl-f-ont))
 (cffi:defcfun ("_ZN2Fl13get_font_nameE7Fl_FontPi" fl-get-font-name) :string (arg1 fl-f-ont)
  (attributes :pointer))
 (cffi:defcfun ("_ZN2Fl14get_font_sizesE7Fl_FontRPi" fl-get-font-sizes) :int (arg1 fl-f-ont)
  (sizep :pointer))
 (cffi:defcfun ("_ZN2Fl8set_fontE7Fl_FontPKc" fl-set-font) :void (arg1 fl-f-ont) (arg2 :string))
 (cffi:defcfun ("_ZN2Fl8set_fontE7Fl_FontS0_" fl-set-font-1) :void (arg1 fl-f-ont) (arg2 fl-f-ont))
 (cffi:defcfun ("_ZN2Fl9set_fontsEPKc" fl-set-fonts) fl-f-ont (arg1 :string))
 (cffi:defcfun
  ("_ZN2Fl13set_labeltypeE12Fl_LabeltypePFvPK8Fl_Labeliiii8Fl_AlignEPFvS3_RiS7_E" fl-set-labeltype)
  :void (arg1 fl-l-abeltype) (arg2 :pointer) (arg3 :pointer))
 (cffi:defcfun ("_ZN2Fl13set_labeltypeE12Fl_LabeltypeS0_" fl-set-labeltype-1) :void
  (arg1 fl-l-abeltype) (from fl-l-abeltype))
 (cffi:defcfun ("_ZN2Fl11get_boxtypeE10Fl_Boxtype" fl-get-boxtype) :pointer (arg1 fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl11set_boxtypeE10Fl_BoxtypePFviiii8Fl_ColorEhhhh" fl-set-boxtype) :void
  (arg1 fl-b-oxtype) (arg2 :pointer) (arg3 uchar) (arg4 uchar) (arg5 uchar) (arg6 uchar))
 (cffi:defcfun ("_ZN2Fl11set_boxtypeE10Fl_BoxtypeS0_" fl-set-boxtype-1) :void (arg1 fl-b-oxtype)
  (from fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl6box_dxE10Fl_Boxtype" fl-box-dx) :int (arg1 fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl6box_dyE10Fl_Boxtype" fl-box-dy) :int (arg1 fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl6box_dwE10Fl_Boxtype" fl-box-dw) :int (arg1 fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl6box_dhE10Fl_Boxtype" fl-box-dh) :int (arg1 fl-b-oxtype))
 (cffi:defcfun ("_ZN2Fl15draw_box_activeEv" fl-draw-box-active) :int)
 (cffi:defcfun ("_ZN2Fl9set_abortEPFvPKczE" fl-set-abort) :void (f :pointer))
 (cffi:defcfun ("_ZN2Fl15default_atcloseEP9Fl_WindowPv" fl-default-atclose) :void (arg1 :pointer)
  (arg2 :pointer))
 (cffi:defcfun ("_ZN2Fl11set_atcloseEPFvP9Fl_WindowPvE" fl-set-atclose) :void (f :pointer))
 (cffi:defcfun ("_ZN2Fl11event_shiftEv" fl-event-shift) :int)
 (cffi:defcfun ("_ZN2Fl10event_ctrlEv" fl-event-ctrl) :int)
 (cffi:defcfun ("_ZN2Fl9event_altEv" fl-event-alt) :int)
 (cffi:defcfun ("_ZN2Fl13event_buttonsEv" fl-event-buttons) :int)
 (cffi:defcfun ("_ZN2Fl13event_button1Ev" fl-event-button-1) :int)
 (cffi:defcfun ("_ZN2Fl13event_button2Ev" fl-event-button-2) :int)
 (cffi:defcfun ("_ZN2Fl13event_button3Ev" fl-event-button-3) :int)
 (cffi:defcfun ("_ZN2Fl8set_idleEPFvvE" fl-set-idle) :void (cb :pointer))
 (cffi:defcfun ("_ZN2Fl4grabER9Fl_Window" fl-grab-2) :void (win :pointer))
 (cffi:defcfun ("_ZN2Fl7releaseEv" fl-release) :void)
 (cffi:defcfun ("_ZN2Fl13visible_focusEi" fl-visible-focus) :void (v :int))
 (cffi:defcfun ("_ZN2Fl13visible_focusEv" fl-visible-focus-1) :int)
 (cffi:defcfun ("_ZN2Fl12dnd_text_opsEi" fl-dnd-text-ops) :void (v :int))
 (cffi:defcfun ("_ZN2Fl12dnd_text_opsEv" fl-dnd-text-ops-1) :int)
 (cffi:defcfun ("_ZN2Fl4lockEv" fl-lock) :void) (cffi:defcfun ("_ZN2Fl6unlockEv" fl-unlock) :void)
 (cffi:defcfun ("_ZN2Fl5awakeEPv" fl-awake) :void (message :pointer))
 (cffi:defcfun ("_ZN2Fl14thread_messageEv" fl-thread-message) :pointer)
 (cffi:defcfun ("_ZN2Fl13delete_widgetEP9Fl_Widget" fl-delete-widget) :void (w :pointer))
 (cffi:defcfun ("_ZN2Fl18do_widget_deletionEv" fl-do-widget-deletion) :void)
 (cffi:defcfun ("_ZN8Fl_Group10navigationEi" fl-g-roup-navigation) :int (this :pointer)
  (arg1 :int))
 (cffi:defcfun ("_ZN8Fl_GroupaSERKS_" fl-g-roup-operator=) :pointer (this :pointer)
  (arg1 :pointer))
 (cl:defun fl-g-roup-draw (this) (vzn:virtual-funcall this 3 0 :pointer this :void))
 (cffi:defcfun ("_ZNK8Fl_Group10draw_childER9Fl_Widget" fl-g-roup-draw-child) :void (this :pointer)
  (arg1 :pointer))
 (cffi:defcfun ("_ZN8Fl_Group13draw_childrenEv" fl-g-roup-draw-children) :void (this :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group18draw_outside_labelERK9Fl_Widget" fl-g-roup-draw-outside-label)
  :void (this :pointer) (arg1 :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group12update_childER9Fl_Widget" fl-g-roup-update-child) :void
  (this :pointer) (arg1 :pointer))
 (cffi:defcfun ("_ZN8Fl_Group5sizesEv" fl-g-roup-sizes) :pointer (this :pointer))
 (cl:defun fl-g-roup-handle (this arg1)
  (vzn:virtual-funcall this 4 0 :pointer this :int arg1 :int))
 (cffi:defcfun ("_ZN8Fl_Group5beginEv" fl-g-roup-begin) :void (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group3endEv" fl-g-roup-end) :void (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group7currentEv" fl-g-roup-current) :pointer)
 (cffi:defcfun ("_ZN8Fl_Group7currentEPS_" fl-g-roup-current-1) :void (g :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group8childrenEv" fl-g-roup-children) :int (this :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group5childEi" fl-g-roup-child) :pointer (this :pointer) (n :int))
 (cffi:defcfun ("_ZNK8Fl_Group4findEPK9Fl_Widget" fl-g-roup-find) :int (this :pointer)
  (arg1 :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group4findERK9Fl_Widget" fl-g-roup-find-1) :int (this :pointer)
  (o :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group5arrayEv" fl-g-roup-array) :pointer (this :pointer))
 (cl:defun fl-g-roup-resize (this arg1 arg2 arg3 arg4)
  (vzn:virtual-funcall this 5 0 :pointer this :int arg1 :int arg2 :int arg3 :int arg4 :void))
 (cl:progn
  (cffi:defcfun ("_ZN8Fl_GroupC1EiiiiPKc" fl-g-roup-new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-g-roup-new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-g-roup)))
    (fl-g-roup-new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cl:defun fl-g-roup-delete (this) (vzn:virtual-funcall this 7 0 :pointer this :void))
 (cffi:defcfun ("_ZN8Fl_Group3addER9Fl_Widget" fl-g-roup-add) :void (this :pointer)
  (arg1 :pointer))
 (cffi:defcfun ("_ZN8Fl_Group3addEP9Fl_Widget" fl-g-roup-add-1) :void (this :pointer) (o :pointer))
 (cffi:defcfun ("_ZN8Fl_Group6insertER9Fl_Widgeti" fl-g-roup-insert) :void (this :pointer)
  (arg1 :pointer) (i :int))
 (cffi:defcfun ("_ZN8Fl_Group6insertER9Fl_WidgetPS0_" fl-g-roup-insert-1) :void (this :pointer)
  (o :pointer) (before :pointer))
 (cffi:defcfun ("_ZN8Fl_Group6removeER9Fl_Widget" fl-g-roup-remove) :void (this :pointer)
  (arg1 :pointer))
 (cffi:defcfun ("_ZN8Fl_Group6removeEP9Fl_Widget" fl-g-roup-remove-1) :void (this :pointer)
  (o :pointer))
 (cffi:defcfun ("_ZN8Fl_Group5clearEv" fl-g-roup-clear) :void (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group9resizableER9Fl_Widget" fl-g-roup-resizable) :void (this :pointer)
  (o :pointer))
 (cffi:defcfun ("_ZN8Fl_Group9resizableEP9Fl_Widget" fl-g-roup-resizable-1) :void (this :pointer)
  (o :pointer))
 (cffi:defcfun ("_ZNK8Fl_Group9resizableEv" fl-g-roup-resizable-2) :pointer (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group13add_resizableER9Fl_Widget" fl-g-roup-add-resizable) :void
  (this :pointer) (o :pointer))
 (cffi:defcfun ("_ZN8Fl_Group10init_sizesEv" fl-g-roup-init-sizes) :void (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group5focusEP9Fl_Widget" fl-g-roup-focus) :void (this :pointer)
  (o :pointer))
 (cffi:defcfun ("_ZN8Fl_Group17_ddfdesign_kludgeEv" fl-g-roup--ddfdesign-kludge) :pointer
  (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Group9forms_endEv" fl-g-roup-forms-end) :void (this :pointer))
 (cl:defun fl-b-utton-delete (this) (vzn:virtual-funcall this 7 0 :pointer this :void))
 (cl:defun fl-b-utton-draw (this) (vzn:virtual-funcall this 3 0 :pointer this :void))
 (cl:defun fl-b-utton-handle (this arg1)
  (vzn:virtual-funcall this 4 0 :pointer this :int arg1 :int))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_ButtonC1EiiiiPKc" fl-b-utton-new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-b-utton-new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-b-utton)))
    (fl-b-utton-new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cffi:defcfun ("_ZN9Fl_Button5valueEi" fl-b-utton-value) :int (this :pointer) (arg1 :int))
 (cffi:defcfun ("_ZNK9Fl_Button5valueEv" fl-b-utton-value-1) :char (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button3setEv" fl-b-utton-set) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button5clearEv" fl-b-utton-clear) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button7setonlyEv" fl-b-utton-setonly) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Button8shortcutEv" fl-b-utton-shortcut) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button8shortcutEi" fl-b-utton-shortcut-1) :void (this :pointer) (s :int))
 (cffi:defcfun ("_ZNK9Fl_Button8down_boxEv" fl-b-utton-down-box) fl-b-oxtype (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button8down_boxE10Fl_Boxtype" fl-b-utton-down-box-1) :void (this :pointer)
  (b fl-b-oxtype))
 (cffi:defcfun ("_ZN9Fl_Button8shortcutEPKc" fl-b-utton-shortcut-2) :void (this :pointer)
  (s :string))
 (cffi:defcfun ("_ZNK9Fl_Button10down_colorEv" fl-b-utton-down-color) fl-c-olor (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Button10down_colorEj" fl-b-utton-down-color-1) :void (this :pointer)
  (c :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Input_6expandEPKcPc" fl-i-nput--expand) :string (this :pointer)
  (arg1 :string) (arg2 :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_9expandposEPKcS1_S1_Pi" fl-i-nput--expandpos) :double
  (this :pointer) (arg1 :string) (arg2 :string) (arg3 :string) (arg4 :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_14minimal_updateEii" fl-i-nput--minimal-update) :void (this :pointer)
  (arg1 :int) (arg2 :int))
 (cffi:defcfun ("_ZN9Fl_Input_14minimal_updateEi" fl-i-nput--minimal-update-1) :void
  (this :pointer) (p :int))
 (cffi:defcfun ("_ZN9Fl_Input_13put_in_bufferEi" fl-i-nput--put-in-buffer) :void (this :pointer)
  (newsize :int))
 (cffi:defcfun ("_ZNK9Fl_Input_7setfontEv" fl-i-nput--setfont) :void (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_10word_startEi" fl-i-nput--word-start) :int (this :pointer)
  (i :int))
 (cffi:defcfun ("_ZNK9Fl_Input_8word_endEi" fl-i-nput--word-end) :int (this :pointer) (i :int))
 (cffi:defcfun ("_ZNK9Fl_Input_10line_startEi" fl-i-nput--line-start) :int (this :pointer)
  (i :int))
 (cffi:defcfun ("_ZNK9Fl_Input_8line_endEi" fl-i-nput--line-end) :int (this :pointer) (i :int))
 (cffi:defcfun ("_ZN9Fl_Input_8drawtextEiiii" fl-i-nput--drawtext) :void (this :pointer)
  (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int))
 (cffi:defcfun ("_ZN9Fl_Input_16up_down_positionEii" fl-i-nput--up-down-position) :int
  (this :pointer) (arg1 :int) (keepmark :int))
 (cffi:defcfun ("_ZN9Fl_Input_12handle_mouseEiiiii" fl-i-nput--handle-mouse) :void (this :pointer)
  (arg1 :int) (arg2 :int) (arg3 :int) (arg4 :int) (keepmark :int))
 (cffi:defcfun ("_ZN9Fl_Input_10handletextEiiiii" fl-i-nput--handletext) :int (this :pointer)
  (e :int) (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :int))
 (cffi:defcfun ("_ZN9Fl_Input_17maybe_do_callbackEv" fl-i-nput--maybe-do-callback) :void
  (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_7xscrollEv" fl-i-nput--xscroll) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_7yscrollEv" fl-i-nput--yscroll) :int (this :pointer))
 (cl:defun fl-i-nput--resize (this arg1 arg2 arg3 arg4)
  (vzn:virtual-funcall this 5 0 :pointer this :int arg1 :int arg2 :int arg3 :int arg4 :void))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_Input_C1EiiiiPKc" fl-i-nput--new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-i-nput--new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-i-nput-)))
    (fl-i-nput--new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cl:defun fl-i-nput--delete (this) (vzn:virtual-funcall this 7 0 :pointer this :void))
 (cffi:defcfun ("_ZN9Fl_Input_5valueEPKc" fl-i-nput--value) :int (this :pointer) (arg1 :string))
 (cffi:defcfun ("_ZN9Fl_Input_5valueEPKci" fl-i-nput--value-1) :int (this :pointer) (arg1 :string)
  (arg2 :int))
 (cffi:defcfun ("_ZN9Fl_Input_12static_valueEPKc" fl-i-nput--static-value) :int (this :pointer)
  (arg1 :string))
 (cffi:defcfun ("_ZN9Fl_Input_12static_valueEPKci" fl-i-nput--static-value-1) :int (this :pointer)
  (arg1 :string) (arg2 :int))
 (cffi:defcfun ("_ZNK9Fl_Input_5valueEv" fl-i-nput--value-2) :string (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_5indexEi" fl-i-nput--index) :char (this :pointer) (i :int))
 (cffi:defcfun ("_ZNK9Fl_Input_4sizeEv" fl-i-nput--size) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_4sizeEii" fl-i-nput--size-1) :void (this :pointer) (W :int) (H :int))
 (cffi:defcfun ("_ZNK9Fl_Input_12maximum_sizeEv" fl-i-nput--maximum-size) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_12maximum_sizeEi" fl-i-nput--maximum-size-1) :void (this :pointer)
  (m :int))
 (cffi:defcfun ("_ZNK9Fl_Input_8positionEv" fl-i-nput--position) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_4markEv" fl-i-nput--mark) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_8positionEii" fl-i-nput--position-1) :int (this :pointer) (p :int)
  (m :int))
 (cffi:defcfun ("_ZN9Fl_Input_8positionEi" fl-i-nput--position-2) :int (this :pointer) (p :int))
 (cffi:defcfun ("_ZN9Fl_Input_4markEi" fl-i-nput--mark-1) :int (this :pointer) (m :int))
 (cffi:defcfun ("_ZN9Fl_Input_7replaceEiiPKci" fl-i-nput--replace) :int (this :pointer) (arg1 :int)
  (arg2 :int) (arg3 :string) (arg4 :int))
 (cffi:defcfun ("_ZN9Fl_Input_3cutEv" fl-i-nput--cut) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_3cutEi" fl-i-nput--cut-1) :int (this :pointer) (n :int))
 (cffi:defcfun ("_ZN9Fl_Input_3cutEii" fl-i-nput--cut-2) :int (this :pointer) (a :int) (b :int))
 (cffi:defcfun ("_ZN9Fl_Input_6insertEPKci" fl-i-nput--insert) :int (this :pointer) (t :string)
  (l :int))
 (cffi:defcfun ("_ZN9Fl_Input_4copyEi" fl-i-nput--copy) :int (this :pointer) (clipboard :int))
 (cffi:defcfun ("_ZN9Fl_Input_4undoEv" fl-i-nput--undo) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_9copy_cutsEv" fl-i-nput--copy-cuts) :int (this :pointer))
 (cffi:defcfun ("_ZNK9Fl_Input_8textfontEv" fl-i-nput--textfont) fl-f-ont (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_8textfontEh" fl-i-nput--textfont-1) :void (this :pointer) (s uchar))
 (cffi:defcfun ("_ZNK9Fl_Input_8textsizeEv" fl-i-nput--textsize) uchar (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_8textsizeEh" fl-i-nput--textsize-1) :void (this :pointer) (s uchar))
 (cffi:defcfun ("_ZNK9Fl_Input_9textcolorEv" fl-i-nput--textcolor) fl-c-olor (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_9textcolorEj" fl-i-nput--textcolor-1) :void (this :pointer)
  (n :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Input_12cursor_colorEv" fl-i-nput--cursor-color) fl-c-olor
  (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_12cursor_colorEj" fl-i-nput--cursor-color-1) :void (this :pointer)
  (n :unsigned-int))
 (cffi:defcfun ("_ZNK9Fl_Input_10input_typeEv" fl-i-nput--input-type) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_10input_typeEi" fl-i-nput--input-type-1) :void (this :pointer)
  (t :int))
 (cffi:defcfun ("_ZNK9Fl_Input_8readonlyEv" fl-i-nput--readonly) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_8readonlyEi" fl-i-nput--readonly-1) :void (this :pointer) (b :int))
 (cffi:defcfun ("_ZNK9Fl_Input_4wrapEv" fl-i-nput--wrap) :int (this :pointer))
 (cffi:defcfun ("_ZN9Fl_Input_4wrapEi" fl-i-nput--wrap-1) :void (this :pointer) (b :int))
 (cl:defun fl-i-nput-delete (this) (vzn:virtual-funcall this 7 0 :pointer this :void))
 (cffi:defcfun ("_ZN8Fl_Input10handle_keyEv" fl-i-nput-handle-key) :int (this :pointer))
 (cffi:defcfun ("_ZN8Fl_Input14shift_positionEi" fl-i-nput-shift-position) :int (this :pointer)
  (p :int))
 (cffi:defcfun ("_ZN8Fl_Input22shift_up_down_positionEi" fl-i-nput-shift-up-down-position) :int
  (this :pointer) (p :int))
 (cffi:defcfun ("_ZN8Fl_Input12handle_mouseEi" fl-i-nput-handle-mouse) :void (this :pointer)
  (keepmark :int))
 (cl:defun fl-i-nput-draw (this) (vzn:virtual-funcall this 3 0 :pointer this :void))
 (cl:defun fl-i-nput-handle (this arg1)
  (vzn:virtual-funcall this 4 0 :pointer this :int arg1 :int))
 (cl:progn
  (cffi:defcfun ("_ZN8Fl_InputC1EiiiiPKc" fl-i-nput-new-1-) :void (this :pointer) (arg1 :int)
   (arg2 :int) (arg3 :int) (arg4 :int) (arg5 :string))
  (cl:defun fl-i-nput-new-1 (arg1 arg2 arg3 arg4 arg5)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-i-nput)))
    (fl-i-nput-new-1- -pobj- arg1 arg2 arg3 arg4 arg5) -pobj-)))
 (cl:defun fl-o-utput-delete (this) (vzn:virtual-funcall this 7 0 :pointer this :void))
 (cl:progn
  (cffi:defcfun ("_ZN9Fl_OutputC1EiiiiPKc" fl-o-utput-new-1-) :void (this :pointer) (X :int)
   (Y :int) (W :int) (H :int) (l :string))
  (cl:defun fl-o-utput-new-1 (X Y W H l)
   (cl:let ((-pobj- (cffi:foreign-alloc 'fl-o-utput))) (fl-o-utput-new-1- -pobj- X Y W H l)
    -pobj-)))
 (cffi:defcfun ("_Z15fl_old_shortcutPKc" fl-old-shortcut) :int (arg1 :string))
 (cl:defconstant +fl-window+ 240) (cl:defconstant +fl-double-window+ 241)
 (cl:defconstant +fl-normal-button+ 0) (cl:defconstant +fl-toggle-button+ 1)
 (cl:defconstant +fl-hidden-button+ 3))
