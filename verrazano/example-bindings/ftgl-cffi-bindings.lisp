;;; WARNING: This is a generated file, editing it is not advised!
(in-package :cl-user)
(asdf:operate 'asdf:load-op :verrazano-runtime)
(DEFPACKAGE :FTGL-CFFI-BINDINGS (:USE :CFFI) (:NICKNAMES)
            (:EXPORT "FTGLP-IXMAP-FONT-M-AKE-GLYPH" "FTGLP-IXMAP-FONT-R-ENDER-1"
             "FTGLP-IXMAP-FONT-R-ENDER" "FTGLP-IXMAP-FONT-DELETE" "FTGLP-IXMAP-FONT-NEW-2"
             "FTGLP-IXMAP-FONT-NEW-2-" "FTGLP-IXMAP-FONT-NEW-1" "FTGLP-IXMAP-FONT-NEW-1-"
             "FTGLT-EXTURE-FONT-C-REATE-TEXTURE" "FTGLT-EXTURE-FONT-C-ALCULATE-TEXTURE-SIZE"
             "FTGLT-EXTURE-FONT-M-AKE-GLYPH" "FTGLT-EXTURE-FONT-R-ENDER-1"
             "FTGLT-EXTURE-FONT-R-ENDER" "FTGLT-EXTURE-FONT-F-ACE-SIZE" "FTGLT-EXTURE-FONT-DELETE"
             "FTGLT-EXTURE-FONT-NEW-2" "FTGLT-EXTURE-FONT-NEW-2-" "FTGLT-EXTURE-FONT-NEW-1"
             "FTGLT-EXTURE-FONT-NEW-1-" "FTGLB-ITMAP-FONT-M-AKE-GLYPH" "FTGLB-ITMAP-FONT-R-ENDER-1"
             "FTGLB-ITMAP-FONT-R-ENDER" "FTGLB-ITMAP-FONT-DELETE" "FTGLB-ITMAP-FONT-NEW-2"
             "FTGLB-ITMAP-FONT-NEW-2-" "FTGLB-ITMAP-FONT-NEW-1" "FTGLB-ITMAP-FONT-NEW-1-"
             "FTGLP-OLYGON-FONT-M-AKE-GLYPH" "FTGLP-OLYGON-FONT-DELETE" "FTGLP-OLYGON-FONT-NEW-2"
             "FTGLP-OLYGON-FONT-NEW-2-" "FTGLP-OLYGON-FONT-NEW-1" "FTGLP-OLYGON-FONT-NEW-1-"
             "FTGLO-UTLINE-FONT-M-AKE-GLYPH" "FTGLO-UTLINE-FONT-R-ENDER-1"
             "FTGLO-UTLINE-FONT-R-ENDER" "FTGLO-UTLINE-FONT-DELETE" "FTGLO-UTLINE-FONT-NEW-2"
             "FTGLO-UTLINE-FONT-NEW-2-" "FTGLO-UTLINE-FONT-NEW-1" "FTGLO-UTLINE-FONT-NEW-1-"
             "FTF-ONT-C-HECK-GLYPH" "FTF-ONT-M-AKE-GLYPH" "FTF-ONT-E-RROR" "FTF-ONT-R-ENDER-1"
             "FTF-ONT-R-ENDER" "FTF-ONT-A-DVANCE-1" "FTF-ONT-A-DVANCE" "FTF-ONT-BB-OX-1"
             "FTF-ONT-BB-OX" "FTF-ONT-L-INE-HEIGHT" "FTF-ONT-D-ESCENDER" "FTF-ONT-A-SCENDER"
             "FTF-ONT-U-SE-DISPLAY-LIST" "FTF-ONT-D-EPTH" "FTF-ONT-F-ACE-SIZE-1"
             "FTF-ONT-F-ACE-SIZE" "FTF-ONT-C-HAR-MAP-LIST" "FTF-ONT-C-HAR-MAP-COUNT"
             "FTF-ONT-C-HAR-MAP" "FTF-ONT-A-TTACH-1" "FTF-ONT-A-TTACH" "FTF-ONT-DELETE"
             "FTF-ONT-NEW-2" "FTF-ONT-NEW-2-" "FTF-ONT-NEW-1" "FTF-ONT-NEW-1-" "FTF-ACE-E-RROR"
             "FTF-ACE-G-LYPH-COUNT" "FTF-ACE-G-LYPH" "FTF-ACE-K-ERN-ADVANCE"
             "FTF-ACE-C-HAR-MAP-LIST" "FTF-ACE-C-HAR-MAP-COUNT" "FTF-ACE-S-IZE" "FTF-ACE-F-ACE"
             "FTF-ACE-A-TTACH-1" "FTF-ACE-A-TTACH" "FTF-ACE-DELETE" "FTF-ACE-NEW-2"
             "FTF-ACE-NEW-2-" "FTF-ACE-NEW-1" "FTF-ACE-NEW-1-" "FTS-IZE-E-RROR"
             "FTS-IZE-U-NDERLINE" "FTS-IZE-W-IDTH" "FTS-IZE-H-EIGHT" "FTS-IZE-D-ESCENDER"
             "FTS-IZE-A-SCENDER" "FTS-IZE-C-HAR-SIZE-1" "FTS-IZE-C-HAR-SIZE" "FTS-IZE-DELETE"
             "FTS-IZE-NEW-1" "FTS-IZE-NEW-1-" "FTP-OINT-Z-1" "FTP-OINT-Y-1" "FTP-OINT-X-1"
             "FTP-OINT-Z" "FTP-OINT-Y" "FTP-OINT-X" "FTP-OINT-TO-ANONYMOUS-3717"
             "FTP-OINT-OPERATOR*" "FTP-OINT-OPERATOR+" "FTP-OINT-OPERATOR+=" "FTP-OINT-NEW-2"
             "FTP-OINT-NEW-2-" "FTP-OINT-NEW-1" "FTP-OINT-NEW-1-" "FT-G-LYPH-F-ORMAT-"
             "FT-E-NCODING-" "FTT-EXTURE-GLYPH" "FTG-LYPH" "FTG-LYPH-CONTAINER" "FT-F-ACE-REC-"
             "FT-F-ACE-I-NTERNAL-REC-" "FT-L-IST-REC-" "FT-L-IST-NODE-REC-" "FT-S-TREAM-REC-"
             "FT-S-TREAM-DESC-" "FT-M-EMORY-REC-" "FT-D-RIVER-REC-" "FT-S-IZE-REC-"
             "FT-S-IZE-I-NTERNAL-REC-" "FT-S-IZE-M-ETRICS-" "FT-G-LYPH-SLOT-REC-"
             "FT-S-LOT-I-NTERNAL-REC-" "FT-S-UB-GLYPH-REC-" "FT-O-UTLINE-" "FT-B-ITMAP-"
             "FT-G-LYPH-M-ETRICS-" "FT-L-IBRARY-REC-" "FT-BB-OX-" "FT-G-ENERIC-"
             "FT-C-HAR-MAP-REC-" "FT-B-ITMAP-S-IZE-" "FT-V-ECTOR-" "GL-UINT" "GL-SIZEI" "SIZE-T"
             "FT-E-RROR" "FT-F-ACE-I-NTERNAL" "FT-L-IST-NODE" "FT-L-IST-REC"
             "FT-S-TREAM-C-LOSE-FUNC" "FT-S-TREAM-I-OF-UNC" "FT-S-TREAM-DESC" "FT-S-TREAM"
             "FT-R-EALLOC-F-UNC" "FT-F-REE-F-UNC" "FT-A-LLOC-F-UNC" "FT-M-EMORY" "FT-D-RIVER"
             "FT-S-IZE-I-NTERNAL" "FT-S-IZE-M-ETRICS" "FT-S-IZE" "FT-S-LOT-I-NTERNAL"
             "FT-S-UB-GLYPH" "FT-O-UTLINE" "FT-B-ITMAP" "FT-G-LYPH-F-ORMAT" "FT-F-IXED"
             "FT-G-LYPH-M-ETRICS" "FT-UI-NT" "FT-L-IBRARY" "FT-G-LYPH-SLOT" "FT-BB-OX"
             "FT-G-ENERIC-F-INALIZER" "FT-G-ENERIC" "FT-US-HORT" "FT-E-NCODING" "FT-C-HAR-MAP"
             "FT-S-HORT" "FT-B-ITMAP-S-IZE" "FT-I-NT" "FT-S-TRING" "FT-L-ONG" "FT-F-ACE" "FT-P-OS"
             "FT-V-ECTOR" "FTGL-DOUBLE"))

(in-package :FTGL-CFFI-BINDINGS)
(cffi::defctype* ftgl-double :double)
(cffi:defcstruct ftp-oint (data :char :count 24))
(cffi::defctype* ft-v-ector ft-v-ector-)
(cffi::defctype* ft-p-os :long)
(cffi:defcstruct ft-v-ector- (x ft-p-os) (y ft-p-os))
(cffi::defctype* ft-f-ace :pointer)
(cffi::defctype* ft-l-ong :long)
(cffi::defctype* ft-s-tring :char)
(cffi::defctype* ft-i-nt :int)
(cffi::defctype* ft-b-itmap-s-ize ft-b-itmap-s-ize-)
(cffi::defctype* ft-s-hort :short)
(cffi:defcstruct ft-b-itmap-s-ize- (height ft-s-hort) (width ft-s-hort) (size ft-p-os)
 (x-ppem ft-p-os) (y-ppem ft-p-os))
(cffi::defctype* ft-c-har-map :pointer)
(cffi::defctype* ft-e-ncoding ft-e-ncoding-)
(cffi:defcenum ft-e-ncoding- (:ft-encoding-none 0) (:ft-encoding-ms-symbol 1937337698)
 (:ft-encoding-unicode 1970170211) (:ft-encoding-ms-sjis 1936353651)
 (:ft-encoding-ms-gb-2312 1734484000) (:ft-encoding-ms-big-5 1651074869)
 (:ft-encoding-ms-wansung 2002873971) (:ft-encoding-ms-johab 1785686113)
 (:ft-encoding-adobe-standard 1094995778) (:ft-encoding-adobe-expert 1094992453)
 (:ft-encoding-adobe-custom 1094992451) (:ft-encoding-adobe-latin-1 1818326065)
 (:ft-encoding-old-latin-2 1818326066) (:ft-encoding-apple-roman 1634889070))
(cffi::defctype* ft-us-hort :short)
(cffi:defcstruct ft-c-har-map-rec- (face ft-f-ace) (encoding ft-e-ncoding) (platform-id ft-us-hort)
 (encoding-id ft-us-hort))
(cffi::defctype* ft-g-eneric ft-g-eneric-)
(cffi::defctype* ft-g-eneric-f-inalizer :pointer)
(cffi:defcstruct ft-g-eneric- (data :pointer) (finalizer ft-g-eneric-f-inalizer))
(cffi::defctype* ft-bb-ox ft-bb-ox-)
(cffi:defcstruct ft-bb-ox- (xm-in ft-p-os) (ym-in ft-p-os) (xm-ax ft-p-os) (ym-ax ft-p-os))
(cffi::defctype* ft-g-lyph-slot :pointer)
(cffi::defctype* ft-l-ibrary :pointer)
(cffi:defcstruct ft-l-ibrary-rec-)
(cffi::defctype* ft-ui-nt :unsigned-int)
(cffi::defctype* ft-g-lyph-m-etrics ft-g-lyph-m-etrics-)
(cffi:defcstruct ft-g-lyph-m-etrics- (width ft-p-os) (height ft-p-os) (hori-bearing-x ft-p-os)
 (hori-bearing-y ft-p-os) (hori-advance ft-p-os) (vert-bearing-x ft-p-os) (vert-bearing-y ft-p-os)
 (vert-advance ft-p-os))
(cffi::defctype* ft-f-ixed :long)
(cffi::defctype* ft-g-lyph-f-ormat ft-g-lyph-f-ormat-)
(cffi:defcenum ft-g-lyph-f-ormat- (:ft-glyph-format-none 0) (:ft-glyph-format-composite 1668246896)
 (:ft-glyph-format-bitmap 1651078259) (:ft-glyph-format-outline 1869968492)
 (:ft-glyph-format-plotter 1886154612))
(cffi::defctype* ft-b-itmap ft-b-itmap-)
(cffi:defcstruct ft-b-itmap- (rows :int) (width :int) (pitch :int) (buffer :pointer)
 (num-grays :short) (pixel-mode :char) (palette-mode :char) (palette :pointer))
(cffi::defctype* ft-o-utline ft-o-utline-)
(cffi:defcstruct ft-o-utline- (n-contours :short) (n-points :short) (points :pointer)
 (tags :pointer) (contours :pointer) (flags :int))
(cffi::defctype* ft-s-ub-glyph :pointer)
(cffi:defcstruct ft-s-ub-glyph-rec-)
(cffi::defctype* ft-s-lot-i-nternal :pointer)
(cffi:defcstruct ft-s-lot-i-nternal-rec-)
(cffi:defcstruct ft-g-lyph-slot-rec- (library ft-l-ibrary) (face ft-f-ace) (next ft-g-lyph-slot)
 (reserved ft-ui-nt) (generic ft-g-eneric) (metrics ft-g-lyph-m-etrics)
 (linear-hori-advance ft-f-ixed) (linear-vert-advance ft-f-ixed) (advance ft-v-ector)
 (format ft-g-lyph-f-ormat) (bitmap ft-b-itmap) (bitmap-left ft-i-nt) (bitmap-top ft-i-nt)
 (outline ft-o-utline) (num-subglyphs ft-ui-nt) (subglyphs ft-s-ub-glyph) (control-data :pointer)
 (control-len :long) (lsb-delta ft-p-os) (rsb-delta ft-p-os) (other :pointer)
 (internal ft-s-lot-i-nternal))
(cffi::defctype* ft-s-ize :pointer)
(cffi::defctype* ft-s-ize-m-etrics ft-s-ize-m-etrics-)
(cffi:defcstruct ft-s-ize-m-etrics- (x-ppem ft-us-hort) (y-ppem ft-us-hort) (x-scale ft-f-ixed)
 (y-scale ft-f-ixed) (ascender ft-p-os) (descender ft-p-os) (height ft-p-os) (max-advance ft-p-os))
(cffi::defctype* ft-s-ize-i-nternal :pointer)
(cffi:defcstruct ft-s-ize-i-nternal-rec-)
(cffi:defcstruct ft-s-ize-rec- (face ft-f-ace) (generic ft-g-eneric) (metrics ft-s-ize-m-etrics)
 (internal ft-s-ize-i-nternal))
(cffi::defctype* ft-d-river :pointer)
(cffi:defcstruct ft-d-river-rec-)
(cffi::defctype* ft-m-emory :pointer)
(cffi::defctype* ft-a-lloc-f-unc :pointer)
(cffi::defctype* ft-f-ree-f-unc :pointer)
(cffi::defctype* ft-r-ealloc-f-unc :pointer)
(cffi:defcstruct ft-m-emory-rec- (user :pointer) (alloc ft-a-lloc-f-unc) (free ft-f-ree-f-unc)
 (realloc ft-r-ealloc-f-unc))
(cffi::defctype* ft-s-tream :pointer)
(cffi::defctype* ft-s-tream-desc ft-s-tream-desc-)
(cffi:defcstruct ft-s-tream-desc- (value :long) (pointer :pointer))
(cffi::defctype* ft-s-tream-i-of-unc :pointer)
(cffi::defctype* ft-s-tream-c-lose-func :pointer)
(cffi:defcstruct ft-s-tream-rec- (base :pointer) (size :unsigned-long) (pos :unsigned-long)
 (descriptor ft-s-tream-desc) (pathname ft-s-tream-desc) (read ft-s-tream-i-of-unc)
 (close ft-s-tream-c-lose-func) (memory ft-m-emory) (cursor :pointer) (limit :pointer))
(cffi::defctype* ft-l-ist-rec ft-l-ist-rec-)
(cffi::defctype* ft-l-ist-node :pointer)
(cffi:defcstruct ft-l-ist-node-rec- (prev ft-l-ist-node) (next ft-l-ist-node) (data :pointer))
(cffi:defcstruct ft-l-ist-rec- (head ft-l-ist-node) (tail ft-l-ist-node))
(cffi::defctype* ft-f-ace-i-nternal :pointer)
(cffi:defcstruct ft-f-ace-i-nternal-rec-)
(cffi:defcstruct ft-f-ace-rec- (num-faces ft-l-ong) (face-index ft-l-ong) (face-flags ft-l-ong)
 (style-flags ft-l-ong) (num-glyphs ft-l-ong) (family-name :pointer) (style-name :pointer)
 (num-fixed-sizes ft-i-nt) (available-sizes :pointer) (num-charmaps ft-i-nt) (charmaps :pointer)
 (generic ft-g-eneric) (bbox ft-bb-ox) (units-per-em ft-us-hort) (ascender ft-s-hort)
 (descender ft-s-hort) (height ft-s-hort) (max-advance-width ft-s-hort)
 (max-advance-height ft-s-hort) (underline-position ft-s-hort) (underline-thickness ft-s-hort)
 (glyph ft-g-lyph-slot) (size ft-s-ize) (charmap ft-c-har-map) (driver ft-d-river)
 (memory ft-m-emory) (stream ft-s-tream) (sizes-list ft-l-ist-rec) (autohint ft-g-eneric)
 (extensions :pointer) (internal ft-f-ace-i-nternal))
(cffi::defctype* ft-e-rror :int)
(cffi:defcstruct fts-ize (data :char :count 28))
(cffi:defcstruct ftf-ace (data :char :count 52))
(cffi::defctype* size-t :unsigned-int)
(cffi:defcstruct ftg-lyph-container)
(cffi:defcstruct ftf-ont (data :char :count 120))
(cffi:defcstruct ftg-lyph)
(cffi:defcstruct ftglo-utline-font (data :char :count 120))
(cffi:defcstruct ftglp-olygon-font (data :char :count 120))
(cffi:defcstruct ftglb-itmap-font (data :char :count 120))
(cffi::defctype* gl-sizei :int)
(cffi::defctype* gl-uint :unsigned-int)
(cffi:defcstruct ftglt-exture-font (data :char :count 176))
(cffi:defcstruct ftglp-ixmap-font (data :char :count 120))
(cffi:defcstruct ftt-exture-glyph)
(cl:progn
 (cl:progn (cffi:defcfun ("_ZN7FTPointC1Ev" ftp-oint-new-1-) :void (this :pointer))
  (cl:defun ftp-oint-new-1 ()
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftp-oint))) (ftp-oint-new-1- -pobj-) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN7FTPointC1Eddd" ftp-oint-new-2-) :void (this :pointer) (x ftgl-double)
   (y ftgl-double) (z ftgl-double))
  (cl:defun ftp-oint-new-2 (x y z)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftp-oint))) (ftp-oint-new-2- -pobj- x y z) -pobj-)))
 (cffi:defcfun ("_ZN7FTPointpLERKS_" ftp-oint-operator+=) :pointer (this :pointer)
  (point :pointer))
 (cffi:defcfun ("_ZN7FTPointplERKS_" ftp-oint-operator+) ftp-oint (this :pointer) (point :pointer))
 (cffi:defcfun ("_ZN7FTPointmlEd" ftp-oint-operator*) ftp-oint (this :pointer)
  (multiplier :double))
 (cffi:defcfun ("_ZNK7FTPointcvPKdEv" ftp-oint-to-anonymous-3717) :pointer (this :pointer))
 (cffi:defcfun ("_ZN7FTPoint1XEd" ftp-oint-x) :void (this :pointer) (x ftgl-double))
 (cffi:defcfun ("_ZN7FTPoint1YEd" ftp-oint-y) :void (this :pointer) (y ftgl-double))
 (cffi:defcfun ("_ZN7FTPoint1ZEd" ftp-oint-z) :void (this :pointer) (z ftgl-double))
 (cffi:defcfun ("_ZNK7FTPoint1XEv" ftp-oint-x-1) ftgl-double (this :pointer))
 (cffi:defcfun ("_ZNK7FTPoint1YEv" ftp-oint-y-1) ftgl-double (this :pointer))
 (cffi:defcfun ("_ZNK7FTPoint1ZEv" ftp-oint-z-1) ftgl-double (this :pointer))
 (cl:progn (cffi:defcfun ("_ZN6FTSizeC1Ev" fts-ize-new-1-) :void (this :pointer))
  (cl:defun fts-ize-new-1 ()
   (cl:let ((-pobj- (cffi:foreign-alloc 'fts-ize))) (fts-ize-new-1- -pobj-) -pobj-)))
 (cl:defun fts-ize-delete (this) (vzn:virtual-funcall this 0 :pointer this :void))
 (cffi:defcfun ("_ZN6FTSize8CharSizeEPP11FT_FaceRec_jjj" fts-ize-c-har-size) :char (this :pointer)
  (face :pointer) (point_size :unsigned-int) (x_resolution :unsigned-int)
  (y_resolution :unsigned-int))
 (cffi:defcfun ("_ZNK6FTSize8CharSizeEv" fts-ize-c-har-size-1) :unsigned-int (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize8AscenderEv" fts-ize-a-scender) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize9DescenderEv" fts-ize-d-escender) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize6HeightEv" fts-ize-h-eight) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize5WidthEv" fts-ize-w-idth) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize9UnderlineEv" fts-ize-u-nderline) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTSize5ErrorEv" fts-ize-e-rror) ft-e-rror (this :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN6FTFaceC1EPKc" ftf-ace-new-1-) :void (this :pointer) (fontFilePath :string))
  (cl:defun ftf-ace-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftf-ace))) (ftf-ace-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN6FTFaceC1EPKhj" ftf-ace-new-2-) :void (this :pointer) (pBufferBytes :pointer)
   (bufferSizeInBytes size-t))
  (cl:defun ftf-ace-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftf-ace)))
    (ftf-ace-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftf-ace-delete (this) (vzn:virtual-funcall this 0 :pointer this :void))
 (cffi:defcfun ("_ZN6FTFace6AttachEPKc" ftf-ace-a-ttach) :char (this :pointer)
  (fontFilePath :string))
 (cffi:defcfun ("_ZN6FTFace6AttachEPKhj" ftf-ace-a-ttach-1) :char (this :pointer)
  (pBufferBytes :pointer) (bufferSizeInBytes size-t))
 (cffi:defcfun ("_ZNK6FTFace4FaceEv" ftf-ace-f-ace) :pointer (this :pointer))
 (cffi:defcfun ("_ZN6FTFace4SizeEjj" ftf-ace-s-ize) :pointer (this :pointer) (size :unsigned-int)
  (res :unsigned-int))
 (cffi:defcfun ("_ZN6FTFace12CharMapCountEv" ftf-ace-c-har-map-count) :unsigned-int
  (this :pointer))
 (cffi:defcfun ("_ZN6FTFace11CharMapListEv" ftf-ace-c-har-map-list) :pointer (this :pointer))
 (cffi:defcfun ("_ZN6FTFace11KernAdvanceEjj" ftf-ace-k-ern-advance) ftp-oint (this :pointer)
  (index1 :unsigned-int) (index2 :unsigned-int))
 (cffi:defcfun ("_ZN6FTFace5GlyphEji" ftf-ace-g-lyph) ft-g-lyph-slot (this :pointer)
  (index :unsigned-int) (load_flags ft-i-nt))
 (cffi:defcfun ("_ZNK6FTFace10GlyphCountEv" ftf-ace-g-lyph-count) :unsigned-int (this :pointer))
 (cffi:defcfun ("_ZNK6FTFace5ErrorEv" ftf-ace-e-rror) ft-e-rror (this :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN6FTFontC1EPKc" ftf-ont-new-1-) :void (this :pointer) (fontFilePath :string))
  (cl:defun ftf-ont-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftf-ont))) (ftf-ont-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN6FTFontC1EPKhj" ftf-ont-new-2-) :void (this :pointer) (pBufferBytes :pointer)
   (bufferSizeInBytes size-t))
  (cl:defun ftf-ont-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftf-ont)))
    (ftf-ont-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftf-ont-delete (this) (vzn:virtual-funcall this 0 :pointer this :void))
 (cffi:defcfun ("_ZN6FTFont6AttachEPKc" ftf-ont-a-ttach) :char (this :pointer)
  (fontFilePath :string))
 (cffi:defcfun ("_ZN6FTFont6AttachEPKhj" ftf-ont-a-ttach-1) :char (this :pointer)
  (pBufferBytes :pointer) (bufferSizeInBytes size-t))
 (cffi:defcfun ("_ZN6FTFont7CharMapE12FT_Encoding_" ftf-ont-c-har-map) :char (this :pointer)
  (encoding ft-e-ncoding))
 (cffi:defcfun ("_ZN6FTFont12CharMapCountEv" ftf-ont-c-har-map-count) :unsigned-int
  (this :pointer))
 (cffi:defcfun ("_ZN6FTFont11CharMapListEv" ftf-ont-c-har-map-list) :pointer (this :pointer))
 (cl:defun ftf-ont-f-ace-size (this size res)
  (vzn:virtual-funcall this 3 0 :pointer this :unsigned-int size :unsigned-int res :char))
 (cffi:defcfun ("_ZNK6FTFont8FaceSizeEv" ftf-ont-f-ace-size-1) :unsigned-int (this :pointer))
 (cl:defun ftf-ont-d-epth (this depth)
  (vzn:virtual-funcall this 4 0 :pointer this :float depth :void))
 (cffi:defcfun ("_ZN6FTFont14UseDisplayListEb" ftf-ont-u-se-display-list) :void (this :pointer)
  (useList :char))
 (cffi:defcfun ("_ZNK6FTFont8AscenderEv" ftf-ont-a-scender) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTFont9DescenderEv" ftf-ont-d-escender) :float (this :pointer))
 (cffi:defcfun ("_ZNK6FTFont10LineHeightEv" ftf-ont-l-ine-height) :float (this :pointer))
 (cffi:defcfun ("_ZN6FTFont4BBoxEPKcRfS2_S2_S2_S2_S2_" ftf-ont-bb-ox) :void (this :pointer)
  (string :string) (llx :pointer) (lly :pointer) (llz :pointer) (urx :pointer) (ury :pointer)
  (urz :pointer))
 (cffi:defcfun ("_ZN6FTFont4BBoxEPKwRfS2_S2_S2_S2_S2_" ftf-ont-bb-ox-1) :void (this :pointer)
  (string :pointer) (llx :pointer) (lly :pointer) (llz :pointer) (urx :pointer) (ury :pointer)
  (urz :pointer))
 (cffi:defcfun ("_ZN6FTFont7AdvanceEPKw" ftf-ont-a-dvance) :float (this :pointer)
  (string :pointer))
 (cffi:defcfun ("_ZN6FTFont7AdvanceEPKc" ftf-ont-a-dvance-1) :float (this :pointer)
  (string :string))
 (cl:defun ftf-ont-r-ender (this string)
  (vzn:virtual-funcall this 5 0 :pointer this :string string :void))
 (cl:defun ftf-ont-r-ender-1 (this string)
  (vzn:virtual-funcall this 6 0 :pointer this :pointer string :void))
 (cffi:defcfun ("_ZNK6FTFont5ErrorEv" ftf-ont-e-rror) ft-e-rror (this :pointer))
 (cl:defun ftf-ont-m-ake-glyph (this g)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int g :pointer))
 (cffi:defcfun ("_ZN6FTFont10CheckGlyphEj" ftf-ont-c-heck-glyph) :char (this :pointer)
  (chr :unsigned-int))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLOutlineFontC1EPKc" ftglo-utline-font-new-1-) :void (this :pointer)
   (fontFilePath :string))
  (cl:defun ftglo-utline-font-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglo-utline-font)))
    (ftglo-utline-font-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLOutlineFontC1EPKhj" ftglo-utline-font-new-2-) :void (this :pointer)
   (pBufferBytes :pointer) (bufferSizeInBytes size-t))
  (cl:defun ftglo-utline-font-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglo-utline-font)))
    (ftglo-utline-font-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftglo-utline-font-delete (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun ftglo-utline-font-r-ender (this string)
  (vzn:virtual-funcall this 5 0 :pointer this :string string :void))
 (cl:defun ftglo-utline-font-r-ender-1 (this string)
  (vzn:virtual-funcall this 6 0 :pointer this :pointer string :void))
 (cl:defun ftglo-utline-font-m-ake-glyph (this g)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int g :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLPolygonFontC1EPKc" ftglp-olygon-font-new-1-) :void (this :pointer)
   (fontFilePath :string))
  (cl:defun ftglp-olygon-font-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglp-olygon-font)))
    (ftglp-olygon-font-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLPolygonFontC1EPKhj" ftglp-olygon-font-new-2-) :void (this :pointer)
   (pBufferBytes :pointer) (bufferSizeInBytes size-t))
  (cl:defun ftglp-olygon-font-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglp-olygon-font)))
    (ftglp-olygon-font-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftglp-olygon-font-delete (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun ftglp-olygon-font-m-ake-glyph (this g)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int g :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN14FTGLBitmapFontC1EPKc" ftglb-itmap-font-new-1-) :void (this :pointer)
   (fontFilePath :string))
  (cl:defun ftglb-itmap-font-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglb-itmap-font)))
    (ftglb-itmap-font-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN14FTGLBitmapFontC1EPKhj" ftglb-itmap-font-new-2-) :void (this :pointer)
   (pBufferBytes :pointer) (bufferSizeInBytes size-t))
  (cl:defun ftglb-itmap-font-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglb-itmap-font)))
    (ftglb-itmap-font-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftglb-itmap-font-delete (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun ftglb-itmap-font-r-ender (this string)
  (vzn:virtual-funcall this 5 0 :pointer this :string string :void))
 (cl:defun ftglb-itmap-font-r-ender-1 (this string)
  (vzn:virtual-funcall this 6 0 :pointer this :pointer string :void))
 (cl:defun ftglb-itmap-font-m-ake-glyph (this g)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int g :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLTextureFontC1EPKc" ftglt-exture-font-new-1-) :void (this :pointer)
   (fontFilePath :string))
  (cl:defun ftglt-exture-font-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglt-exture-font)))
    (ftglt-exture-font-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN15FTGLTextureFontC1EPKhj" ftglt-exture-font-new-2-) :void (this :pointer)
   (pBufferBytes :pointer) (bufferSizeInBytes size-t))
  (cl:defun ftglt-exture-font-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglt-exture-font)))
    (ftglt-exture-font-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftglt-exture-font-delete (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun ftglt-exture-font-f-ace-size (this size res)
  (vzn:virtual-funcall this 3 0 :pointer this :unsigned-int size :unsigned-int res :char))
 (cl:defun ftglt-exture-font-r-ender (this string)
  (vzn:virtual-funcall this 5 0 :pointer this :string string :void))
 (cl:defun ftglt-exture-font-r-ender-1 (this string)
  (vzn:virtual-funcall this 6 0 :pointer this :pointer string :void))
 (cl:defun ftglt-exture-font-m-ake-glyph (this glyphIndex)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int glyphIndex :pointer))
 (cffi:defcfun
  ("_ZN15FTGLTextureFont20CalculateTextureSizeEv" ftglt-exture-font-c-alculate-texture-size) :void
  (this :pointer))
 (cffi:defcfun ("_ZN15FTGLTextureFont13CreateTextureEv" ftglt-exture-font-c-reate-texture) gl-uint
  (this :pointer))
 (cl:progn
  (cffi:defcfun ("_ZN14FTGLPixmapFontC1EPKc" ftglp-ixmap-font-new-1-) :void (this :pointer)
   (fontFilePath :string))
  (cl:defun ftglp-ixmap-font-new-1 (fontFilePath)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglp-ixmap-font)))
    (ftglp-ixmap-font-new-1- -pobj- fontFilePath) -pobj-)))
 (cl:progn
  (cffi:defcfun ("_ZN14FTGLPixmapFontC1EPKhj" ftglp-ixmap-font-new-2-) :void (this :pointer)
   (pBufferBytes :pointer) (bufferSizeInBytes size-t))
  (cl:defun ftglp-ixmap-font-new-2 (pBufferBytes bufferSizeInBytes)
   (cl:let ((-pobj- (cffi:foreign-alloc 'ftglp-ixmap-font)))
    (ftglp-ixmap-font-new-2- -pobj- pBufferBytes bufferSizeInBytes) -pobj-)))
 (cl:defun ftglp-ixmap-font-delete (this) (vzn:virtual-funcall this 9 0 :pointer this :void))
 (cl:defun ftglp-ixmap-font-r-ender (this string)
  (vzn:virtual-funcall this 5 0 :pointer this :string string :void))
 (cl:defun ftglp-ixmap-font-r-ender-1 (this string)
  (vzn:virtual-funcall this 6 0 :pointer this :pointer string :void))
 (cl:defun ftglp-ixmap-font-m-ake-glyph (this g)
  (vzn:virtual-funcall this 7 0 :pointer this :unsigned-int g :pointer)))
